{"version":3,"sources":["Api/AxiosClient.js","Api/UserApi.js","components/Footer.js","redux/actions/type.js","redux/services/autl.services.js","components/ModalLogin.js","redux/actions/auth.js","components/Header.js","pages/AboutUs.js","Api/donateEvensts.js","components/ListALl.js","pages/AllDonate.js","pages/Contact.js","components/Paypal.js","pages/Detail.js","components/Momo.js","components/HotListDonate.js","components/ListDonate.js","pages/Home.js","pages/Join.js","pages/ListDonator.js","pages/MailPost.js","components/EditProfile.js","components/ProfileUser.js","pages/Profile.js","pages/Resgister.js","redux/reducer/UserSlice.js","App.js","reportWebVitals.js","redux/reducer/auth.js","store.js","index.js"],"names":["require","config","AxiosClient","axios","create","baseURL","headers","withCredentials","UserApi","getMe","Promise","resolve","reject","currentUser","firebase","auth","id","uid","fullName","displayName","email","getLogout","get","putUpdateProfile","values","put","putChangePasss","postLoginGoogle","post","Footer","className","width","src","alt","to","style","textAlign","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","API_URL","exportedObject","register","then","res","console","log","data","status","message","success","alert","setTimeout","window","location","reload","user","catch","err","error","response","login","localStorage","setItem","JSON","stringify","logout","removeItem","TabPane","Tabs","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","ModalLogin","form","createRef","useState","isModalVisible","setIsModalVisible","isLoggedIn","useSelector","state","Error","setError","ErrorRegister","setErrorRegister","dispatch","useDispatch","data-id","type","onClick","e","visible","onOk","current","resetFields","onCancel","footer","tab","name","initialValues","remember","onFinish","AuthService","payload","toString","ref","color","Item","rules","required","pattern","RegExp","min","max","prefix","UserOutlined","placeholder","autoComplete","LockOutlined","htmlType","fontWeight","firebaseAuth","getFieldValue","validator","_","value","fontSize","height","lineHeight","zIndex","Header","menu","danger","signOut","span","selectedKeys","mode","marginLeft","overlay","href","preventDefault","DownOutlined","AboutUs","marginTop","bordered","donateEvensts","getAll","url","getCategory","getPostCategory","getListdonateUser","get50Donater","getAllDonater","postPayMomo","Search","Input","ListALl","props","listDonate","list","Text","Typography","React","ellipsis","setVisible","searchTerm","setSearchTerm","dayEnd","day","currentDay","Date","ngayconlai","parse","getTime","Math","floor","results","filter","title","toLowerCase","includes","toLocaleLowerCase","onChange","target","slice","map","item","count","categoryName","_id","borderRadius","hoverable","cover","image","undefined","tooltip","summary","trangThai","x","currentAmount","replace","setAmount","toFixed","percent","showInfo","UsergroupAddOutlined","luotDonate","endDay","prevValue","AllDonate","listDonates","setListdonates","setListdonate","listCategory","setListCategory","loadingSum","setLoadingSum","useEffect","scrollTo","fetchdonatesData","a","DonateEnvents","CategoryDonateEvents","fetchCategory","i","length","j","categoryPost","CategoryName","iconStyle","smooth","CheckOutlined","sum","Number","sumConinDonate","defaultActiveKey","size","centered","filterProduct","marginBottom","category","init","Contact","setContactNumber","Form","useForm","loading","numStr","random","substring","generateContactNumber","sendForm","TextArea","rows","wrapperCol","offset","HomeOutlined","PhoneOutlined","SendOutlined","Paypal","paypal","useRef","getData","getItem","vndToUsd","amountToDonate","Buttons","createOrder","actions","order","intent","purchase_units","description","amount","currency_code","onApprove","capture","onError","render","subTitle","extra","Option","Select","Step","Steps","layout","labelCol","Detail","useParams","Donate","setDonate","DonateID","setDonateID","img","setImg","checked","setChecked","licked","setLicked","setValue","setCurrent","AllDonator","setAllDonator","setAllDonates","load","setLoad","ReleatedPost","setReleatedPost","history","useHistory","idCategoryPost","fetchAllDonater","AllDonater","DonateEnvent","fetchData","componentMounted","useLocation","phoneSelector","noStyle","checkBtn","handlechecked","steps","content","onFinishFailed","errorInfo","phone","label","addonBefore","defaultValue","formatter","parser","autoSize","minRows","hidden","xs","sm","background","readOnly","coin","convertNumber","columns","dataIndex","key","text","html","happinessContent","onFinishMomo","ms","now","trim","MomoPay","errorCode","payUrl","display","justifyContent","numberOfDonations","Loading1","fontFamily","class","data-href","data-width","data-layout","data-action","data-size","data-share","dataSource","push","disabled","margin","Momo","open","HotListDonate","donator","setDonator","setid","Listhost","setListhost","showModal","currentTarget","dataset","handleCancel","next","prev","hotPost","ListDonate","Home","backgroundImage","backgroundSize","backgroundRepeat","Join","ListDonator","setloading","fetchCategoryPost","MailPost","Profile","username","User","KeyOutlined","ProfileUser","googleID","islogin","setAllDonate","History","setHistory","DonateHistory","fetchgetListdonateUser","forEach","element","donateEvent","merge3","flat","tabPosition","ProfileOutlined","HistoryOutlined","EditOutlined","formItemLayout","tailFormItemLayout","Resgister","scrollToFirstError","hasFeedback","Password","dependencies","createSlice","createAsyncThunk","params","thunkAPI","userApi","userReducer","initialState","reducers","extraReducers","fulfilled","action","reducer","initializeApp","apiKey","authDomain","App","setIsSignedIn","unregisterAuthObserver","onAuthStateChanged","actionResult","unwrapResult","onUpdate","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","UserReducer","ReactDOM","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.72111f17.chunk.js","sourcesContent":["import axios from \"axios\";\r\nrequire('dotenv').config()\r\n\r\nconst AxiosClient = axios.create({\r\n    baseURL: \"https://donatethesis.herokuapp.com/api\",\r\n    //https://donatethesis.herokuapp.com/api\r\n    headers: {\r\n        \"content-type\": \"application/json\"\r\n    },\r\n    withCredentials: true\r\n});\r\nexport default AxiosClient;","import firebase from \"firebase\";\r\nimport AxiosClient from \"./AxiosClient\"\r\nconst UserApi = {\r\n    getMe: () => {\r\n        return new Promise((resolve, reject) => {\r\n            const currentUser = firebase.auth().currentUser;\r\n            resolve({\r\n                id: currentUser.uid,\r\n                fullName: currentUser.displayName,\r\n                email: currentUser.email,\r\n            })\r\n        }\r\n        )\r\n    },\r\n    getLogout: () => {\r\n        const url = \"/logout\";\r\n        return AxiosClient.get(url)\r\n    },\r\n    putUpdateProfile: (values) => {\r\n        const url = \"/updateProfileUser\";\r\n        return AxiosClient.put(url, values)\r\n    },\r\n    putChangePasss: (values) => {\r\n        const url = \"/changePassword\";\r\n        return AxiosClient.put(url, values)\r\n    },\r\n    postLoginGoogle: (values) => {\r\n        const url = \"/loginByGoogle\";\r\n        return AxiosClient.post(url, values)\r\n    },\r\n\r\n}\r\nexport default UserApi;\r\n","import { FacebookOutlined, InstagramOutlined, TwitterOutlined, YoutubeOutlined } from '@ant-design/icons';\r\nimport { Divider } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Footer.scss\";\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"footer\">\r\n                <Divider />\r\n                <div className=\"container\">\r\n                    <div className=\"footer_text col-10 offset-1 \">\r\n                        <div className=\"row\">\r\n                            <div className=\"footer_text-head\">\r\n                                <div className=\"img \">\r\n                                    <img width=\"40px\" src=\"../images/logo.png\" alt=\"logo\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className=\"wapper_menu\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"menu_item-text\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p className=\"text-bold\">About Us</p>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <Link to=\"gioi-thieu\" > <span className=\"btn-text\">About Us</span></Link>\r\n\r\n                                                </li>\r\n                                             {/*    <li>\r\n                                                    <a href=\"#/\">Terms & Conditions</a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"#/\">Privacy Policy</a>\r\n                                                </li> */}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"menu_item-text\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p className=\"text-bold\">Help</p>\r\n                                                </li>\r\n\r\n                                                <li>\r\n                                                    <Link to=\"/lien-he\">Contact Us</Link>\r\n\r\n                                                </li>\r\n\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer_end\">\r\n                    <div className=\"container\">\r\n                        <div className=\"footer_end_text col-10 offset-1 \">\r\n                            <p style={{textAlign:\"center\"}}> Copyright © Đoàn Văn Duy Tâm & Quách Trọng Nhân</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n    ","import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nconst API_URL = \"http://localhost:4000/api\";\r\n//const API_URLRS =\"http://localhost:4000/\";\r\n//https://donatethesis.herokuapp.com/api\r\nconst register = (values) => {\r\n  return axios.post(API_URL + \"/signup\",values).then((res)=>{\r\n    console.log(res.data.status);\r\n    if (res.data.status ===\"success\") {\r\n      console.log(res.data.status);\r\n      message.success(\"Đăng kí thành công!\")\r\n      alert(\"Đăng ký thành công, vui lòng đăng nhập!\")\r\n        setTimeout(()=>{\r\n                    window.location.reload();\r\n                  },2000)\r\n      return res.data.data.user;\r\n    }\r\n    \r\n  })\r\n  .catch(err=>{\r\n    let data = {\r\n      status: \"error\",\r\n      error: err.response.data.error\r\n    };\r\n    //alert(data.error);\r\n    return data;\r\n    //return\r\n  });\r\n  \r\n};\r\n\r\nconst login = (values) => {\r\n  \r\n  return axios\r\n    .post(API_URL + \"/login\", values, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n     \r\n    })\r\n    .then((response) => {\r\n      if (response.data.status ===\"success\") {\r\n        console.log(response.data.status);\r\n        message.success(\"Đăng nhập thành công! \")\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.data.user));\r\n        //Cookies.set('userKaca', response.data.data, {path: '/', maxAge: 30000, httpOnly: true });\r\n        //window.location.reload()\r\n\r\n      }\r\n\r\n      return response.data.data.user;\r\n    })\r\n    .catch(err=>{\r\n      let data = {\r\n        status: \"error\",\r\n        error: err.response.data.error\r\n      };\r\n      return data;\r\n      //return\r\n    });\r\n    \r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\n/* export default {\r\n  register,\r\n  login,\r\n  logout,\r\n}; */\r\nconst exportedObject = {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\nexport default exportedObject;","import { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Tabs } from 'antd';\r\nimport React, { createRef, useState } from 'react';\r\nimport GoogleButton from 'react-google-button';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { /* useHistory, */ Redirect } from 'react-router-dom';\r\nimport { login, register } from \"../redux/actions/auth.js\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/ModalLogin.scss\";\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nconst { TabPane } = Tabs;\r\nconst uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInSuccessUrl: \"/\",\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n\r\n\r\n    ]\r\n}\r\nconst ModalLogin = () => {\r\n    //const [form] = Form.useForm();\r\n    const form = createRef();\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [Error, setError] = useState(\"\");\r\n    const [ErrorRegister, setErrorRegister] = useState(\"\");\r\n    //const [Key, setKey] = useState(\"\");\r\n    //const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    //const { isLoggedIn } = useSelector(state => state.auth);\r\n    //const message = useSelector(state => state.auth.user);\r\n    //const history = useHistory();\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        form.current.resetFields();\r\n        setError(\"\")\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        form.current.resetFields();\r\n        setError(\"\")\r\n    };\r\n    const onFinish = (values) => {\r\n        //setLoading(true);\r\n        form.current.resetFields();\r\n        dispatch(login(values))\r\n            .then((res) => {\r\n                console.log(res);\r\n                setError(res)\r\n            })\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    const onResgiter = (values) => {\r\n        console.log(values);\r\n        dispatch(register(values)).then((res) => {\r\n            console.log(res);\r\n            setErrorRegister(res)\r\n        })\r\n    }\r\n    if (isLoggedIn !== null) {\r\n        <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <>\r\n            <Button className=\"ant-btn-login\" data-id=\"1\" type=\"primary\" onClick={showModal}>\r\n                Đăng nhập / Đăng kí\r\n            </Button>\r\n            <Modal visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n                width={800} footer={null}\r\n            >\r\n                <Tabs /* onChange={callback} */>\r\n                    <TabPane tab=\"Đăng nhập\" key=\"1\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 bg-login\">\r\n\r\n                            </div>\r\n                            <div className=\"col-6 frm\" >\r\n                                <h3>Xin Chào !</h3>\r\n                                <Form\r\n                                    name=\"normal_login\"\r\n                                    className=\"login-form\"\r\n                                    initialValues={{ remember: true }}\r\n                                    onFinish={onFinish}\r\n                                    ref={form}\r\n                                >\r\n                                    <p style={{ color: \"red\" }} className=\"error\">{Error}</p>\r\n                                    <p>Tài khoản </p>\r\n                                    <Form.Item\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Hãy nhập tài khoản!' },\r\n                                            {\r\n                                                pattern: new RegExp(/^[a-zA-Z0-9]{3,16}$/),\r\n                                                message: \"Tài khoản phải không có kí tự đặc biệt !\",\r\n                                            },\r\n                                            {\r\n                                                min:3,\r\n                                                max:16,\r\n                                                message: 'Tài khoản phải từ 3-16 kí tự !',\r\n                                            }\r\n                                        ]}>\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Tài khoản\" autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p>Mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập mật khẩu!' },\r\n                                        {\r\n                                            min:8,\r\n                                            max:16,\r\n                                            message: 'Mật khẩu phải từ 8-16 kí tự !',\r\n                                        }]}\r\n                                    >\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n                                            placeholder=\"Mật khẩu\"\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Đăng nhập\r\n                                        </Button>\r\n\r\n                                    </Form.Item>\r\n                                </Form>\r\n                                <p style={{fontWeight:\"bolder\"}}>Hoặc</p>\r\n                                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"Đăng kí\" key=\"2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 bg-register\">\r\n\r\n                            </div>\r\n                            <div className=\"col-6 frm\" >\r\n                                <h3>Tạo tài khoản !</h3>\r\n                                <Form\r\n                                    name=\"normal_resgiter\"\r\n                                    className=\"resgiter-form\"\r\n                                    initialValues={{ remember: true }}\r\n                                    onFinish={onResgiter}\r\n                                    ref={form} >\r\n                                    <p style={{ color: \"red\" }} className=\"error\">{ErrorRegister}</p>\r\n\r\n                                    <p><span>*</span> Tài khoản </p>\r\n                                    <Form.Item\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tài khoản!' },\r\n                                        {\r\n                                            pattern: new RegExp(/^[a-zA-Z0-9]{3,16}$/),\r\n                                            message: \"Tài khoản phải không có kí tự đặc biệt !\",\r\n                                        }]}\r\n                                    >\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Họ và tên</p>\r\n                                    <Form.Item\r\n                                        name=\"fullName\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập họ tên !' }]}\r\n                                    >\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                                        ]}\r\n                                    >\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Nhập lại mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"passwordConfirm\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy nhập mật khẩu !',\r\n                                            },\r\n                                            ({ getFieldValue }) => ({\r\n                                                validator(_, value) {\r\n                                                    if (!value || getFieldValue('password') === value) {\r\n                                                        return Promise.resolve();\r\n                                                    }\r\n                                                    return Promise.reject(new Error('Hai mật khẩu phải trùng nhau !'));\r\n                                                },\r\n                                            }),\r\n                                        ]}>\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <p><span>*</span> Email</p>\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'The input is not valid E-mail!',\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your E-mail!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"resgister-form-button\">\r\n                                            Đăng kí\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ModalLogin;\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./type\";\r\n\r\nimport AuthService from \"../services/autl.services\";\r\n\r\nexport const register = (values) => (dispatch) => {\r\n  return AuthService.register(values).then(\r\n    (data) => {\r\n      if (data.status !== 'error') {\r\n        dispatch({\r\n          type: REGISTER_SUCCESS,\r\n          //payload: { user: data },\r\n        });\r\n        dispatch({\r\n          type: SET_MESSAGE,\r\n          payload: data.data.message,\r\n        });\r\n        return Promise.resolve();\r\n      } else {\r\n        return data.error;\r\n      }\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\nexport const login = (values) => (dispatch) => {\r\n  return AuthService.login(values).then(\r\n    (data) => {\r\n      if (data.status !== 'error') {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: { user: data },\r\n        });\r\n\r\n        return Promise.resolve();\r\n      } else {\r\n        return data.error;\r\n      }\r\n\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","//import { AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Col, /* Button, */ Dropdown, Menu, Row } from 'antd';\r\nimport firebase from 'firebase';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport UserApi from '../Api/UserApi';\r\nimport { logout } from \"../redux/actions/auth.js\";\r\nimport \"../style/Header.scss\";\r\nimport ModalLogin from './ModalLogin';\r\n/* const handleClick = (e) => {\r\n    console.log(e.target);\r\n} */\r\nconst style = {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    height: \"65px\",\r\n    lineHeight: \"65px\",\r\n    zIndex: '1000',\r\n}\r\nconst Header = () => {\r\n    const { isLoggedIn } = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.login.user);\r\n    const logOut = () => {\r\n        \r\n        \r\n        UserApi.getLogout().then((res)=>{\r\n         \r\n            if(res.data.status===\"success\"){\r\n                firebase.auth().signOut();\r\n                dispatch(logout());\r\n                localStorage.removeItem('user');\r\n               \r\n            }\r\n        })\r\n    };\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to=\"\">Trang chủ</Link>\r\n            </Menu.Item>\r\n            <Menu.Item >\r\n                <Link to=\"/thong-tin-tai-khoan\">Thông tin tài khoản</Link>\r\n            </Menu.Item>\r\n            <Menu.Item danger >\r\n                <Link onClick={logOut}>Đăng xuất</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n   \r\n    <Redirect to=\"/\" />\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24} >\r\n                    <Menu style={style} /* onClick={handleClick} */ selectedKeys={\"hehe\"} mode=\"horizontal\">\r\n                        <Menu.Item className=\"logo-item\" key=\"mail\">\r\n                            <Link to=\"\"><img alt=\"logo\" style={{ marginLeft: '30px', fontWeight:\"bold\" }} width=\"40px\" src=\"../images/logo.png\" ></img></Link>\r\n                        </Menu.Item>\r\n                      \r\n                        <Menu.Item style={{  fontWeight:\"bolder\" }}  key=\"about\">\r\n                         \r\n                          <Link to=\"gioi-thieu\"> Về chúng tôi</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"contact\">\r\n                            <Link style={{  fontWeight:\"bolder\" }}  to=\"/lien-he\">Liên hệ</Link>\r\n                        </Menu.Item>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Menu.Item className=\"right\" key=\"sign-up\" >\r\n                                    <ModalLogin />\r\n                                </Menu.Item>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                             \r\n                                <Dropdown className='right' overlay={menu}>\r\n                                    <a href=\"#/\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        {data.fullName } <DownOutlined />\r\n                                    </a>\r\n                                </Dropdown>\r\n                            </>\r\n                        )}\r\n                    </Menu>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","\r\nimport React from 'react';\r\nimport { Card,} from 'antd';\r\nimport \"../style/About.scss\"\r\nimport \"../style/bootstrap-grid.min.css\";\r\nconst AboutUs = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\" About-Us\">\r\n                                <h3 className=\"title\">Giới thiệu</h3>\r\n\r\n                            </div>\r\n                            <div className=\"content\">\r\n                                <p>\r\n                                    <p>Nhận thấy nhu cầu làm từ thiện, đóng góp cho cộng đồng của các nhà hảo tâm và có nhiều hoàn cảnh khó khăn cần sự giúp đỡ mà các nhà hảo tâm chưa tiếp cận được. Chúng tôi đã sáng lập ra website hỗ trợ cho việc gây quỹ và giúp đỡ các hoàn cảnh khó khăn với tên gọi là Quỹ Trao Yêu Thương. Với đặc điểm nổi bật như dễ dàng tiếp cận và thông tin đầy đủ của các hoàn cảnh, chương trình gây quỹ, dễ dàng và nhanh chóng trong việc ủng hộ qua thanh toán trực tuyến, minh bạch chi tiêu,...</p>\r\n                                    <p>Các đặc điểm của Quỹ Trao Yêu Thương</p>\r\n                                    <p>Tóm tắt:</p>\r\n                                    <ul>\r\n                                        <li>\r\n                                        Quỹ hoạt động theo nguyên tắc: chi phí quản trị bằng không. Toàn bộ tiền đóng góp của nhà hảo tâm chuyển hết cho người thụ hưởng\r\n                                        </li>\r\n                                        <li>\r\n                                        Quỹ được quản lý, giám sát tài chính minh bạch chặt chẽ. Mọi nghiệp vu thu chi được cập nhật theo thời gian thực (real time) bằng các phần mềm di động.\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                   {/*  <p>• Quỹ hoạt động theo nguyên tắc: chi phí quản trị bằng không. Toàn bộ tiền đóng góp của nhà hảo tâm chuyển hết cho người thụ hưởng</p>\r\n                                    <p> • Quỹ được quản lý, giám sát tài chính minh bạch chặt chẽ. Mọi nghiệp vu thu chi được cập nhật theo thời gian thực (real time) bằng các phần mềm di động.</p>\r\n */}\r\n                                    <p>Số liệu ghi nhận </p>\r\n                                    <ul>\r\n                                        <li>\r\n                                        Suốt gần 3 tháng qua (từ 5/2021 ~ 8/2021) đã có 600 lượt nhà hảo tâm đóng góp số tiền 38.148.893.198 VNĐ.\r\n                                        </li>\r\n                                    </ul>\r\n                                 \r\n                                    <p> \r\n                                    Đây là quỹ từ thiện có chi phí quản lý bằng 0. Điều này có nghĩa là toàn bộ tiền đóng góp của nhà hảo tâm đều được chuyển hết cho đối tượng thụ hưởng, không trích lại chi phí cho bộ máy. Bên cạnh việc đóng góp cho Quỹ, những nhà sáng lập và thành viên điều hành Quỹ còn có nhiệm vụ tìm kiếm nguồn kinh phí để trang trải cho các chi phí của quỹ như tiền thuê nhà, tiền lương, tiền vận chuyển và chi phí viễn thông v.v… </p> \r\n                                    <p> \r\n                                    Tiền đóng góp của nhà hảo tâm sẽ được đưa hết 100% vào Quỹ để sử dụng cho các dự án từ thiện. Nhà hảo tâm có thể đóng góp có chỉ định chương trình gây quỹ cụ thể. Số tiền đóng góp này phải được ban quản lý quỹ đối xử hết sức trân trọng, cân nhắc cẩn thận khi sử dụng cho mục đích từ thiện. Số tiền này còn được gọi là tiền thiêng liêng.\r\n                                    </p> \r\n                                    <p> \r\n                                    Để trang trải mọi hoạt động của Quỹ, những nhà sáng lập và thành viên điều hành phải tự lo liệu kinh phí hoạt động. Để phân biệt, số tiền dành để chi cho kinh phí hoạt động gọi là tiền phương tiện hay Quỹ Phương Tiện, chỉ những nhà sáng lập hoặc thành viên điều hành hoặc thân hữu của họ mới được phép đóng góp số tiền phương tiện này. Để chắc chắc đủ kinh phí hoạt động, một nhóm đối tác của Quỹ tên là nhóm Phương Tiện được lập ra để lo liệu kinh phí hoạt động.\r\n                                    </p> \r\n                                    <p> \r\n                                    Tóm lại, những nguồn thu nhân danh Quỹ Trao Yêu Thương đều phải đưa vào tiền thiêng liêng và chuyển hết cho người thụ hưởng. Một nhóm đối tác gọi là nhóm Phương tiện do ban điều hành lập ra để kiếm tiền nuôi sống bộ máy Quỹ. Nhóm này chỉ giới hạn trong ban sáng lập, điều hành, hoặc thân hữu của họ và không được phép nhân danh Quỹ Trao Yêu Thương trong các hoạt động tạo nguồn thu.\r\n                                    </p> \r\n                                    <p> \r\n                                    Các chương trình gây quỹ đang tiến hành\r\n                                    </p> \r\n                                    <p> \r\n                                    Dự án hỗ trợ y tế: hỗ trợ các trường hợp người nghèo khó khăn khi điều trị các bệnh tật, các trường hợp túng quẫn không có khả năng chi trả chi phí thuốc men, dịch vụ khám chữa bệnh. Quỹ tiến hành xây dựng các Trạm lắng nghe để tiếp nhận thông tin trợ giúp y tế\r\n                                    </p> \r\n                                    <p> \r\n                                    Dự án hỗ suất ăn giá rẻ:hỗ trợ các trường hợp người nghèo bằng các suất ăn/uống giá rẻ qua các điểm bán hàng, các quán cơm v.v… Cung cấp các bữa ngon gồm các món nước như Phở, bún bò, hủ tiếu, mì gà v.v…\r\n                                    </p> \r\n                                    <p> \r\n                                    Nguồn đóng góp ban đầu </p> \r\n                                    <p> \r\n                                    Quỹ Trao Yêu Thương hoạt động từ tháng 5 năm 2021 với nguồn đóng góp ban đầu là 100 triệu đồng do các sáng lập viên đóng góp.\r\n                                    </p> \r\n                                </p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutUs;\r\n","import AxiosClient from \"./AxiosClient\"\r\nconst donateEvensts ={  \r\n   getAll: ()=>{\r\n    //http://localhost:4000/api/donateEvents\r\n    const url = '/donateEvents';\r\n    return AxiosClient.get(url);\r\n   },\r\n   get: (id)=>{\r\n    const url = `/donateEvent/${id}`;\r\n    return AxiosClient.get(url);\r\n   },\r\n   getCategory: ()=>{\r\n       const url =\"/categoryDonateEvents\";  \r\n       return AxiosClient.get(url);\r\n   },\r\n   getPostCategory: (id)=>{\r\n    const url =`/relatedPost/${id}`;  \r\n    return AxiosClient.get(url);\r\n},\r\n   getListdonateUser:()=>{\r\n       const url =\"/allDonate\";\r\n       return AxiosClient.get(url)\r\n   },\r\n   get50Donater:(id)=>{\r\n    const url = `/50Donator/${id}`;\r\n    return AxiosClient.get(url);\r\n   },\r\n   getAllDonater:(id)=>{\r\n    const url = `/allDonator/${id}`;\r\n    return AxiosClient.get(url);\r\n   },\r\n   getLogout:()=>{\r\n       const url =\"/logout\";\r\n       return AxiosClient.get(url)\r\n   },\r\n   putUpdateProfile:(values)=>{\r\n    const url =\"/updateProfileUser\";\r\n    return AxiosClient.put(url,values)\r\n   },\r\n   putChangePasss:(values)=>{\r\n    const url =\"/changePassword\";\r\n    return AxiosClient.put(url,values)\r\n   },\r\n   postPayMomo:(values)=>{\r\n       const url =\"/payMomo\";\r\n       return AxiosClient.post(url,values)\r\n   }\r\n};\r\n\r\nexport default donateEvensts;\r\n","import { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Badge, Button, Card, Input, Progress, Typography } from 'antd';\r\nimport { FormProvider } from 'rc-field-form';\r\nimport React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Home.scss\";\r\nconst { Search } = Input;\r\nconst ListALl = (props) => {\r\n\r\n    const [list, /* setlist */] = useState([props.listDonate]);\r\n    const { Text } = Typography;\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const [visible, setVisible] = useState(9);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const showMoreItem = () => {\r\n        setVisible((prevValue) => prevValue + 6);\r\n    };\r\n\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    const onSearch = (value) => {\r\n        setSearchTerm(value.target.value);\r\n        console.log(value.target.value);\r\n    }\r\n    console.log(list);\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    \r\n    /*  useEffect(() => {\r\n         const results = people.filter(person =>\r\n           person.toLowerCase().includes(searchTerm)\r\n         );\r\n         setSearchResults(results);\r\n       }, [searchTerm]); */\r\n    const results = !searchTerm\r\n        ? props.listDonate\r\n        : props.listDonate.filter(list =>\r\n            list.title.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n    //setSearchResults(results)\r\n    console.log(results);\r\n    return (\r\n        <>\r\n            <Search className=\"input-search\" type=\"text\"\r\n                placeholder=\"Tìm kiếm\"\r\n                value={searchTerm}\r\n                onChange={onSearch} style={{ width: 800 }}\r\n            />\r\n            {results.slice(0, visible).map((item) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"col-4 \" >\r\n                            <Badge count={item.categoryName}>\r\n                                <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n                                    <Card className=\"margin-top\"\r\n                                        style={{ borderRadius: 10, height: 460 }}\r\n                                        hoverable\r\n                                        cover={<img alt=\"example\" src={item.image[0]} />}>\r\n                                        <Text className=\"title-text\" style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: `${item.title}` } : false} >\r\n                                            {item.title} </Text>\r\n                                        <Text className=\"title-tomtat\"\r\n                                            style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: 'Xem chi tiết !' } : false} >\r\n                                            {item.summary}\r\n                                        </Text>\r\n                                        {\r\n                                            item.trangThai === \"Dừng nhận donate\" ? (<><p className=\"tamngung\" >Tạm ngưng</p></>) : (<>\r\n\r\n                                                <div className=\"progress\">\r\n                                                    <div className=\"progress_detail_top\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            {convertNumber(item.currentAmount)} vnđ quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">\r\n\r\n                                                            {Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\r\n                                                                <p>Hoàn thành</p>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <p className=\"progress_detail_number\">{((item.currentAmount / item.setAmount) * 100).toFixed(3)}%</p>\r\n\r\n                                                                </>\r\n\r\n                                                            )}\r\n\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    <Progress percent={Math.floor((item.currentAmount / item.setAmount) * 100)} showInfo={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                                    <div className=\"progress_detail_bot\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            <UsergroupAddOutlined /> {item.luotDonate} lượt quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">{dayEnd(item.endDay)} ngày còn lại</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </>)\r\n                                        }\r\n\r\n\r\n                                    </Card>\r\n\r\n                                </Link>\r\n                            </Badge>\r\n                        </div>\r\n\r\n                    </>\r\n                )\r\n\r\n            })}\r\n            <Button onClick={showMoreItem} className=\"ant-btn ant-btn-primary bnt-load-more\" to=\"/tat-ca-chuong-trinh\" >Xem thêm </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListALl;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {  Spin, Tabs } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport donateEvensts from '../Api/donateEvensts';\r\n//import { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\n//import PayPal from \"../components/Paypal\"\r\n//import HotListDonate from \"../components/HotListDonate\"\r\nimport ListAll from '../components/ListALl';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\n//import { useSelector } from 'react-redux';\r\n//import { Redirect } from 'react-router-dom';\r\n//import ScrollToTopApi from '../Api/ScrollToTop';\r\nconst { TabPane } = Tabs;\r\nconst AllDonate = () => {\r\n    const [listDonates, setListdonates] = useState([]);\r\n    const [listDonate, setListdonate] = useState([]);\r\n    const [listCategory, setListCategory] = useState([]);\r\n    const [loadingSum, setLoadingSum] = useState(false);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    \r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setListdonate(res.data.DonateEnvents)\r\n                });\r\n                setLoadingSum(true)\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n\r\n        const fetchCategory = async () => {\r\n            try {\r\n                await donateEvensts.getCategory().then((res) => {\r\n                    setListCategory(res.data.CategoryDonateEvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchCategory();\r\n        fetchdonatesData();\r\n\r\n    }, []);\r\n    const handleClick = (e) => {\r\n        setListdonate(listDonates);\r\n        let filterProduct = [];\r\n        if (e === \"1\") {\r\n            filterProduct = listDonates;\r\n        } else {\r\n\r\n            filterProduct = listDonates.filter(\r\n                listDonates => listDonates.categoryPost === e\r\n            )\r\n            setListdonate(filterProduct)\r\n            console.log(filterProduct);\r\n\r\n\r\n        }\r\n    };\r\n    for (let i = 0; i < listDonate.length; i++) {\r\n        for (let j = 0; j < listCategory.length; j++) {\r\n            if (listDonate[i].categoryPost === listCategory[j]._id) {\r\n                listDonate[i].categoryName = listCategory[j].CategoryName;\r\n            }\r\n\r\n        }\r\n    }\r\n    const sumConinDonate = ()=>{\r\n        let sum = 0\r\n        for (let i = 0; i < listDonates.length; i++) {\r\n             sum =sum+  Number(listDonates[i].currentAmount);\r\n            \r\n        }\r\n        return sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n    }\r\n    const iconStyle = {\r\n        color: \"#2569d9\"\r\n    }\r\n    return (\r\n        <>\r\n            <ScrollToTop smooth={true} />\r\n          \r\n            <div className=\"homepage container-sm\">\r\n                <div className=\"homepage_content col-10 offset-1 \">\r\n                    <div>\r\n                        <h2 className=\"title\" >Hãy quyên góp cho những hoạt động mà bạn quan tâm</h2>\r\n                    </div>\r\n                    <div className=\"commitment\">\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />0% phí dịch vụ</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Thiết kế cho mục đích từ thiệt</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Được nhiều tổ chức từ thiện tin tưởng</p></div>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-primary btn-explore\" href=\"/explore\"><span className=\"btn-text\">Tìm hiểu về tổ chức từ thiện</span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text_wapper\">\r\n                        <p className=\"text-bold \">Chúng tôi đã quyên góp được</p>\r\n                        <h2 className=\"text-bold\"><span>{sumConinDonate()} VNĐ</span></h2>\r\n                        <div className=\"icon-micro-heart\"><img width=\"50px\" alt=\"Heart\" src=\"../images/hands.svg\" /></div>\r\n                        <div className=\"mb-1x\"><span className=\"text-medium\"><div className=\"html-sanitizer\">Hãy giúp chúng thôi một tay</div></span></div>\r\n                        <div className=\"text_wapper-about\"><a href=\"/about-us\"><span className=\"text-bold text-uppercase\">Tìm hiểu về chúng tôi</span></a></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_list\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các chương trình quyên góp</h2>\r\n                        <Tabs defaultActiveKey=\"1\" size=\"large\" centered onChange={handleClick} style={{ marginBottom: 32, }}>\r\n                            <TabPane tab=\"Tất cả\" key=\"1\">\r\n                            </TabPane>\r\n                            {/*  <TabPane tab=\"Mới nhất\" key=\"2\">\r\n                            </TabPane>\r\n                            <TabPane tab=\"Sắp hết hạn\" key=\"3\">\r\n                            </TabPane> */}\r\n                            {listCategory.map((category) => {\r\n                                return (\r\n                                    <>\r\n                                        <TabPane tab={category.CategoryName} key={category._id}>\r\n\r\n                                        </TabPane>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </Tabs>\r\n                        <div className=\"row all-donate\" >\r\n                           \r\n                            {loadingSum ? <ListAll listDonate={listDonate} /> : <Spin size=\"large\" />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllDonate;\r\n","\r\nimport React, { useState /* useEffect */,createRef } from 'react';\r\nimport { Card, Form, Input, Button,message } from 'antd';\r\nimport { init, sendForm } from 'emailjs-com';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Contact.scss\"\r\nimport { PhoneOutlined, HomeOutlined, SendOutlined } from '@ant-design/icons';\r\ninit('user_34PJkVJOxKj7nBHxWBCKl');\r\nconst Contact = () => {\r\n    const [/* contactNumber */, setContactNumber] = useState(\"000000\");\r\n    const [form] = Form.useForm();\r\n    const generateContactNumber = () => {\r\n        const numStr = \"000000\" + (Math.random() * 1000000 | 0);\r\n        setContactNumber(numStr.substring(numStr.length - 6));\r\n    }\r\n    const onFinish = () => {\r\n        message.loading(\"Đang gửi gmail...\")\r\n     \r\n        generateContactNumber();\r\n        sendForm('service_p1w3ye5', 'template_12aifjc', '#basic')\r\n        .then(function(response) {\r\n            if(response.status ===200){\r\n               \r\n                message.success(\"Gửi gmail thành công!\")\r\n                \r\n                form.resetFields();\r\n               \r\n            }\r\n          \r\n        }, function(error) {\r\n          console.log('FAILED...', error);\r\n          message.error(\"Gửi gmail không  thành công:\",error)\r\n        });\r\n    };\r\n   //let day =\"2018-04-04\"\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-1\">\r\n                            <div className=\" contact_form\">\r\n                                <h3 className=\"title\">Liên lạc</h3>\r\n                                <Form\r\n                                    style={{ width: \"450px\" }}\r\n                                    name=\"basic\"\r\n                                    id=\"basic\"\r\n                                    form={form} \r\n                                    onFinish={onFinish}  >\r\n                                    <Form.Item\r\n                                        name=\"user_name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tên!' }]}\r\n                                    >\r\n                                        <Input   name=\"user_name\" placeholder='Họ tên' />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_email\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập gmail!' }]}\r\n                                    >\r\n                                        <Input  name=\"user_email\" placeholder=\"Gmail\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"message\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập nội dung!' }]}\r\n                                    >\r\n                                        <Input.TextArea  name=\"message\" rows={5} placeholder=\"Nội dung\" />\r\n                                    </Form.Item>\r\n                                  \r\n                                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Gửi gmail\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-4 \">\r\n                            <h3 className=\"title\">Địa chỉ</h3>\r\n                            <div className=\"contact\">\r\n                                <div>\r\n                                    <p><HomeOutlined /> <span className=\"text-bold\">Địa chỉ: </span>80 Cao Lỗ ,quận 8,TP.HCM </p>\r\n                                    <p><PhoneOutlined /><span className=\"text-bold\"> Điện thoại: </span>0849119919</p>\r\n                                    <p><SendOutlined /> <span className=\"text-bold\">Email: </span>quyengop@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal,Result,Button } from 'antd';\r\n//import {Link} from \"react-router-dom\"\r\nconst Paypal = () => {\r\n    const paypal = useRef();\r\n    const getData = JSON.parse(localStorage.getItem(\"data\"))\r\n    const vndToUsd = (getData.amountToDonate / 23000).toFixed(2);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        window.location.reload();\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    console.log(vndToUsd);\r\n    useEffect(() => {\r\n        window.paypal\r\n            .Buttons({\r\n                createOrder: (data, actions, err) => {\r\n                    return actions.order.create({\r\n                        intent: \"CAPTURE\",\r\n                        purchase_units: [\r\n                            {\r\n                                description: `${getData.id}`,\r\n                                amount: {\r\n                                    currency_code: \"USD\",\r\n                                    value: `${vndToUsd}`,\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                },\r\n                onApprove: async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    console.log(order.status);\r\n                    const url = 'http://localhost:4000/api/donate';\r\n                    if (order.status === \"COMPLETED\") {\r\n                        console.log(order.status);\r\n                        console.log(getData);\r\n                        axios.post(url, {\r\n                            data: getData\r\n                        }, {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            withCredentials: true\r\n                        }).then((res)=>{\r\n                            console.log(res.data);\r\n                        })\r\n                        showModal();\r\n                    }\r\n                },\r\n                onError: (err) => {\r\n                    console.log(err);\r\n                },\r\n            })\r\n            .render(paypal.current);\r\n    }, [getData, vndToUsd]);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div ref={paypal}></div>\r\n            </div>\r\n            <Modal footer={null} title=\"\" visible={isModalVisible} onCancel={handleCancel}>\r\n                <Result\r\n                    status=\"success\"\r\n                    title=\"Cám ơn bạn đã ủng hộ !\"\r\n                    subTitle=\"Số tiền sẽ gữi cho người nhận ngay khi kết thúc chương trình !\"\r\n                    extra={[\r\n                        <Button onClick={handleOk} type=\"primary\" key=\"console\">\r\n                            Trở về trang chủ\r\n                        </Button>,\r\n                       \r\n                    ]}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paypal;\r\n","import { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Badge, Button, Card, Checkbox, Divider, Form, Image, Input, /* InputNumber, message, */ Modal, Progress, Result, Select,/*  Spin, */ Steps, Table, Tabs, Typography } from 'antd';\r\n//import axios from \"axios\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport parse from 'react-html-parser';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams,useLocation } from \"react-router-dom\";\r\nimport ScrollToTop from 'react-scroll-to-top';\r\nimport donateEvensts from '../Api/donateEvensts';\r\nimport PayPal from \"../components/Paypal\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Detail.scss\";\r\nimport \"../style/Momo.scss\";\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst Detail = () => {\r\n    let {_id} = useParams();\r\n    const [Donate, setDonate] = useState([]);\r\n    const [DonateID, setDonateID] = useState([]);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [img, setImg] = useState([]);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [licked, setLicked] = React.useState(false);\r\n    const [value, setValue] = useState(1);\r\n    const [current, setCurrent] = React.useState(0);\r\n    const [AllDonator, setAllDonator] = useState([]);\r\n    const [/* AllDonates */, setAllDonates] = useState([]);\r\n    const [load, setLoad]=useState(false);\r\n    //const [ArrayDonateCategory, setArrayDonateCategory] = useState([]);\r\n    const [ReleatedPost, setReleatedPost] = useState([]);\r\n    const data = useSelector(state => state.login.user);\r\n    const user= JSON.parse(localStorage.getItem(\"user\"))\r\n    const { Text } = Typography;\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const history = useHistory()\r\n    const idCategoryPost = Donate.categoryPost;\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n        setCurrent(0)\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n   \r\n    useEffect(() => {\r\n\r\n        window.scrollTo(0, 0)\r\n        const fetchData =  () => {\r\n            try {\r\n               \r\n                    donateEvensts.get(_id).then((res) => {\r\n                        setDonateID(res.data.DonateEnvent)\r\n                        console.log(res.data.DonateEnvent);\r\n                        //res.data.DonateEnvent.soTienCanDonate = res.data.DonateEnvent.soTienCanDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n                        setDonate(res.data.DonateEnvent);\r\n                        //console.log('ádas',res.data.DonateEnvent);\r\n                        setImg(res.data.DonateEnvent.image)\r\n    \r\n                    });\r\n              \r\n                setTimeout(()=>{\r\n                    donateEvensts.get(_id).then((res) => {\r\n                        setDonateID(res.data.DonateEnvent)\r\n                        console.log(res.data.DonateEnvent);\r\n                        //res.data.DonateEnvent.soTienCanDonate = res.data.DonateEnvent.soTienCanDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n                        setDonate(res.data.DonateEnvent);\r\n                        //console.log('ádas',res.data.DonateEnvent);\r\n                        setImg(res.data.DonateEnvent.image)\r\n    \r\n                    });\r\n                },3000)\r\n                \r\n            } catch (error) {\r\n                console.log(\"Failed to fetch Donate data at: \", error);\r\n            }\r\n        };\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setAllDonates(res.data.DonateEnvents);\r\n\r\n                });\r\n\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n        const fetchAllDonater = async () => {\r\n            try {\r\n                await donateEvensts.get50Donater(_id).then((res) => {\r\n                    if (res.data.status === \"success\") {\r\n                        /* res.data.AllDonater.soTienDonate = res.data.AllDonater.soTienDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\"); */\r\n                        setAllDonator(res.data.AllDonater)\r\n                    }\r\n\r\n                })\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch AllDonator data at: \", error);\r\n            }\r\n        }\r\n\r\n        fetchdonatesData();\r\n        fetchData();\r\n        fetchAllDonater();\r\n        //radomDonateEvent()\r\n    }, [licked, _id]);\r\n    //console.log(ReleatedPost);\r\n\r\n    let componentMounted = true;\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchCategoryPost =  () => {\r\n            setLoad(true);\r\n                 donateEvensts.getPostCategory(_id).then(async (res) => {\r\n                if(componentMounted){\r\n                    setReleatedPost(await res.data.ReleatedPost);\r\n                    setLoad(false);\r\n                }\r\n                return()=> {\r\n                    componentMounted = false\r\n                }\r\n                   \r\n                });\r\n                \r\n            \r\n        };\r\n        fetchCategoryPost();\r\n    }, [idCategoryPost]);\r\n    const Location = useLocation();\r\n    //console.log(Location.search);\r\n    //let str =Location.search;\r\n   //str= str.split('&');\r\n    //console.log(str);\r\n    const phoneSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"84\">+84</Option>\r\n                <Option value=\"85\">+85</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    const checkBtn = () => {\r\n        setLicked(true)\r\n    }\r\n    const handlechecked = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n        setChecked(e.target.checked);\r\n    }\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n\r\n    };\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n        setLicked(false)\r\n    };\r\n    const onChange = e => {\r\n        console.log('changed', value);\r\n        let a = value;\r\n        setValue(a)\r\n\r\n    };\r\n    const steps = [\r\n        {\r\n            title: 'Nhập thông tin',\r\n            content: () => {\r\n                const onFinish = (values) => {\r\n                    console.log('Success:', values);\r\n                    /* if(Number(values.amountToDonate) <10000){\r\n                        message.error(\"Số tiền phải lớn hơn bằng 10.000Đ\");\r\n                        setLicked(false)\r\n                        return\r\n                    }\r\n                    else{ */\r\n                        checkBtn();\r\n                        values['checked'] = checked;\r\n                        values['donateEvent'] =_id;\r\n                        const data = JSON.stringify(values)\r\n                        localStorage.setItem(\"data\", data);\r\n                   /* }  */\r\n                   \r\n                };\r\n                const onFinishFailed = (errorInfo) => {\r\n                    console.log('Failed:', errorInfo.values.name);\r\n                };\r\n                return (\r\n                    <>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    initialValues={{ prefix: \"84\", amountToDonate: \"10000\", phone:\"\" }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                        <Checkbox />\r\n                                    </Form.Item>\r\n                                    {checked === false ? (\r\n                                        <>\r\n                                            <Form.Item\r\n                                                label=\"Họ và tên\"\r\n                                                name=\"fullName\"\r\n                                                rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Họ và tên của bạn\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số điện thoại\"\r\n                                                name=\"phone\"\r\n                                                rules={[{ min: 10,max:11, message: 'Số điện thoại từ 10-11 số !' },\r\n                                                {\r\n                                                    pattern: new RegExp(/^\\+?(\\d.*){10,11}$/),\r\n                                                    message: \"Vui lòng nhập đúng số điện thoại !\",\r\n                                                },\r\n                                            ]}\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ \"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                    {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                    \r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name=\"message\"\r\n                                                label=\"Lời nhắn\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item wrapperCol={{\r\n                                                xs: { span: 24, offset: 0 },\r\n                                                sm: { span: 16, offset: 8 },\r\n                                            }} >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Form.Item hidden name=\"andanh\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                    {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label='Lời nhắn'\r\n                                                name=\"message\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n\r\n                                        </>\r\n                                    )}\r\n\r\n                                </Form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {data !== [] ? (\r\n                                    <>\r\n                                        <Form\r\n\r\n                                            {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ prefix: \"84\", amountToDonate: \"10000\", name: `${data.fullName}`, phone: \"\" }}\r\n                                            onFinish={onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                           \r\n                                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                                <Checkbox />\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                            {checked === false ? (\r\n                                                <>\r\n                                                    <Form.Item\r\n                                                        label=\"Họ và tên\"\r\n                                                        name=\"name\"\r\n                                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                    >\r\n                                                        <Input style={{ background: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số điện thoại\"\r\n                                                        name=\"phone\"\r\n                                                        rules={[{ min: 10,max:11, message: 'Số điện thoại từ 10-11 số !' }, {\r\n                                                            pattern: new RegExp(/^\\+?(\\d.*){10,11}$/),\r\n                                                            message: \"Vui lòng nhập đúng số điện thoại !\",\r\n                                                        },]}\r\n                                                    >\r\n                                                        <Input style={{ width: '100%' }}  />\r\n                                                    </Form.Item>\r\n                                                        \r\n                                                    <Form.Item\r\n                                                        label=\"Số tiền ủng hộ \"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                           \r\n                                                            {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        name=\"message\"\r\n                                                        label=\"Lời nhắn\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item wrapperCol={{\r\n                                                        xs: { span: 24, offset: 0 },\r\n                                                        sm: { span: 16, offset: 8 },\r\n                                                    }} >\r\n                                                        <Button onClick={checkBtn} type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Form.Item hidden name=\"andanh\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                            {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                          \r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label='Lời nhắn'\r\n                                                        name=\"content\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item >\r\n                                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </Form>\r\n                                    </>\r\n                                ) : (<><p></p></>)}\r\n\r\n                            </>\r\n                        )\r\n                        }\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Xác nhận',\r\n            content: () => {\r\n                const coin = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n                return (\r\n                    <>\r\n                        <p>Số tiền ủng hộ: {convertNumber(coin.amountToDonate)}</p>\r\n                        <p>Lời nhắn:</p>\r\n                        <p>{coin.content}</p>\r\n                        <PayPal />\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cám ơn',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n    ];\r\n    const convertNumber = (x) => {\r\n        if (Donate === []) {\r\n            if (Donate.setAmount) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n        else {\r\n            if (Donate.setAmount) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n\r\n    }\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Tên ',\r\n            dataIndex: 'fullName',\r\n            key: 'fullName',\r\n\r\n        },\r\n        {\r\n            title: 'Số tiền ủng hộ',\r\n            dataIndex: 'amountToDonate',\r\n            key: 'amountToDonate',\r\n            render: text => (\r\n                <>\r\n                    {convertNumber(text)} đ\r\n                </>\r\n            ),\r\n        }\r\n    ];\r\n    let html = Donate.content;\r\n    let happinessContent = Donate.happinessContent\r\n    const viewAll = () => {\r\n        history.push(`/xem-tat-ca-nguoi-ung-ho/${_id}`)\r\n    }\r\n    console.log(data);\r\n    const onFinishMomo=(values)=>{\r\n        //console.log(\"momo\",values);\r\n        checkBtn();\r\n        //const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        if(user){\r\n            values['userId']=user._id;\r\n        }\r\n        let ms = Date.now()\r\n        values['orderId'] =\"MM\"+ms;\r\n        values['requestId'] =\"MM\"+ms;\r\n        values['checked'] = checked;\r\n        values['orderInfo']=Donate.title;    \r\n        values['donateEvent'] =_id.trim();\r\n        console.log(\"momo\",values);\r\n        donateEvensts.postPayMomo(values).then((res)=>{\r\n            console.log(\"data\",res.data);\r\n            if(res.data.MomoPay.errorCode===0)\r\n            {\r\n                let url = res.data.MomoPay.payUrl\r\n                console.log(\"url\",url);\r\n                //history.push(url)\r\n                window.location.replace(url);\r\n\r\n                \r\n            }\r\n        });\r\n\r\n        //console.log(\"Day\",ms);\r\n    }\r\n    const Footer = ()=>{\r\n        return (\r\n            <>\r\n             <section className=\"detail_footer\">\r\n                <div className=\"container\">\r\n                    <h3 className=\"detail_footer_title\">Chương trình liên quan</h3>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                   {load === true? (<>\r\n                    {ReleatedPost.map((item) => {\r\n                return (\r\n                    <>\r\n                        <div  className=\"col-2\" >\r\n                            <Badge count={item.categoryName}>\r\n                                <Link to={`${item._id}`} >\r\n                                    <Card className=\"margin-top\"\r\n                                        style={{ borderRadius: 10, height: 460 }}\r\n                                        hoverable\r\n                                        cover={<img alt=\"example\" src={item.image[0]} />}>\r\n                                        <Text className=\"title-text\" style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: `${item.title}` } : false} >\r\n                                            {item.title} </Text>\r\n                                        <Text className=\"title-tomtat\"\r\n                                            style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: `${item.summary}` } : false} >\r\n                                            {item.summary}\r\n                                        </Text>\r\n                                        {\r\n                                            item.status === \"Dừng nhận donate\" ? (<><p className=\"tamngung\" >Tạm ngưng</p></>) : (<>\r\n                                                <div className=\"progress\">\r\n                                                    <div className=\"progress_detail_top\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            {/* convertNumber */(item.currentAmount)} vnđ quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">\r\n                                                            {Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\r\n                                                                <p>Hoàn thành</p>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <p className=\"progress_detail_number\">{((item.currentAmount / item.setAmount) * 100).toFixed(3)}%</p>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <Progress percent={Math.floor((item.currentAmount / item.setAmount) * 100)} showInfo={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                                    <div className=\"progress_detail_bot\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            <UsergroupAddOutlined /> {item.numberOfDonations} lượt quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">{Number(dayEnd(item.endDay))===0 ||Number(dayEnd(item.endDay))<0 ?(<>Đã hết hạn</>):(<> {dayEnd(item.endDay)} ngày còn lại</>) } </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>)\r\n                                        }\r\n                                    </Card>\r\n\r\n                                </Link>\r\n                            </Badge>\r\n                        </div>\r\n                    </>\r\n                )\r\n\r\n            })}\r\n                   </>):(<></>)}\r\n                   \r\n                 \r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n            </>\r\n        )\r\n    }\r\n    const Loading1= ()=>{\r\n        return (\r\n            <>\r\n            Loading ...\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n          <ScrollToTop smooth={true} />\r\n            <section className=\"detail_header\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"introduce\">\r\n                            <h3 className=\"title\">{Donate.title}</h3>\r\n                            <h3 style={{ fontSize: \"25px\", fontFamily: \"NunitoBold\" }}>\r\n                                Số tiền cần quyên góp {convertNumber(Donate.setAmount)}VNĐ </h3>\r\n                            <div class=\"fb-like\" data-href=\"https://momo.vn/cong-dong/chung-tay-gay-quy-dung-truong-moi-tang-25-em-hoc-sinh-ban-huoi-chua\" data-width=\"\" data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-share=\"true\"></div>\r\n                            <p style={{ fontSize: \"20px\" }}> {Donate.summary}</p>\r\n                        </div>\r\n                        <div className=\"slider\">\r\n                            <div style={{ justifyContent: \"space-between\", display: \"flex\" }}>\r\n                                {img.map((item) => {\r\n                                    return (\r\n                                        <Image\r\n                                            style={{ borderRadius: \"10px\" }}\r\n                                            width={400}\r\n                                            src={item}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"detail_body\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <Tabs defaultActiveKey=\"1\"/*  onChange={callback} */>\r\n                                    <TabPane tab=\"Câu chuyện\" key=\"2\">\r\n                                        {parse(parse(html))}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Nhà hảo tâm\" key=\"3\">\r\n                                        <p>Top 50 lần ủng hộ gần nhất</p>\r\n                                        <Table columns={columns} dataSource={AllDonator} />\r\n                                        <Button onClick={viewAll} >Xem tất cả</Button>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Trao yêu thương\" key=\"4\">\r\n                                        {parse(parse(happinessContent))}\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <div className=\"card_infoDonate\">\r\n                                    <h3 className=\"card_infoDonate_title\">Thông tin quyên góp</h3>\r\n\r\n                                    <div className=\"progress_detail_top\">\r\n                                        <p className=\"progress_detail_text\">\r\n                                            Đã quyên góp: {convertNumber(DonateID.currentAmount)}VNĐ/{convertNumber(DonateID.setAmount)}VNĐ\r\n                                        </p>\r\n                                        <Progress percent={Math.floor((Donate.currentAmount / Donate.setAmount) * 100)} showInfo={Math.floor((Donate.currentAmount / Donate.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((Donate.currentAmount / Donate.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                        <div className=\"progress_detail_bot \">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        <UsergroupAddOutlined /> Lượt quyên góp\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        <UsergroupAddOutlined /> Đạt được\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        <UsergroupAddOutlined /> Thời hạn còn\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        {Donate.numberOfDonations}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        {((DonateID.currentAmount / DonateID.setAmount) * 100).toFixed(3)}%\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div class=\"col\">\r\n                                                    <p className=\"progress_detail_text\">\r\n                                                        {Number(dayEnd(Donate.endDay)) === 0 || Number(dayEnd(Donate.endDay)) < 0 ? (<>Đã hết hạn</>) : (<> {dayEnd(Donate.endDay)} ngày </>)}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card_donate\">\r\n                                    <h3 className=\"card_donate_title\">Quyên góp ngay</h3>\r\n                                                                 \r\n                                    {\r\n                                        Donate.status === \"Dừng nhận donate\" ? (<>\r\n                                            <p className=\"tamngung\" >Tạm ngưng</p>\r\n\r\n                                        </>) : (<>\r\n                                            {\r\n                                                Number(Donate.currentAmount) >= Number(Donate.setAmount) ? (\r\n                                                    <div className=\"progress_detail_top\">\r\n                                                        <p className=\"complete\" >Đã hoàn thành</p>\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            Đã quyên góp: {convertNumber(DonateID.currentAmount)} VNĐ\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">\r\n                                                            {Math.floor((DonateID.currentAmount / DonateID.setAmount) * 100) === 100 ? (\r\n                                                                <p>Hoàn thành</p>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <p className=\"progress_detail_number\">{((DonateID.currentAmount / DonateID.setAmount) * 100).toFixed(3)}%</p>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </p>\r\n                                                        <Progress percent={Math.floor((Donate.currentAmount / Donate.setAmount) * 100)} showInfo={Math.floor((Donate.currentAmount / Donate.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((Donate.currentAmount / Donate.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                                    </div>\r\n\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <Tabs defaultActiveKey=\"1\" type=\"card\" /* size={size} */>\r\n                                                            <TabPane tab=\"PayPal\" key=\"1\">\r\n                                                                <Steps current={current}>\r\n                                                                    {steps.map(item => (\r\n                                                                        <Step key={item.title} title={item.title} />\r\n                                                                    ))}\r\n                                                                </Steps>\r\n                                                                <div className=\"steps-content\">{steps[current].content()}</div>\r\n                                                                <div className=\"steps-action\">\r\n                                                                    {current < steps.length - 1 && (\r\n                                                                        <Button disabled={\r\n                                                                            licked === true ? (false) : (true)} type=\"primary\" onClick={() => next()}>\r\n                                                                            Tiếp theo\r\n                                                                        </Button>\r\n                                                                    )}\r\n                                                                    {current === steps.length - 1 && (\r\n                                                                        <Button type=\"primary\" onClick={showModal}>\r\n                                                                            Xác nhận\r\n                                                                        </Button>\r\n                                                                    )}\r\n                                                                    {current > 0 && (\r\n                                                                        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                                                            Trở lại\r\n                                                                        </Button>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </TabPane>\r\n                                                            <TabPane tab=\"Momo\" key=\"2\">\r\n                                                            <>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    initialValues={{ prefix: \"84\", amountToDonate: \"10000\",phone:\"\" }}\r\n                                    onFinish={onFinishMomo}\r\n                                    ///onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                        <Checkbox />\r\n                                    </Form.Item>\r\n                                    {checked === false ? (\r\n                                        <>\r\n                                            <Form.Item\r\n                                                label=\"Họ và tên\"\r\n                                                name=\"fullName\"\r\n                                                rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Họ và tên của bạn\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số điện thoại\"\r\n                                                name=\"phone\"\r\n                                                 rules={[{ min: 10,max:11, message: 'Số điện thoại từ 10-11 số !' },\r\n                                                 {\r\n                                                    pattern: new RegExp(/^\\+?(\\d.*){10,11}$/),\r\n                                                    message: \"Vui lòng nhập đúng số điện thoại !\",\r\n                                                },]}\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ \"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                    {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name=\"message\"\r\n                                                label=\"Lời nhắn\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item wrapperCol={{\r\n                                               \r\n                                            }} >\r\n                                                <Button type=\"primary\" className=\"checkout-title\"  htmlType=\"submit\"> \r\n                                                    Gửi tiền bằng Ví MoMo\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Form.Item hidden name=\"andanh\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ \"\r\n                                                rules={[\r\n\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    }, {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                    \r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label='Lời nhắn'\r\n                                                name=\"message\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item >\r\n                                                <Button type=\"primary\" className=\"checkout-title\" htmlType=\"submit\">\r\n                                                Gửi tiền bằng Ví MoMo\r\n                                                </Button>\r\n                                            </Form.Item>\r\n\r\n                                        </>\r\n                                    )}\r\n\r\n                                </Form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {data !== [] ? (\r\n                                    <>\r\n                                        <Form\r\n\r\n                                            {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ prefix: \"84\", amountToDonate: \"10000\", fullName: `${user.fullName}`, phone: `${\"\"}` }}\r\n                                            onFinish={onFinishMomo}\r\n                                            //onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                                <Checkbox />\r\n\r\n                                            </Form.Item>\r\n                                            {checked === false ? (\r\n                                                <>\r\n                                                    <Form.Item\r\n                                                        label=\"Họ và tên\"\r\n                                                        name=\"fullName\"\r\n                                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                    >\r\n                                                        <Input style={{ background: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số điện thoại\"\r\n                                                        name=\"phone\"\r\n                                                        rules={[{ min: 10,max:11, message: 'Số điện thoại từ 10-11 số !' },\r\n                                                        {\r\n                                                            pattern: new RegExp(/^\\+?(\\d.*){10,11}$/),\r\n                                                            message: \"Vui lòng nhập đúng số điện thoại !\",\r\n                                                        },]}\r\n                                                    >\r\n                                                        <Input style={{ width: '100%'}}  />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số tiền ủng hộ \"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            }, {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                           \r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        name=\"message\"\r\n                                                        label=\"Lời nhắn\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item wrapperCol={{\r\n                                                   \r\n                                                    }} >\r\n                                                        <Button onClick={checkBtn} className=\"checkout-title\" type=\"primary\" htmlType=\"submit\">\r\n                                                        Gửi tiền bằng Ví MoMo\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Form.Item hidden name=\"andanh\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n\r\n                                                        label=\"Số tiền ủng hộ \"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                            {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label='Lời nhắn'\r\n                                                        name=\"content\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item >\r\n                                                        <Button className=\"checkout-title\" type=\"primary\" htmlType=\"submit\">\r\n                                                        Gửi tiền bằng Ví MoMo\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </Form>\r\n                                    </>\r\n                                ) : (<><p></p></>)}\r\n\r\n                            </>\r\n                        )\r\n                        }\r\n                    </>\r\n                                                              \r\n                                                            </TabPane>\r\n                                                        </Tabs>\r\n                                                    </>\r\n\r\n                                                )\r\n                                            }\r\n                                        </>)\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Divider></Divider>\r\n            {load ? <Loading1 /> : <Footer />}\r\n            <Modal title=\"Cám ơn\" visible={isModalVisible} footer={null} onOk={handleOk} onCancel={handleCancel}>\r\n                <Result\r\n                    status=\"success\"\r\n                    title=\"Cám ơn bạn đã quyên góp!\"\r\n                    subTitle=\"Số tiền sẽ được gửi ngay khi chương trình kết thúc !!!\"\r\n\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../style/Momo.scss\"\r\nconst Momo = () => {\r\n    const getData = JSON.parse(localStorage.getItem(\"data\"));\r\n    let ms = Date.now()\r\n    getData['orderId'] =\"MM\"+ms;\r\n    getData['requestId'] =\"MM\"+ms;\r\n    //getData['checked'] = checked;\r\n    //getData['orderInfo']=Donate.title;\r\n    //getData['donateEvent'] = _id;\r\n    console.log(getData);\r\n    const PayMomo = () => {\r\n        const url = \"http://localhost:4000/api/payMomo\";\r\n        axios.post(url,getData).then((res)=>{\r\n            console.log(\"data\",res.data);\r\n            if(res.data.MomoPay.errorCode===0)\r\n            {\r\n                let url = res.data.MomoPay.payUrl\r\n                console.log(\"url\",url);\r\n                window.open(url)\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div class=\"checkout-button\">\r\n            <div class=\"content\" >\r\n                <p onClick={PayMomo} class=\"checkout-title\">\r\n                    Thanh toán bằng Ví MoMo\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Momo;\r\n","import { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Checkbox, Form, Input, /* InputNumber, */ message, Modal, Progress, Result, Select, Steps, Typography } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PayPal from \"../components/Paypal\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Home.scss\";\r\n//import ListDonate from \"./ListDonate\";\r\n//import donateEvensts from \"../Api/donateEvensts\";\r\n//import { logout } from \"../redux/actions/auth.js\";\r\nimport \"../style/HotListDonate.scss\";\r\nimport Momo from \"./Momo\";\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst phoneSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select style={{ width: 70 }}>\r\n            <Option value=\"84\">+84</Option>\r\n            <Option value=\"85\">+85</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);\r\nconst HotListDonate = (props) => {\r\n    const [donator, setDonator] = useState(null)\r\n    const [id, setid] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const [current, setCurrent] = React.useState(0);\r\n    const [licked, setLicked] = useState(false);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [value, setValue] = useState(1);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const data = useSelector(state => state.login.user);\r\n    const user= JSON.parse(localStorage.getItem(\"user\"))\r\n    const [Listhost, setListhost] = useState(props.listDonates);\r\n    const [form] = Form.useForm();\r\n    //const [Count, setCount] = useState(0);\r\n    //const order= JSON.parse(localStorage.getItem(\"user\"))\r\n//console.log(order);\r\n    useEffect(() => {\r\n        setListhost(props.listDonates);\r\n    }, [props.listDonates, licked,id,user])\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n        console.log('Content: ', e.currentTarget.dataset.id);\r\n        let id = e.currentTarget.dataset.id\r\n        let filterProduct = [];\r\n\r\n        filterProduct = props.listDonates.filter(\r\n            listDonates => listDonates._id === id\r\n        )\r\n        //setid(filterProduct[0]._id)\r\n        setid(filterProduct[0]._id);\r\n        setDonator(filterProduct)\r\n        setLicked(false)\r\n\r\n\r\n\r\n    };\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n  /*   const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        setCurrent(0)\r\n        \r\n    }; */\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        setLicked(false)\r\n        form.resetFields();\r\n        setCurrent(0)\r\n\r\n    };\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n        setLicked(false)\r\n    };\r\n    const handlechecked = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n        onChange(setChecked(e.target.checked))\r\n\r\n\r\n    }\r\n    const onChange = e => {\r\n        console.log('changed', value);\r\n        let a = value;\r\n        setValue(a)\r\n\r\n    };\r\n    const checkBtn = () => {\r\n        setLicked(true)\r\n       \r\n    }\r\n    /* if(order){\r\n        setCount(1)\r\n    } */\r\n    //console.log(isLoggedIn);\r\n    const steps = [\r\n        {\r\n            title: 'Nhập thông tin',\r\n            content: () => {\r\n                const onFinish = (values) => {\r\n                    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n                    console.log('Success:', values);\r\n                    checkBtn();\r\n                    values['checked'] = checked;\r\n                    values['donateEvent'] = id;\r\n                    values['orderInfo']= donator[0].title;\r\n                    if(user){\r\n                        values['userId']=user._id;\r\n                    }\r\n                    const data = JSON.stringify(values)\r\n                    localStorage.setItem(\"data\", data);\r\n                };\r\n                const onFinishFailed = (errorInfo) => {\r\n                    console.log('Failed:', errorInfo.values.name);\r\n                };\r\n                return (\r\n                    <>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    form={form}\r\n                                    initialValues={{ prefix: \"84\", amountToDonate: \"10000\" }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                        <Checkbox />\r\n                                    </Form.Item>\r\n                                    {checked === false ? (\r\n                                        <>\r\n                                            <Form.Item\r\n                                                label=\"Họ và tên\"\r\n                                                name=\"fullName\"\r\n                                                rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                \r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Họ và tên của bạn\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số điện thoại\"\r\n                                                name=\"phone\"\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                    {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name=\"message\"\r\n                                                label=\"Lời nhắn\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item wrapperCol={{\r\n                                                xs: { span: 24, offset: 0 },\r\n                                                sm: { span: 16, offset: 8 },\r\n                                            }} >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Form.Item hidden name=\"andanh\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    }, {\r\n                                                           \r\n                                                        min:5,\r\n                                                        message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                    },\r\n                                                    {\r\n                                                        pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                        message: \"Số tiền không chứa chữ !\",\r\n                                                    }\r\n                                                ]}\r\n                                                name=\"amountToDonate\">\r\n                                                <Input\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label='Lời nhắn'\r\n                                                name=\"message\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n\r\n                                        </>\r\n                                    )}\r\n\r\n                                </Form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {data !== [] ? (\r\n                                    <>\r\n                                        <Form\r\n\r\n                                            {...layout}\r\n                                            name=\"basic\"\r\n                                            form={form} \r\n                                            initialValues={{ prefix: \"84\", amountToDonate: \"10000\", fullName: `${user.fullName}`,phone:`${\"\"}`}}\r\n                                            onFinish={onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                           \r\n                                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                                <Checkbox />\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                            {checked === false ? (\r\n                                                <>\r\n                                                    <Form.Item\r\n                                                        label=\"Họ và tên\"\r\n                                                        name=\"fullName\"\r\n                                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                    >\r\n                                                        <Input style={{ background: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số điện thoại\"\r\n                                                        name=\"phone\"\r\n                                                        \r\n\r\n                                                    >\r\n                                                        <Input  />\r\n                                                    </Form.Item>\r\n\r\n                                                    <Form.Item\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            }, {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        name=\"message\"\r\n                                                        label=\"Lời nhắn\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item wrapperCol={{\r\n                                                        xs: { span: 24, offset: 0 },\r\n                                                        sm: { span: 16, offset: 8 },\r\n                                                    }} >\r\n                                                        <Button onClick={checkBtn} type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Form.Item hidden name=\"andanh\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            }, {\r\n                                                           \r\n                                                                min:5,\r\n                                                                message: \"Số tiền ủng hộ từ 10.000 trở lên\",\r\n                                                            },\r\n                                                            {\r\n                                                                pattern: new RegExp(/^\\d*\\.?\\d+$/),\r\n                                                                message: \"Số tiền không chứa chữ !\",\r\n                                                            }\r\n                                                        ]}\r\n                                                        name=\"amountToDonate\">\r\n                                                        <Input\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label='Lời nhắn'\r\n                                                        name=\"message\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item >\r\n                                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </Form>\r\n                                    </>\r\n                                ) : (<><p></p></>)}\r\n\r\n                            </>\r\n                        )\r\n                        }\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Xác nhận',\r\n            content: () => {\r\n                const coin = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n                return (\r\n                    <>\r\n                        <p>Số tiền ủng hộ: {convertNumber(coin.amountToDonate)}</p>\r\n                        <p>Lời nhắn:</p>\r\n                        <p>{coin.message}</p>\r\n                        <p>Gửi tiền bằng</p>\r\n                        <Momo></Momo>\r\n                        <p>Hoặc</p>\r\n                        <PayPal />\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cám ơn',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n    ];\r\n\r\nconsole.log(data);\r\n\r\n    return (\r\n        <>\r\n            {Listhost\r\n            .filter(Listhost => Listhost.hotPost === true)\r\n            .map((item) => {\r\n                /* if (item.tinNoiBat === true) { */\r\n                    return (\r\n                        <>\r\n                            <div key={item._id} className=\"col-6 card\">\r\n                                <Card\r\n                                    key='1'\r\n                                    hoverable\r\n                                    style={{ borderRadius: 10, height: 260, width: \"100%\" }}\r\n                                    cover={<img height=\"100%\" alt=\"example\" src={item.image[0]} />}\r\n                                >\r\n                                    <p style={{ display: \"none\" }} data-id={item._id}></p>\r\n                                    <div className=\"detail\">\r\n                                        <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n                                            <Text className=\"title-text\" style={ellipsis ? { width: 200 } : undefined, {  color: \"#1890ff\" }}\r\n                                                ellipsis={ellipsis ? { tooltip: `${item.title}` } : false} >\r\n                                                {item.title} </Text>\r\n                                        </Link>\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress_detail_top\">\r\n                                                <p className=\"progress_detail_text\">\r\n\r\n                                                    {convertNumber(item.currentAmount)\r\n                                                    } VNĐ quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">{((item.currentAmount / item.setAmount) * 100).toFixed(3)}%</p>\r\n\r\n                                            </div>\r\n                                            <Progress percent={Math.floor((item.currentAmount / item.setAmount) * 100)} showInfo={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n\r\n                                            <div className=\"progress_detail_bot\">\r\n                                                <p className=\"progress_detail_text\">\r\n                                                    <UsergroupAddOutlined />{item.numberOfDonations} lượt quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">{Number(dayEnd(item.endDay))===0 ||Number(dayEnd(item.endDay))<0 ?(<>Đã hết hạn</>):(<>{dayEnd(item.endDay)} ngày còn lại</>) } </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            Number(item.currentAmount) >= Number(item.setAmount) ? (<p className=\"complete\" >Đã hoàn thành</p>) : (<p className=\"ant-btn ant-btn-primary \" data-id={item._id} onClick={showModal}>Ủng hộ ngay</p>)\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        </>)\r\n                /* } */\r\n            })\r\n            }\r\n            {donator != null ? (\r\n                <>\r\n\r\n                    <Modal title={donator[0].title} visible={isModalVisible} footer={null} onCancel={handleCancel}>\r\n                        <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[current].content()}</div>\r\n                        <div className=\"steps-action\">\r\n                            {current < steps.length - 1 && (\r\n                                <>\r\n                                    {<Button className=\"btn-disabled\" disabled={\r\n                                        licked ===true?(false):(true) } \r\n                                        type=\"primary\" onClick={() => next()}>\r\n                                        Tiếp theo\r\n                                    </Button>}\r\n                                </>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={handleCancel, () => message.success('Processing complete!')}>\r\n                                    Hoàn thành\r\n                                </Button>\r\n                            )}\r\n                            {current > 0 && (\r\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                    Trở lại\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </Modal>\r\n\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Modal title={\"ủng hộ\"} footer={null} visible={isModalVisible}  onCancel={handleCancel}>\r\n                        <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[current].content()}</div>\r\n                        <div className=\"steps-action\">\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={onChange, () => next()}>\r\n                                    Tiếp theo\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={handleCancel, () => message.success('Processing complete!')}>\r\n                                    Hoàn thành\r\n                                </Button>\r\n                            )}\r\n                            {current > 0 && (\r\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                    Trở lại\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </Modal>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nexport default HotListDonate;\r\n","import { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Badge, Card, Input, Progress, Typography } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Home.scss\";\r\nconst { Search } = Input;\r\nconst ListDonate = (props) => {\r\n\r\n    const [list, /* setlist */] = useState([props.listDonate]);\r\n    const { Text } = Typography;\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const [visible, /* setVisible */] = useState(9);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n  /*   const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    } */\r\n    const onSearch = (value) => {\r\n        setSearchTerm(value.target.value);\r\n        console.log(value.target.value);\r\n    }\r\n    console.log(list);\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    /*  useEffect(() => {\r\n         const results = people.filter(person =>\r\n           person.toLowerCase().includes(searchTerm)\r\n         );\r\n         setSearchResults(results);\r\n       }, [searchTerm]); */\r\n    const results = !searchTerm\r\n        ? props.listDonate\r\n        : props.listDonate.filter(list =>\r\n            list.title.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n    //setSearchResults(results)\r\n    console.log(searchTerm);\r\n    return (\r\n        <>\r\n            <Search className=\"input-search\" type=\"text\"\r\n                placeholder=\"Tìm kiếm\"\r\n                value={searchTerm}\r\n                onChange={onSearch} style={{ width: 800 }}\r\n            />\r\n            {results.slice(0, visible).map((item) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"col-4 \" >\r\n                            <Badge count={item.categoryName}>\r\n                                <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n                                    <Card className=\"margin-top\"\r\n                                        style={{ borderRadius: 10, height: 460 }}\r\n                                        hoverable\r\n                                        cover={<img alt=\"example\" src={item.image[0]} />}>\r\n                                        <Text className=\"title-text\" style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: `${item.title}` } : false} >\r\n                                            {item.title} </Text>\r\n                                        <Text className=\"title-tomtat\"\r\n                                            style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: `${item.summary}` } : false} >\r\n                                            {item.summary}\r\n                                        </Text>\r\n                                        {\r\n                                            item.status === \"Dừng nhận donate\" ? (<><p className=\"tamngung\" >Tạm ngưng</p></>) : (<>\r\n                                                <div className=\"progress\">\r\n                                                    <div className=\"progress_detail_top\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            {/* convertNumber */(item.currentAmount)} vnđ quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">\r\n                                                            {Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\r\n                                                                <p>Hoàn thành</p>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <p className=\"progress_detail_number\">{((item.currentAmount / item.setAmount) * 100).toFixed(3)}%</p>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <Progress percent={Math.floor((item.currentAmount / item.setAmount) * 100)} showInfo={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (true) : (false)} status={Math.floor((item.currentAmount / item.setAmount) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                                    <div className=\"progress_detail_bot\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            <UsergroupAddOutlined /> {item.numberOfDonations} lượt quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">{Number(dayEnd(item.endDay))===0 ||Number(dayEnd(item.endDay))<0 ?(<>Đã hết hạn</>):(<> {dayEnd(item.endDay)} ngày còn lại</>) } </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>)\r\n                                        }\r\n                                    </Card>\r\n\r\n                                </Link>\r\n                            </Badge>\r\n                        </div>\r\n                    </>\r\n                )\r\n\r\n            })}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListDonate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { /* Form, Input, */ Button, Tabs, Spin } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport donateEvensts from '../Api/donateEvensts';\r\n//import { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\n//import PayPal from \"../components/Paypal\"\r\nimport HotListDonate from \"../components/HotListDonate\"\r\nimport ListDonate from '../components/ListDonate';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n//import { useCookies } from 'react-cookie';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Home = () => {\r\n    const [listDonates, setListdonates] = useState([]);\r\n    const [listDonate, setListdonate] = useState([]);\r\n    const [listCategory, setListCategory] = useState([]);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [loadingSum, setLoadingSum] = useState(false);\r\n    //const [Count, /* setCount */] = useState(0);\r\n    //const  data  = useSelector(state => state.auth.user);\r\n    //const order= JSON.parse(localStorage.getItem(\"orderStatus\"))\r\n    //console.log(data);\r\n    //window.scrollTo({ behavior: 'smooth' });\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setListdonate(res.data.DonateEnvents)\r\n                });\r\n                setLoadingSum(true)\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n\r\n        const fetchCategory = async () => {\r\n            try {\r\n                await donateEvensts.getCategory().then((res) => {\r\n                    setListCategory(res.data.CategoryDonateEvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchCategory();\r\n        fetchdonatesData();\r\n\r\n    }, []);\r\n    console.log(listDonate);\r\n    console.log(listDonates);\r\n    const handleClick = (e) => {\r\n        setListdonate(listDonates);\r\n        let filterProduct = [];\r\n        if (e === \"1\") {\r\n            filterProduct = listDonates;\r\n        } else {\r\n\r\n            filterProduct = listDonates.filter(\r\n                listDonates => listDonates.categoryPost === e\r\n            )\r\n            setListdonate(filterProduct)\r\n            console.log(filterProduct);\r\n\r\n\r\n        }\r\n    };\r\n    for (let i = 0; i < listDonate.length; i++) {\r\n        for (let j = 0; j < listCategory.length; j++) {\r\n            if (listDonate[i].categoryPost === listCategory[j]._id) {\r\n                //console.log(listCategory[j].tenloai);\r\n                listDonate[i].categoryName = listCategory[j].CategoryName;\r\n                //console.log(listDonate);\r\n            }\r\n\r\n        }\r\n    }\r\n    //const [form] = Form.useForm();\r\n    const iconStyle = {\r\n        color: \"#2569d9\"\r\n    }\r\n    const researchStyle = {\r\n        backgroundImage: `url(\"../images/about.png\")`,\r\n    }\r\n    const bghomepageRegister = {\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(\"../images/donate/bg-rs.jpg\")`,\r\n\r\n    }\r\n    const sumConinDonate = () => {\r\n        let sum = 0\r\n        for (let i = 0; i < listDonate.length; i++) {\r\n            sum = sum + Number(listDonate[i].currentAmount);\r\n\r\n        }\r\n\r\n        return sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n    }\r\n    //console.log(listDonate);\r\n    if (isLoggedIn) {\r\n        <Redirect to=\"/\" />\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <ScrollToTop smooth={true} />\r\n            <div className=\"homepage container-sm\">\r\n                <div className=\"homepage_content col-10 offset-1 \">\r\n                    <div>\r\n                        <h2 className=\"title\" >Hãy quyên góp cho những hoạt động mà bạn quan tâm</h2>\r\n                    </div>\r\n                    <div className=\"commitment\">\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />0% phí dịch vụ</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Thiết kế cho mục đích từ thiệt</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Được nhiều tổ chức từ thiện tin tưởng</p></div>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button_wapper \">\r\n                      \r\n                           <Link to=\"gioi-thieu\" className=\"ant-btn ant-btn-primary btn-explore\" > <span className=\"btn-text\"> Tìm hiểu về tổ chức từ thiện</span></Link>\r\n                        </div>\r\n                        {/*  <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-default btn-sign-in\" href=\"/explore\"><span className=\"btn-text\">Explore Charities</span></a>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                    <div className=\"text_wapper\">\r\n                        <p className=\"text-bold \">Chúng tôi đã quyên góp được</p>\r\n                        <h2 className=\"text-bold\"><span>\r\n                            {sumConinDonate()} VNĐ\r\n\r\n\r\n                        </span></h2>\r\n                        <div className=\"icon-micro-heart\"><img width=\"50px\" alt=\"Heart\" src=\"../images/hands.svg\" /></div>\r\n                        <div className=\"mb-1x\"><span className=\"text-medium\"><div className=\"html-sanitizer\">Hãy giúp chúng thôi một tay</div></span></div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={researchStyle} className=\"bg homepage_research\">\r\n                <div className=\"container\">\r\n                    <div className=\"research_text col-10 offset-1 \">\r\n                        <h2 className=\"text-bold\">Hãy chung tay quyên góp</h2>\r\n                        <p>YÊU THƯƠNG LAN TỎA TỪ NHỮNG CHUYẾN HÀNG CHÌNH TỪ THIỆN</p>\r\n                        {/* <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-primary btn-find-out-how\" href=\"/explore\"><span className=\"btn-text\">Tìm hiểu cách tham gia</span></a>\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"homepage_list_donate list_donate_hot\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text  col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Nổi bật </h2>\r\n                    </div>\r\n                    <div className=\"list_card col-10 offset-1\">\r\n                        <div className=\"row\">\r\n                            {loadingSum ? <HotListDonate listDonates={listDonates} /> : <Spin size=\"large\" />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_list\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các chương trình quyên góp</h2>\r\n                        <Tabs defaultActiveKey=\"1\" size=\"large\" centered onChange={handleClick} style={{ marginBottom: 32, }}>\r\n                            <TabPane tab=\"Tất cả\" key=\"1\">\r\n                            </TabPane>\r\n                            {/*  <TabPane tab=\"Mới nhất\" key=\"2\">\r\n                            </TabPane>\r\n                            <TabPane tab=\"Sắp hết hạn\" key=\"3\">\r\n                            </TabPane> */}\r\n                            {listCategory.map((category) => {\r\n                                return (\r\n                                    <>\r\n                                        <TabPane tab={category.CategoryName} key={category._id}>\r\n\r\n                                        </TabPane>\r\n                                    </>\r\n                                )\r\n                            })}\r\n\r\n                        </Tabs>\r\n                        <div className=\"row all-donate1\" >\r\n\r\n                            {loadingSum ? <ListDonate listDonate={listDonate} /> : <Spin size=\"large\" />}\r\n\r\n                        </div>\r\n                        <Link className=\"ant-btn ant-btn-primary bnt-load-more\" to=\"/tat-ca-chuong-trinh\" >Xem tất cả </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={bghomepageRegister} id=\"register\" className=\"homepage_register\">\r\n                <div className=\"container\">\r\n                    <div className=\"register_text col-10 offset-1 \">\r\n                        <h2 className=\"text-bold text-wh \">Hãy tham gia cùng với chúng tôi</h2>\r\n                        <div style={{display:\"flex\", width:\"900px\",justifyContent:\"space-between\"}}>\r\n                            <div className=\"btn_frm_rs\">\r\n                                <p className=\"text-bold text-wh \">Cùng nhau chia sẽ và giúp đỡ những hoàn cảnh khó khăn</p>\r\n                                <Button className=\"btn-tham-gia\" ><Link to=\"/tham-gia\"> Tham gia ngay</Link></Button>\r\n\r\n                            </div>\r\n                            <div className=\"btn_frm_rs \">\r\n                                <p className=\"text-bold text-wh \">Hãy  cho chúng tôi những hoàn cảnh cần giúp đỡ mà bạn biết</p>\r\n                                <Button  className=\"btn-hckk\"><Link to=\"/hoan-canh-kho-khan\">Chia sẻ Hoàn cảnh cần giúp đỡ</Link></Button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_partner\">\r\n                <div className=\"container\">\r\n                    <div className=\"partner_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các đối tác phi lợi nhuận</h2>\r\n                        <div className=\"wapper_menu\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"operation\" src=\"../images/donate/home/operation.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Operation Smile</p>\r\n                                            <p>Phẫu thuật nụ cười</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"operation\" src=\"../images/donate/home/matran.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Mặt trận Tổ quốc Việt Nam</p>\r\n                                            <p>Uỷ ban Trung ương Mặt trận Tổ quốc Việt Nam</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"suc-manh\" src=\"../images/donate/home/suc-manh.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Sức mạnh 2000</p>\r\n                                            <p>Tiền lẻ mỗi ngày Xây ngay nghìn trường mới</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ marginTop: \"50px\" }} className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"Vinacapital\" src=\"../images/donate/home/vina.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Vinacapital Foundation</p>\r\n                                            <p>Thay đổi cuộc sống cho phụ nữ và trẻ em Việt Nam</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"vc\" src=\"../images/donate/home/vc.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Trung tâm Tình nguyện Quốc gia</p>\r\n                                            <p>Thúc đẩy đam mê tình nguyện</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"tuoi-tre\" src=\"../images/donate/home/tuoi-tre.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Báo Tuổi Trẻ</p>\r\n                                            <p>Cơ quan ngôn luận của Đoàn Thanh niên Cộng sản Thành phố Hồ Chí Minh</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Home;\r\n","\r\nimport React, { useState, /* useEffect */ } from 'react';\r\nimport { Card, Form, Input, Button,message } from 'antd';\r\nimport { init, sendForm } from 'emailjs-com';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Contact.scss\"\r\nimport { PhoneOutlined, HomeOutlined, SendOutlined } from '@ant-design/icons';\r\ninit('user_34PJkVJOxKj7nBHxWBCKl');\r\nconst Join = () => {\r\n    const [/* contactNumber */, setContactNumber] = useState(\"000000\");\r\n    const [form] = Form.useForm();\r\n    const generateContactNumber = () => {\r\n        const numStr = \"000000\" + (Math.random() * 1000000 | 0);\r\n        setContactNumber(numStr.substring(numStr.length - 6));\r\n    }\r\n    const onFinish = () => {\r\n        message.loading(\"Đang gửi gmail...\")\r\n        generateContactNumber();\r\n        sendForm('service_p1w3ye5', 'template_1mmlm6q', '#basic')\r\n        .then(function(response) {\r\n            if(response.status ===200){\r\n               \r\n                message.success(\"Gửi gmail thành công!\")\r\n                form.resetFields();\r\n               \r\n            }\r\n          \r\n        }, function(error) {\r\n          console.log('FAILED...', error);\r\n          message.error(\"Gửi gmail không  thành công:\",error)\r\n        });\r\n    };\r\n   //let day =\"2018-04-04\"\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-1\">\r\n                            <div className=\" contact_form\">\r\n                                <h3 className=\"title\">Đăng kí cộng tác viên</h3>\r\n                                <Form\r\n                                    style={{ width: \"450px\" }}\r\n                                    name=\"basic\"\r\n                                    id=\"basic\"\r\n                                    form={form} \r\n                                    onFinish={onFinish}  >\r\n                                    <Form.Item\r\n                                        name=\"user_name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tên!' }]}\r\n                                    >\r\n                                        <Input   name=\"user_name\" placeholder='Họ tên' />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_email\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập gmail!' }]}\r\n                                    >\r\n                                        <Input  name=\"user_email\" placeholder=\"Gmail\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_phone\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập số điện thoại!' },\r\n                                        {\r\n                                            min:10,\r\n                                            max:11,\r\n                                            message: 'Số điện thoại từ 10-11 số'\r\n                                        }]}\r\n                                    >\r\n                                        <Input  name=\"user_phone\" placeholder=\"Số điện thoại\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"message\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập nội dung!' }]}\r\n                                    >\r\n                                        <Input.TextArea  name=\"message\" rows={5} placeholder=\"Nội dung\" />\r\n                                    </Form.Item>\r\n                                  \r\n                                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Gửi gmail\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-4 \">\r\n                            <h3 className=\"title\">Địa chỉ</h3>\r\n                            <div className=\"contact\">\r\n                                <div>\r\n                                    <p><HomeOutlined /> <span className=\"text-bold\">Địa chỉ: </span>80 Cao Lỗ ,quận 8,TP.HCM </p>\r\n                                    <p><PhoneOutlined /><span className=\"text-bold\"> Điện thoại: </span>0849119919</p>\r\n                                    <p><SendOutlined /> <span className=\"text-bold\">Email: </span>quyengop@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Join;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table,  Image} from 'antd';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Detail.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport donateEvensts from '../Api/donateEvensts';\r\n//import { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst ListDonator = () => {\r\n    let { _id } = useParams();\r\n    const [Donate, setDonate] = useState([]);\r\n    const [/* DonateID */, setDonateID] = useState([]);\r\n    //const { isLoggedIn } = useSelector(state => state.login);\r\n    const [img, setImg] = useState([]);\r\n\r\n    const [licked, /* setLicked */] = React.useState(false);\r\n\r\n    const [AllDonator, setAllDonator] = useState([]);\r\n    const [/* AllDonates */, setAllDonates] = useState([]);\r\n   \r\n    const [ReleatedPost, setReleatedPost] = useState([]);\r\n    const [/* loading */, setloading] = useState(false);\r\n    //const data = useSelector(state => state.login.user);\r\n    const idCategoryPost = Donate.categoryPost\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        const fetchData = async () => {\r\n            try {\r\n                await donateEvensts.get(_id).then((res) => {\r\n                    setDonateID(res.data.DonateEnvent)\r\n                    //res.data.DonateEnvent.soTienCanDonate = res.data.DonateEnvent.soTienCanDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n                    setDonate(res.data.DonateEnvent);\r\n                    //console.log('ádas',res.data.DonateEnvent);\r\n                    setImg(res.data.DonateEnvent.image)\r\n\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch Donate data at: \", error);\r\n            }\r\n        };\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setAllDonates(res.data.DonateEnvents);\r\n\r\n                });\r\n\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n        const fetchAllDonater = async () => {\r\n            try {\r\n                await donateEvensts.getAllDonater(_id).then((res) => {\r\n                    if (res.data.status === \"success\") {\r\n                       \r\n                        setAllDonator(res.data.AllDonater)\r\n                    }\r\n\r\n                })\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch AllDonator data at: \", error);\r\n            }\r\n        }\r\n\r\n        fetchdonatesData();\r\n        fetchData();\r\n        fetchAllDonater();\r\n        //radomDonateEvent()\r\n    }, [licked,_id]);\r\n    console.log(idCategoryPost);\r\n    console.log(Donate);\r\n    useEffect(() => {\r\n\r\n        window.scrollTo(0, 0)\r\n        const fetchCategoryPost = async () => {\r\n            try {\r\n                await donateEvensts.getPostCategory(_id).then((res) => {\r\n                    setReleatedPost(res.data.ReleatedPost)\r\n                });\r\n                setloading(true)\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch Donate data at: \", error);\r\n            }\r\n        };\r\n        fetchCategoryPost();\r\n    }, [idCategoryPost]);\r\n\r\n    console.log(ReleatedPost);\r\n  \r\n    \r\n    const convertNumber = (x) => {\r\n        if (Donate === []) {\r\n            if (Donate.setAmount) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n        else {\r\n            if (Donate.setAmount) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n\r\n    }\r\n   \r\n    const columns = [\r\n        {\r\n            title: 'Tên ',\r\n            dataIndex: 'fullName',\r\n            key: 'fullName',\r\n\r\n        },\r\n        {\r\n            title: 'Số tiền ủng hộ (VNĐ)',\r\n            dataIndex: 'amountToDonate',\r\n            key: 'amountToDonate',\r\n            render: text => (\r\n                <>\r\n                    {convertNumber(text)} đ\r\n                </>\r\n            ),\r\n        }\r\n    ];\r\n   \r\n    return (\r\n        <>\r\n         <section className=\"detail_header\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"introduce\">\r\n                            <h3 className=\"title\">{Donate.title}</h3>\r\n                            <h3 style={{ fontSize: \"25px\", fontFamily: \"NunitoBold\" }}>\r\n                                Số tiền cần quyên góp {convertNumber(Donate.setAmount)}VNĐ </h3>\r\n                            <div class=\"fb-like\" data-href=\"https://momo.vn/cong-dong/chung-tay-gay-quy-dung-truong-moi-tang-25-em-hoc-sinh-ban-huoi-chua\" data-width=\"\" data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-share=\"true\"></div>\r\n                            <p style={{ fontSize: \"20px\" }}> {Donate.summary}</p>\r\n                        </div>\r\n                        <div className=\"slider\">\r\n                            <div style={{ justifyContent: \"space-between\", display: \"flex\" }}>\r\n                                {img.map((item) => {\r\n                                    return (\r\n                                        <Image\r\n                                            style={{ borderRadius: \"10px\" }}\r\n                                            width={400}\r\n                                            src={item}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"detail_body\">\r\n                <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                            <Table columns={columns} dataSource={AllDonator} />\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </section>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListDonator;\r\n","\r\nimport React, { useState, /* useEffect */ } from 'react';\r\nimport { Card, Form, Input, Button,message } from 'antd';\r\nimport { init, sendForm } from 'emailjs-com';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Contact.scss\"\r\nimport { PhoneOutlined, HomeOutlined, SendOutlined } from '@ant-design/icons';\r\ninit('user_fklwuZE0RZY32Omw7nLdC');\r\nconst MailPost = () => {\r\n    const [/* contactNumber */, setContactNumber] = useState(\"000000\");\r\n    const [form] = Form.useForm();\r\n    const generateContactNumber = () => {\r\n        const numStr = \"000000\" + (Math.random() * 1000000 | 0);\r\n        setContactNumber(numStr.substring(numStr.length - 6));\r\n    }\r\n    const onFinish = () => {\r\n        message.loading(\"Đang gửi gmail...\")\r\n        generateContactNumber();\r\n        sendForm('service_aknvozk', 'template_aynzi67', '#basic')\r\n        .then(function(response) {\r\n            if(response.status ===200){\r\n               \r\n                message.success(\"Gửi gmail thành công!\")\r\n                form.resetFields();\r\n               \r\n            }\r\n          \r\n        }, function(error) {\r\n          console.log('FAILED...', error);\r\n          message.error(\"Gửi gmail không  thành công:\",error)\r\n        });\r\n    };\r\n   //let day =\"2018-04-04\"\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-1\">\r\n                            <div className=\" contact_form\">\r\n                                <h3 className=\"title\">Chia sẻ hoàn cảnh cần giúp đỡ</h3>\r\n                                <Form\r\n                                    style={{ width: \"450px\" }}\r\n                                    name=\"basic\"\r\n                                    id=\"basic\"\r\n                                    form={form} \r\n                                    onFinish={onFinish}  >\r\n                                    <Form.Item\r\n                                        name=\"user_name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tên!' }]}\r\n                                    >\r\n                                        <Input   name=\"user_name\" placeholder='Họ tên' />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_email\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập gmail!' }]}\r\n                                    >\r\n                                        <Input  name=\"user_email\" placeholder=\"Gmail\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_phone\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập số điện thoại!' },\r\n                                        {\r\n                                            min:10,\r\n                                            max:11,\r\n                                            message: 'Số điện thoại từ 10-11 số'\r\n                                        }]}\r\n                                    >\r\n                                        <Input  name=\"user_phone\" placeholder=\"Số điện thoại\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"message\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập nội dung!' }]}\r\n                                    >\r\n                                        <Input.TextArea  name=\"message\" rows={5} placeholder=\"Nội dung\" />\r\n                                    </Form.Item>\r\n                                  \r\n                                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Gửi gmail\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-4 \">\r\n                            <h3 className=\"title\">Địa chỉ</h3>\r\n                            <div className=\"contact\">\r\n                                <div>\r\n                                    <p><HomeOutlined /> <span className=\"text-bold\">Địa chỉ: </span>80 Cao Lỗ ,quận 8,TP.HCM </p>\r\n                                    <p><PhoneOutlined /><span className=\"text-bold\"> Điện thoại: </span>0849119919</p>\r\n                                    <p><SendOutlined /> <span className=\"text-bold\">Email: </span>quyengop@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MailPost;\r\n","import React, { createRef, useState } from 'react';\r\nimport { Modal, Form, Input, Button, message } from 'antd';\r\nimport { LockOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport '../style/Profile.scss';\r\nimport UserApi from '../Api/UserApi';\r\nconst Profile = () => {\r\n    const [Error, setError] = useState(\"\");\r\n    /* const normFile = (e) => {\r\n\r\n        if (Array.isArray(e)) {\r\n            setFile(e.fileList[0].name)\r\n\r\n        }\r\n        return e && e.fileList;\r\n\r\n    }; */\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        UserApi.putUpdateProfile(values)\r\n        .then((res) => {\r\n            if (res.data.status === \"success\") {\r\n                message.success(\"Cập nhật thông tin thành công !\")\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data.User));\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000)\r\n            }\r\n            if (res.data.status === \"error\") {\r\n                message.success(\"Cập nhật thông tin thành công !\")\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data.User));\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"Loi nè: \",error);\r\n        })\r\n    };\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const form = createRef();\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n   const onChangePass =( values)=>{\r\n    UserApi.putChangePasss(values).then((res)=>{\r\n            console.log(res);\r\n            if (res.data.status === \"success\") {\r\n                message.success(\"Thay đổi mật khẩu thành công !\")\r\n                setTimeout(() => {\r\n                    handleCancel()\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.response.data.error);\r\n            setError(error.response.data.error)\r\n        })\r\n\r\n   }\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    //console.log(user.phone);    \r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"profile\">\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"profile_form\"\r\n                           /*  labelCol={{ span: 8 }}\r\n                            wrapperCol={{ span: 16 }} */\r\n                            initialValues={{ username: `${user.username}`, fullName: `${user.fullName}`, email: `${user.email}`, id: `${user._id}` }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed} >\r\n                            <Form.Item\r\n                                name=\"id\"\r\n                                hidden>\r\n                                <Input readOnly autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Tên tài khoản:\"\r\n                                name=\"username\">\r\n                                <Input readOnly autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Họ và tên:\"\r\n                                name=\"fullName\">\r\n                                <Input autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Email\"\r\n                                name=\"email\">\r\n                                <Input autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item >\r\n                                <Button onClick={showModal}> <KeyOutlined />Đổi mật khẩu</Button>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Cập nhật\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal className=\"model_pass\" footer={null} title=\"Đổi mật khẩu\" visible={isModalVisible} onCancel={handleCancel}>\r\n                <Form\r\n                    name=\"normal_resgiter\"\r\n                    className=\"resgiter-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onChangePass}\r\n                    ref={form}\r\n                >\r\n                    <p style={{ color: \"red\" }}>{Error}</p> \r\n                    <Form.Item\r\n                        label=\"Mật khẩu cũ\"\r\n                        name=\"oldPassword\"\r\n                        rules={[\r\n                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Mật khẩu mới\"\r\n                        name=\"newPassword\"\r\n                        rules={[\r\n                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Nhập lại mật khẩu\"\r\n                        name=\"passwordConfirm\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Hãy nhập mật khẩu !',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('newPassword') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('Hai mật khẩu phải trùng nhau !'));\r\n                                },\r\n                            }),\r\n                        ]}>\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Đổi mật khẩu\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n//import { LockOutlined } from '@ant-design/icons';\r\nimport '../style/Profile.scss';\r\n\r\nconst ProfileUser = () => {\r\n\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    //console.log(user.phone);    \r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"profile\">\r\n                        {user.googleID ? (<>\r\n                            <Form\r\n                                layout=\"vertical\"\r\n                                //name=\"basic\"\r\n                                className=\"profile_form\"\r\n                                initialValues={{ username: `${user.username}`, fullName: `${user.fullName}`, email: `${user.email}`, id: `${user._id}` }}>\r\n                                <Form.Item\r\n                                    name=\"id\"\r\n                                    hidden>\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Họ và tên:\"\r\n                                    name=\"fullName\">\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Email:\"\r\n                                    name=\"email\">\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </>) : (<>\r\n                            <Form\r\n                                layout=\"vertical\"\r\n                                //name=\"basic\"\r\n                                className=\"profile_form\"\r\n                                initialValues={{ username: `${user.username}`, fullName: `${user.fullName}`, email: `${user.email}`, id: `${user._id}` }}>\r\n                                <Form.Item\r\n                                    name=\"id\"\r\n                                    hidden>\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Tên tài khoản:\"\r\n                                    name=\"username\">\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Họ và tên:\"\r\n                                    name=\"fullName\">\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    label=\"Email:\"\r\n                                    name=\"email\">\r\n                                    <Input readOnly autoComplete={\"off\"} />\r\n                                </Form.Item>\r\n                            </Form>\r\n\r\n                        </>)}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileUser;\r\n","import { Button, Table, Tabs } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n//import HistoryDonate from \"../components/Historydonate\"\r\nimport donateEvensts from '../Api/donateEvensts';\r\nimport ProFile from '../components/EditProfile';\r\nimport ProfileUser from '../components/ProfileUser';\r\nimport {EditOutlined,ProfileOutlined,HistoryOutlined} from '@ant-design/icons';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst { TabPane } = Tabs;\r\nconst Profile = () => {\r\n    const islogin = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [AllDonate, setAllDonate] = useState([]);\r\n    const [/* listDonates */, setListdonates] = useState([]);\r\n    const [History, setHistory] = useState([]);\r\n    //const [state, setstate] = useState([]);\r\n    const DonateHistory = []\r\n    useEffect(() => {\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setHistory(res.data.DonateEnvents);\r\n\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n        const fetchgetListdonateUser = async () => {\r\n            await donateEvensts.getListdonateUser().then((res) => {\r\n                setAllDonate(res.data.AllDonate);\r\n            })\r\n        }\r\n        fetchgetListdonateUser();\r\n        fetchdonatesData();\r\n    }, []);\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Tiêu đề bài viết',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n        },\r\n\r\n        {\r\n            title: 'Số tiền đã ủng hộ(VNĐ)',\r\n            dataIndex: 'amountToDonate',\r\n            key: 'amountToDonate',\r\n            render: text => (\r\n                <>{\r\n                    convertNumber(text)\r\n                }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xem bài viết',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n            render: text => (\r\n                <>\r\n                    <Link to={`/thong-tin-chi-tiet/${text}`}><Button>Xem chi tiết</Button> </Link>\r\n                </>\r\n            ),\r\n        }\r\n    ];\r\n    const a = [];\r\n    console.log(AllDonate);\r\n\r\n    AllDonate.forEach(element => {\r\n        a.push(element.donateEvent)\r\n    });\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n\r\n        let filterProduct = [];\r\n        filterProduct = History.filter(\r\n            History => History._id === a[i]\r\n        )\r\n\r\n        DonateHistory.push(filterProduct)\r\n\r\n    }\r\n    DonateHistory.forEach((e) => {\r\n        for (let i = 0; i < e.length; i++) {\r\n            for (let j = 0; j < AllDonate.length; j++) {\r\n                if (e[i]._id === AllDonate[j].donateEvent) {\r\n                    e[i].amountToDonate = AllDonate[j].amountToDonate;\r\n                    console.log(e);\r\n                }\r\n            }\r\n        }\r\n        //console.log(e[0].tieuDe);\r\n    })\r\n    const merge3 = DonateHistory.flat(1);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if (!islogin) {\r\n\r\n        return <Redirect to='/' />;\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"profile_user\">\r\n                    <h3 className=\"profile_user_title\">\r\n                        Thông tin tài khoản\r\n                    </h3>\r\n                    <Tabs tabPosition=\"left\" defaultActiveKey=\"1\"  >\r\n                    {user.googleID ? (<>\r\n                        <TabPane tab={ <span><ProfileOutlined />Thông tin cá nhân</span>} key=\"1\">\r\n                            <ProfileUser></ProfileUser>\r\n                        </TabPane>\r\n                      \r\n                      {/*   <TabPane tab={ <span><EditOutlined />Chinh sửa thông tin</span>} key=\"2\">\r\n                            <ProFile></ProFile>\r\n                        </TabPane> */}\r\n\r\n                        <TabPane  tab={ <span><HistoryOutlined />Lịch sử ủng hộ</span>} key=\"3\">\r\n                            <div className=\"tbl_history\" style={{ textAlign: \"center\" }}>\r\n\r\n                                <Table {...layout}\r\n\r\n                                    dataSource={\r\n                                        merge3\r\n                                    }\r\n                                    columns={columns} />;\r\n                            </div>\r\n                        </TabPane>\r\n                        </>):(<>\r\n                            <TabPane tab={ <span><ProfileOutlined />Thông tin cá nhân</span>} key=\"1\">\r\n                            <ProfileUser></ProfileUser>\r\n                        </TabPane>\r\n                      \r\n                        <TabPane tab={ <span><EditOutlined />Chinh sửa thông tin</span>} key=\"2\">\r\n                            <ProFile></ProFile>\r\n                        </TabPane>\r\n\r\n                        <TabPane  tab={ <span><HistoryOutlined />Lịch sử ủng hộ</span>} key=\"3\">\r\n                            <div className=\"tbl_history\" style={{ textAlign: \"center\" }}>\r\n\r\n                                <Table {...layout}\r\n\r\n                                    dataSource={\r\n                                        merge3\r\n                                    }\r\n                                    columns={columns} />;\r\n                            </div>\r\n                        </TabPane>\r\n                        </>)}\r\n                        \r\n\r\n                    </Tabs>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Form, Input,  Row, Col,  Button } from 'antd'\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\nconst Resgister = () => {\r\n    const [form] = Form.useForm();\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n        <Row className='login-container'>\r\n                <Col className=\"login-form-wrapper\" offset={6} span={10}>\r\n            <Form\r\n                {...formItemLayout}\r\n                form={form}\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n\r\n                scrollToFirstError\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"E-mail\"\r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                            message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: 'Nhập gmail!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Mật khẩu\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Hãy nhập mật khẩu!',\r\n                        },\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Nhập lại mật khẩu!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <Form.Item\r\n                    name=\"phone\"\r\n                    label=\"Số điện thoại\"\r\n                    rules={[{ required: true, message: 'Chưa nhập số điện thoại' }]}\r\n                >\r\n                    <Input  style={{ width: '100%' }} />\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Resgister;\r\n","import userApi from \"../../Api/UserApi\";\r\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\r\n\r\nexport const getMe = createAsyncThunk('user/getMe', async (params, thunkAPI) => {\r\n  // thunkAPI.dispatch(...)\r\n  const currentUser = await userApi.getMe();\r\n  return currentUser;\r\n});\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    current: {},\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getMe.fulfilled]: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  }\r\n});\r\nconst { reducer: userReducer } = userSlice;\r\nexport default userReducer;","import { unwrapResult } from '@reduxjs/toolkit';\r\nimport 'antd/dist/antd.css';\r\n//import ScrollToTop from \"react-scroll-to-top\";\r\nimport firebase from 'firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport UserApi from './Api/UserApi';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport AboutUs from './pages/AboutUs';\r\nimport AllDonate from './pages/AllDonate';\r\nimport Contact from './pages/Contact';\r\nimport Detail from './pages/Detail';\r\nimport Home from './pages/Home';\r\nimport Join from './pages/Join';\r\nimport ListDonator from './pages/ListDonator';\r\nimport MailPost from './pages/MailPost';\r\nimport Profile from './pages/Profile';\r\n//import Login from './pages/Login';\r\nimport Resgister from './pages/Resgister';\r\nimport { getMe } from './redux/reducer/UserSlice';\r\n// Configure Firebase.\r\nconst config = {  \r\n  apiKey: 'AIzaSyDFlce1nx_WeDvvyQFoQY_VnLVXQMOdk7o',\r\n  authDomain: 'donate-d9fdf.firebaseapp.com',\r\n  // ...\r\n};\r\nfirebase.initializeApp(config);\r\nfunction App() {\r\n  \r\n  const [/* isSignedIn */, setIsSignedIn] = useState(false); // Local signed-in state.\r\n  const { isLoggedIn } = useSelector(state => state.login);\r\n  const dispatch = useDispatch();\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      setIsSignedIn(!!user);\r\n      if (!user) {\r\n        console.log(\"Chưa đăng nhập\");\r\n        return\r\n      }\r\n      else{\r\n        try {\r\n          const actionResult = await dispatch(getMe());\r\n          const currentUser = await unwrapResult(actionResult);\r\n          UserApi.postLoginGoogle(currentUser).then((res)=>{\r\n            if(res.data.status ===\"success\"){\r\n               let user=  res.data.data.user;\r\n               localStorage.setItem(\"user\", JSON.stringify(user));\r\n               dispatch({\r\n                type: \"LOGIN_SUCCESS\",\r\n                payload: { user: user },\r\n              });\r\n               console.log(user);\r\n             \r\n\r\n              //window.location.reload();\r\n            }\r\n          })\r\n          \r\n          \r\n          console.log('Logged in user: ', currentUser);\r\n         //window.location.reload()\r\n  \r\n        } catch (error) {\r\n          console.log('Failed to login ', error.message);\r\n          // show toast error\r\n        }\r\n      }\r\n      console.log(\"Đã đăng nhập\", user);\r\n     \r\n    });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n\r\n  }, []);\r\n  \r\n/*   if (isLoggedIn) {\r\n    <Redirect to=\"/\" />\r\n\r\n  } */\r\n  return (\r\n\r\n    <Router>\r\n     \r\n        <Header />\r\n        <Route onUpdate={() => window.scrollTo(0, 0)} exact path=\"/\">\r\n          <Home onUpdate={() => window.scrollTo(0, 0)} />\r\n\r\n        </Route>\r\n        <Route exact path=\"/lien-he\">\r\n          <Contact />\r\n\r\n        </Route>\r\n        <Route exact path=\"/gioi-thieu\">\r\n          <AboutUs />\r\n\r\n        </Route>\r\n        <Route exact path=\"/tham-gia\">\r\n          <Join />\r\n        </Route>\r\n        <Route exact path=\"/hoan-canh-kho-khan\">\r\n          <MailPost />\r\n        </Route>\r\n        <Route onUpdate={() => window.scrollTo(0, 0)} exact path=\"/tat-ca-chuong-trinh\">\r\n          <AllDonate />\r\n\r\n        </Route>\r\n        <Switch>\r\n          <Route exact path=\"/thong-tin-chi-tiet/:_id\">\r\n            <Detail />\r\n          </Route>\r\n          <Route exact path=\"/xem-tat-ca-nguoi-ung-ho/:_id\">\r\n            <ListDonator />\r\n          </Route>\r\n          \r\n          <Route exact path=\"/thong-tin-tai-khoan\">\r\n            <Profile />\r\n          </Route>\r\n          {/* <Route exact path=\"/dang-nhap\">\r\n            <Login />\r\n          </Route> */}\r\n          <Route exact path=\"/dang-ki\">\r\n            <Resgister />\r\n          </Route>\r\n        </Switch>\r\n        <Footer  onUpdate={() => window.scrollTo(0, 0)} />\r\n    \r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n\r\n  const user =  JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n \r\n  const initialState = user !== null\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function test (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  //console.log(\"login\",user.isLoggedIn);\r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","//import { createStore, applyMiddleware } from \"redux\";\r\n//import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport LoginReducer from \"./redux/reducer/auth\";\r\nimport {configureStore} from \"@reduxjs/toolkit\"\r\n//import thunk from \"redux-thunk\";\r\nimport UserReducer from \"./redux/reducer/UserSlice\";\r\n//import reducer from \"./redux/reducer\";\r\n//const middleware = [thunk];\r\n\r\n\r\nconst store = configureStore({\r\n  reducer:{\r\n    login : LoginReducer,\r\n    user :UserReducer\r\n  }\r\n  \r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n//import { useEffect } from 'react';\r\n//import ScrollToTop from \"react-scroll-to-top\";\r\nimport { CookiesProvider } from 'react-cookie';\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <Provider store={store}>\r\n   \r\n      <App />\r\n\r\n    </Provider>\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}