[{"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js":"1","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js":"2","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js":"3","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js":"4","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js":"5","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js":"6","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js":"7","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js":"8","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js":"9","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js":"10","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js":"11","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js":"12","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js":"13","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js":"14","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js":"15","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js":"16","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js":"17","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js":"18","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js":"19","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js":"20","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js":"21","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js":"22","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Profile.js":"23","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Historydonate.js":"24","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\UserSlice.js":"25","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\UserApi.js":"26","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Contact.js":"27","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AllDonate.js":"28","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListALl.js":"29","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListRadom.js":"30","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\ListDonator.js":"31","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Momo.js":"32","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\EditProfile.js":"33","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ProfileUser.js":"34","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Join.js":"35","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\MailPost.js":"36","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AboutUs.js":"37"},{"size":777,"mtime":1626765232133,"results":"38","hashOfConfig":"39"},{"size":375,"mtime":1624076310741,"results":"40","hashOfConfig":"39"},{"size":4144,"mtime":1629611915631,"results":"41","hashOfConfig":"39"},{"size":3486,"mtime":1629613992397,"results":"42","hashOfConfig":"39"},{"size":3900,"mtime":1629619564044,"results":"43","hashOfConfig":"39"},{"size":15571,"mtime":1629714227255,"results":"44","hashOfConfig":"39"},{"size":64787,"mtime":1629714353892,"results":"45","hashOfConfig":"39"},{"size":266,"mtime":1625290642505,"results":"46","hashOfConfig":"39"},{"size":350,"mtime":1624076310738,"results":"47","hashOfConfig":"39"},{"size":1305,"mtime":1628959744101,"results":"48","hashOfConfig":"39"},{"size":3208,"mtime":1628959744101,"results":"49","hashOfConfig":"39"},{"size":524,"mtime":1626764469249,"results":"50","hashOfConfig":"39"},{"size":166,"mtime":1624456360714,"results":"51","hashOfConfig":"39"},{"size":1148,"mtime":1627020599091,"results":"52","hashOfConfig":"39"},{"size":371,"mtime":1624467488953,"results":"53","hashOfConfig":"39"},{"size":317,"mtime":1624456000973,"results":"54","hashOfConfig":"39"},{"size":30011,"mtime":1629714206230,"results":"55","hashOfConfig":"39"},{"size":6026,"mtime":1629352317155,"results":"56","hashOfConfig":"39"},{"size":3629,"mtime":1625119163285,"results":"57","hashOfConfig":"39"},{"size":1830,"mtime":1628959744101,"results":"58","hashOfConfig":"39"},{"size":1901,"mtime":1627061517910,"results":"59","hashOfConfig":"39"},{"size":12329,"mtime":1629574884058,"results":"60","hashOfConfig":"39"},{"size":5907,"mtime":1629602427327,"results":"61","hashOfConfig":"39"},{"size":1203,"mtime":1626766153056,"results":"62","hashOfConfig":"39"},{"size":606,"mtime":1625259365415,"results":"63","hashOfConfig":"39"},{"size":970,"mtime":1629548730135,"results":"64","hashOfConfig":"39"},{"size":4502,"mtime":1629573049720,"results":"65","hashOfConfig":"39"},{"size":6429,"mtime":1629714392596,"results":"66","hashOfConfig":"39"},{"size":6157,"mtime":1629352312125,"results":"67","hashOfConfig":"39"},{"size":861,"mtime":1627106387114,"results":"68","hashOfConfig":"39"},{"size":6120,"mtime":1629714306259,"results":"69","hashOfConfig":"39"},{"size":1141,"mtime":1629540826335,"results":"70","hashOfConfig":"39"},{"size":7948,"mtime":1629522935984,"results":"71","hashOfConfig":"39"},{"size":3271,"mtime":1629602310070,"results":"72","hashOfConfig":"39"},{"size":5182,"mtime":1629573752900,"results":"73","hashOfConfig":"39"},{"size":5202,"mtime":1629602030977,"results":"74","hashOfConfig":"39"},{"size":7433,"mtime":1629714122188,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1v8q40h",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js",[],["164","165"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js",["166","167"],"import { unwrapResult } from '@reduxjs/toolkit';\r\nimport 'antd/dist/antd.css';\r\n//import ScrollToTop from \"react-scroll-to-top\";\r\nimport firebase from 'firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport UserApi from './Api/UserApi';\r\nimport './App.css';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport AboutUs from './pages/AboutUs';\r\nimport AllDonate from './pages/AllDonate';\r\nimport Contact from './pages/Contact';\r\nimport Detail from './pages/Detail';\r\nimport Home from './pages/Home';\r\nimport Join from './pages/Join';\r\nimport ListDonator from './pages/ListDonator';\r\nimport MailPost from './pages/MailPost';\r\nimport Profile from './pages/Profile';\r\n//import Login from './pages/Login';\r\nimport Resgister from './pages/Resgister';\r\nimport { getMe } from './redux/reducer/UserSlice';\r\n// Configure Firebase.\r\nconst config = {  \r\n  apiKey: 'AIzaSyDFlce1nx_WeDvvyQFoQY_VnLVXQMOdk7o',\r\n  authDomain: 'donate-d9fdf.firebaseapp.com',\r\n  // ...\r\n};\r\nfirebase.initializeApp(config);\r\nfunction App() {\r\n  \r\n  const [/* isSignedIn */, setIsSignedIn] = useState(false); // Local signed-in state.\r\n  const { isLoggedIn } = useSelector(state => state.login);\r\n  const dispatch = useDispatch();\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      setIsSignedIn(!!user);\r\n      if (!user) {\r\n        console.log(\"Chưa đăng nhập\");\r\n        return\r\n      }\r\n      else{\r\n        try {\r\n          const actionResult = await dispatch(getMe());\r\n          const currentUser = await unwrapResult(actionResult);\r\n          UserApi.postLoginGoogle(currentUser).then((res)=>{\r\n            if(res.data.status ===\"success\"){\r\n               let user=  res.data.data.user;\r\n               dispatch({\r\n                type: \"LOGIN_SUCCESS\",\r\n                payload: { user: user },\r\n              });\r\n               console.log(user);\r\n              localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n              //window.location.reload();\r\n            }\r\n          })\r\n          \r\n          \r\n          console.log('Logged in user: ', currentUser);\r\n         //window.location.reload()\r\n  \r\n        } catch (error) {\r\n          console.log('Failed to login ', error.message);\r\n          // show toast error\r\n        }\r\n      }\r\n      console.log(\"Đã đăng nhập\", user);\r\n     \r\n    });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n\r\n  }, []);\r\n  \r\n/*   if (isLoggedIn) {\r\n    <Redirect to=\"/\" />\r\n\r\n  } */\r\n  return (\r\n\r\n    <Router>\r\n     \r\n        <Header />\r\n        <Route onUpdate={() => window.scrollTo(0, 0)} exact path=\"/\">\r\n          <Home onUpdate={() => window.scrollTo(0, 0)} />\r\n\r\n        </Route>\r\n        <Route exact path=\"/lien-he\">\r\n          <Contact />\r\n\r\n        </Route>\r\n        <Route exact path=\"/gioi-thieu\">\r\n          <AboutUs />\r\n\r\n        </Route>\r\n        <Route exact path=\"/tham-gia\">\r\n          <Join />\r\n        </Route>\r\n        <Route exact path=\"/hoan-canh-kho-khan\">\r\n          <MailPost />\r\n        </Route>\r\n        <Route onUpdate={() => window.scrollTo(0, 0)} exact path=\"/tat-ca-chuong-trinh\">\r\n          <AllDonate />\r\n\r\n        </Route>\r\n        <Switch>\r\n          <Route exact path=\"/thong-tin-chi-tiet/:_id\">\r\n            <Detail />\r\n          </Route>\r\n          <Route exact path=\"/xem-tat-ca-nguoi-ung-ho/:_id\">\r\n            <ListDonator />\r\n          </Route>\r\n          \r\n          <Route exact path=\"/thong-tin-tai-khoan\">\r\n            <Profile />\r\n          </Route>\r\n          {/* <Route exact path=\"/dang-nhap\">\r\n            <Login />\r\n          </Route> */}\r\n          <Route exact path=\"/dang-ki\">\r\n            <Resgister />\r\n          </Route>\r\n        </Switch>\r\n        <Footer  onUpdate={() => window.scrollTo(0, 0)} />\r\n    \r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js",["168","169","170","171"],"import { FacebookOutlined, InstagramOutlined, TwitterOutlined, YoutubeOutlined } from '@ant-design/icons';\r\nimport { Divider } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Footer.scss\";\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"footer\">\r\n                <Divider />\r\n                <div className=\"container\">\r\n                    <div className=\"footer_text col-10 offset-1 \">\r\n                        <div className=\"row\">\r\n                            <div className=\"footer_text-head\">\r\n                                <div className=\"img \">\r\n                                    <img width=\"40px\" src=\"../images/logo.png\" alt=\"logo\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className=\"wapper_menu\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"menu_item-text\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p className=\"text-bold\">About Us</p>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <Link to=\"gioi-thieu\" > <span className=\"btn-text\">About Us</span></Link>\r\n\r\n                                                </li>\r\n                                             {/*    <li>\r\n                                                    <a href=\"#/\">Terms & Conditions</a>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <a href=\"#/\">Privacy Policy</a>\r\n                                                </li> */}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col-3\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"menu_item-text\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <p className=\"text-bold\">Help</p>\r\n                                                </li>\r\n\r\n                                                <li>\r\n                                                    <Link to=\"/lien-he\">Contact Us</Link>\r\n\r\n                                                </li>\r\n\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer_end\">\r\n                    <div className=\"container\">\r\n                        <div className=\"footer_end_text col-10 offset-1 \">\r\n                            <p style={{textAlign:\"center\"}}> Copyright © Đoàn Văn Duy Tâm & Quách Trọng Nhân</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js",["172","173"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js",["174"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default  withRouter(ScrollToTop);","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js",[],["175","176"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js",["177"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js",["178","179","180","181"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js",["182"],"import { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Tabs } from 'antd';\r\nimport React, { createRef, useState } from 'react';\r\nimport GoogleButton from 'react-google-button';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { /* useHistory, */ Redirect } from 'react-router-dom';\r\nimport { login, register } from \"../redux/actions/auth.js\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/ModalLogin.scss\";\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nconst { TabPane } = Tabs;\r\nconst uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInSuccessUrl: \"/\",\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n\r\n\r\n    ]\r\n}\r\nconst ModalLogin = () => {\r\n    //const [form] = Form.useForm();\r\n    const form = createRef();\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [Error, setError] = useState(\"\");\r\n    const [ErrorRegister, setErrorRegister] = useState(\"\");\r\n    //const [Key, setKey] = useState(\"\");\r\n    //const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    //const { isLoggedIn } = useSelector(state => state.auth);\r\n    //const message = useSelector(state => state.auth.user);\r\n    //const history = useHistory();\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        form.current.resetFields();\r\n        setError(\"\")\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        form.current.resetFields();\r\n        setError(\"\")\r\n    };\r\n    const onFinish = (values) => {\r\n        //setLoading(true);\r\n        form.current.resetFields();\r\n        dispatch(login(values))\r\n            .then((res) => {\r\n                console.log(res);\r\n                setError(res)\r\n            })\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    const onResgiter = (values) => {\r\n        console.log(values);\r\n        dispatch(register(values)).then((res) => {\r\n            console.log(res);\r\n            setErrorRegister(res)\r\n        })\r\n    }\r\n    if (isLoggedIn !== null) {\r\n        <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <>\r\n            <Button className=\"ant-btn-login\" data-id=\"1\" type=\"primary\" onClick={showModal}>\r\n                Đăng nhập / Đăng kí\r\n            </Button>\r\n            <Modal visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}\r\n                width={800} footer={null}\r\n            >\r\n                <Tabs /* onChange={callback} */>\r\n                    <TabPane tab=\"Đăng nhập\" key=\"1\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 bg-login\">\r\n\r\n                            </div>\r\n                            <div className=\"col-6 frm\" >\r\n                                <h3>Xin Chào !</h3>\r\n                                <Form\r\n                                    name=\"normal_login\"\r\n                                    className=\"login-form\"\r\n                                    initialValues={{ remember: true }}\r\n                                    onFinish={onFinish}\r\n                                    ref={form}\r\n                                >\r\n                                    <p style={{ color: \"red\" }} className=\"error\">{Error}</p>\r\n                                    <p>Tài khoản </p>\r\n                                    <Form.Item\r\n                                        name=\"username\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Hãy nhập tài khoản!' },\r\n                                            {\r\n                                                pattern: new RegExp(/^[a-zA-Z0-9]{3,16}$/),\r\n                                                message: \"Tài khoản phải không có kí tự đặc biệt !\",\r\n                                            },\r\n                                            {\r\n                                                min:3,\r\n                                                max:16,\r\n                                                message: 'Tài khoản phải từ 3-16 kí tự !',\r\n                                            }\r\n                                        ]}>\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Tài khoản\" autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p>Mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập mật khẩu!' },\r\n                                        {\r\n                                            min:8,\r\n                                            max:16,\r\n                                            message: 'Mật khẩu phải từ 8-16 kí tự !',\r\n                                        }]}\r\n                                    >\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n                                            placeholder=\"Mật khẩu\"\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                            Đăng nhập\r\n                                        </Button>\r\n\r\n                                    </Form.Item>\r\n                                </Form>\r\n                                <p style={{fontWeight:\"bolder\"}}>Hoặc</p>\r\n                                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"Đăng kí\" key=\"2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 bg-register\">\r\n\r\n                            </div>\r\n                            <div className=\"col-6 frm\" >\r\n                                <h3>Tạo tài khoản !</h3>\r\n                                <Form\r\n                                    name=\"normal_resgiter\"\r\n                                    className=\"resgiter-form\"\r\n                                    initialValues={{ remember: true }}\r\n                                    onFinish={onResgiter}\r\n                                    ref={form} >\r\n                                    <p style={{ color: \"red\" }} className=\"error\">{ErrorRegister}</p>\r\n\r\n                                    <p><span>*</span> Tài khoản </p>\r\n                                    <Form.Item\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tài khoản!' },\r\n                                        {\r\n                                            pattern: new RegExp(/^[a-zA-Z0-9]{3,16}$/),\r\n                                            message: \"Tài khoản phải không có kí tự đặc biệt !\",\r\n                                        }]}\r\n                                    >\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Họ và tên</p>\r\n                                    <Form.Item\r\n                                        name=\"fullName\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập họ tên !' }]}\r\n                                    >\r\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} autoComplete=\"off\" />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"password\"\r\n                                        rules={[\r\n                                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                                        ]}\r\n                                    >\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <p><span>*</span> Nhập lại mật khẩu</p>\r\n                                    <Form.Item\r\n                                        name=\"passwordConfirm\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy nhập mật khẩu !',\r\n                                            },\r\n                                            ({ getFieldValue }) => ({\r\n                                                validator(_, value) {\r\n                                                    if (!value || getFieldValue('password') === value) {\r\n                                                        return Promise.resolve();\r\n                                                    }\r\n                                                    return Promise.reject(new Error('Hai mật khẩu phải trùng nhau !'));\r\n                                                },\r\n                                            }),\r\n                                        ]}>\r\n                                        <Input\r\n                                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                            type=\"password\"\r\n\r\n                                            autoComplete=\"off\"\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <p><span>*</span> Email</p>\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'The input is not valid E-mail!',\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input your E-mail!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"resgister-form-button\">\r\n                                            Đăng kí\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default ModalLogin;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Profile.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Historydonate.js",["183","184","185"],"import React from 'react';\r\nimport {Table} from \"antd\"\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\nconst Historydonate = (props) => {\r\n    const columns = [\r\n        {\r\n          title: 'Tiêu đề bài viết',\r\n          dataIndex: 'tieuDe',\r\n          key: 'tieude',\r\n        },\r\n        {\r\n          title: 'Ngày bắt đầu',\r\n          dataIndex: 'ngayBatSau',\r\n          key: 'ngayBatSau',\r\n        },\r\n        {\r\n          title: 'Ngày kết thúc',\r\n          dataIndex: 'ngayKetThuc',\r\n          key: 'ngayKetThuc',\r\n        },\r\n        {\r\n            title: 'Số tiền đã ủng hộ(VNĐ)',\r\n            dataIndex: 'soTienCanDonate',\r\n            key: 'soTienCanDonate',\r\n          },\r\n          {\r\n            title: 'Số tiền đã quyên góp được(VNĐ)',\r\n            dataIndex: 'soTienDonateHieTai',\r\n            key: 'soTienDonateHieTai',\r\n          },\r\n          {\r\n            title: 'Trạng thai',\r\n            dataIndex: 'trangThai',\r\n            key: 'trangThai',\r\n          },\r\n      ];\r\nconsole.log(props.Historydonate);\r\n    return (\r\n       <>\r\n       \r\n       </>\r\n    );\r\n}\r\n\r\nexport default Historydonate;\r\n",["186","187"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\UserSlice.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\UserApi.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Contact.js",["188"],"\r\nimport React, { useState /* useEffect */,createRef } from 'react';\r\nimport { Card, Form, Input, Button,message } from 'antd';\r\nimport { init, sendForm } from 'emailjs-com';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Contact.scss\"\r\nimport { PhoneOutlined, HomeOutlined, SendOutlined } from '@ant-design/icons';\r\ninit('user_34PJkVJOxKj7nBHxWBCKl');\r\nconst Contact = () => {\r\n    const [/* contactNumber */, setContactNumber] = useState(\"000000\");\r\n    const [form] = Form.useForm();\r\n    const generateContactNumber = () => {\r\n        const numStr = \"000000\" + (Math.random() * 1000000 | 0);\r\n        setContactNumber(numStr.substring(numStr.length - 6));\r\n    }\r\n    const onFinish = () => {\r\n        message.loading(\"Đang gửi gmail...\")\r\n     \r\n        generateContactNumber();\r\n        sendForm('service_o3fxixm', 'template_homhg9p', '#basic')\r\n        .then(function(response) {\r\n            if(response.status ===200){\r\n               \r\n                message.success(\"Gửi gmail thành công!\")\r\n                \r\n                form.resetFields();\r\n               \r\n            }\r\n          \r\n        }, function(error) {\r\n          console.log('FAILED...', error);\r\n          message.error(\"Gửi gmail không  thành công:\",error)\r\n        });\r\n    };\r\n   //let day =\"2018-04-04\"\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-1\">\r\n                            <div className=\" contact_form\">\r\n                                <h3 className=\"title\">Liên lạc</h3>\r\n                                <Form\r\n                                    style={{ width: \"450px\" }}\r\n                                    name=\"basic\"\r\n                                    id=\"basic\"\r\n                                    form={form} \r\n                                    onFinish={onFinish}  >\r\n                                    <Form.Item\r\n                                        name=\"user_name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tên!' }]}\r\n                                    >\r\n                                        <Input   name=\"user_name\" placeholder='Họ tên' />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_email\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập gmail!' }]}\r\n                                    >\r\n                                        <Input  name=\"user_email\" placeholder=\"Gmail\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"message\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập nội dung!' }]}\r\n                                    >\r\n                                        <Input.TextArea  name=\"message\" rows={5} placeholder=\"Nội dung\" />\r\n                                    </Form.Item>\r\n                                  \r\n                                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Gửi gmail\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-4 \">\r\n                            <h3 className=\"title\">Địa chỉ</h3>\r\n                            <div className=\"contact\">\r\n                                <div>\r\n                                    <p><HomeOutlined /> <span className=\"text-bold\">Địa chỉ: </span>80 Cao Lỗ ,quận 8,TP.HCM </p>\r\n                                    <p><PhoneOutlined /><span className=\"text-bold\"> Điện thoại: </span>0849119919</p>\r\n                                    <p><SendOutlined /> <span className=\"text-bold\">Email: </span>quyengop@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AllDonate.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListALl.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListRadom.js",["189","190","191","192","193","194","195","196","197"],"\r\nimport React, { useState, /* useEffect */ } from 'react';\r\nimport { Card, Progress, Typography, Badge, Input } from 'antd';\r\nimport { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nconst ListRadom = (props) => {\r\n    const [list, /* setlist */] = useState([props.listDonate]);\r\n    const { Text } = Typography;\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    console.log(list);\r\n    return (\r\n        <>  \r\n\r\n             \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListRadom;\r\n",["198","199"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\ListDonator.js",["200"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Momo.js",["201","202","203"],"\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../style/Momo.scss\"\r\nconst Momo = () => {\r\n    const getData = JSON.parse(localStorage.getItem(\"data\"));\r\n    let ms = Date.now()\r\n    getData['orderId'] =\"MM\"+ms;\r\n    getData['requestId'] =\"MM\"+ms;\r\n    //getData['checked'] = checked;\r\n    //getData['orderInfo']=Donate.title;\r\n    //getData['donateEvent'] = _id;\r\n    console.log(getData);\r\n    const PayMomo = () => {\r\n        const url = \"http://localhost:4000/api/payMomo\";\r\n        axios.post(url,getData).then((res)=>{\r\n            console.log(\"data\",res.data);\r\n            if(res.data.MomoPay.errorCode===0)\r\n            {\r\n                let url = res.data.MomoPay.payUrl\r\n                console.log(\"url\",url);\r\n                window.open(url)\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <div class=\"checkout-button\">\r\n            <div class=\"content\" >\r\n                <p onClick={PayMomo} class=\"checkout-title\">\r\n                    Thanh toán bằng Ví MoMo\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Momo;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\EditProfile.js",["204"],"import React, { createRef, useState } from 'react';\r\nimport { Modal, Form, Input, Button, message } from 'antd';\r\nimport { LockOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport '../style/Profile.scss';\r\nimport UserApi from '../Api/UserApi';\r\nconst Profile = () => {\r\n    const [Error, setError] = useState(\"\");\r\n    /* const normFile = (e) => {\r\n\r\n        if (Array.isArray(e)) {\r\n            setFile(e.fileList[0].name)\r\n\r\n        }\r\n        return e && e.fileList;\r\n\r\n    }; */\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        UserApi.putUpdateProfile(values)\r\n        .then((res) => {\r\n            if (res.data.status === \"success\") {\r\n                message.success(\"Cập nhật thông tin thành công !\")\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data.User));\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000)\r\n            }\r\n            if (res.data.status === \"error\") {\r\n                message.success(\"Cập nhật thông tin thành công !\")\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data.User));\r\n                setTimeout(() => {\r\n                    window.location.reload();\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"Loi nè: \",error);\r\n        })\r\n    };\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const form = createRef();\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n   const onChangePass =( values)=>{\r\n    UserApi.putChangePasss(values).then((res)=>{\r\n            console.log(res);\r\n            if (res.data.status === \"success\") {\r\n                message.success(\"Thay đổi mật khẩu thành công !\")\r\n                setTimeout(() => {\r\n                    handleCancel()\r\n                }, 1000)\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.response.data.error);\r\n            setError(error.response.data.error)\r\n        })\r\n\r\n   }\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    //console.log(user.phone);    \r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"profile\">\r\n                        <Form\r\n                            name=\"basic\"\r\n                            className=\"profile_form\"\r\n                           /*  labelCol={{ span: 8 }}\r\n                            wrapperCol={{ span: 16 }} */\r\n                            initialValues={{ username: `${user.username}`, fullName: `${user.fullName}`, email: `${user.email}`, id: `${user._id}` }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed} >\r\n                            <Form.Item\r\n                                name=\"id\"\r\n                                hidden>\r\n                                <Input readOnly autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Tên tài khoản:\"\r\n                                name=\"username\">\r\n                                <Input readOnly autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Họ và tên:\"\r\n                                name=\"fullName\">\r\n                                <Input autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                            label=\"Email\"\r\n                                name=\"email\">\r\n                                <Input autoComplete={\"off\"} />\r\n                            </Form.Item>\r\n                            <Form.Item >\r\n                                <Button onClick={showModal}> <KeyOutlined />Đổi mật khẩu</Button>\r\n                            </Form.Item>\r\n                            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Cập nhật\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Modal className=\"model_pass\" footer={null} title=\"Đổi mật khẩu\" visible={isModalVisible} onCancel={handleCancel}>\r\n                <Form\r\n                    name=\"normal_resgiter\"\r\n                    className=\"resgiter-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={onChangePass}\r\n                    ref={form}\r\n                >\r\n                    <p style={{ color: \"red\" }}>{Error}</p> \r\n                    <Form.Item\r\n                        label=\"Mật khẩu cũ\"\r\n                        name=\"oldPassword\"\r\n                        rules={[\r\n                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Mật khẩu mới\"\r\n                        name=\"newPassword\"\r\n                        rules={[\r\n                            { required: true, message: 'Hãy nhập mật khẩu!' },\r\n                            { min: 8, message: 'Mật khẩu phải đủ 8 kí tự' }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Nhập lại mật khẩu\"\r\n                        name=\"passwordConfirm\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Hãy nhập mật khẩu !',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('newPassword') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('Hai mật khẩu phải trùng nhau !'));\r\n                                },\r\n                            }),\r\n                        ]}>\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Đổi mật khẩu\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ProfileUser.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Join.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\MailPost.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AboutUs.js",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":34,"column":11,"nodeType":"211","messageId":"212","endLine":34,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":76,"column":6,"nodeType":"215","endLine":76,"endColumn":8,"suggestions":"216"},{"ruleId":"209","severity":1,"message":"217","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"218","line":1,"column":28,"nodeType":"211","messageId":"212","endLine":1,"endColumn":45},{"ruleId":"209","severity":1,"message":"219","line":1,"column":47,"nodeType":"211","messageId":"212","endLine":1,"endColumn":62},{"ruleId":"209","severity":1,"message":"220","line":1,"column":64,"nodeType":"211","messageId":"212","endLine":1,"endColumn":79},{"ruleId":"213","severity":1,"message":"221","line":130,"column":8,"nodeType":"215","endLine":130,"endColumn":24,"suggestions":"222"},{"ruleId":"209","severity":1,"message":"223","line":131,"column":11,"nodeType":"211","messageId":"212","endLine":131,"endColumn":19},{"ruleId":"213","severity":1,"message":"224","line":12,"column":6,"nodeType":"215","endLine":12,"endColumn":8,"suggestions":"225"},{"ruleId":"205","replacedBy":"226"},{"ruleId":"207","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":5,"column":1,"nodeType":"230","endLine":18,"endColumn":2},{"ruleId":"231","severity":1,"message":"232","line":465,"column":118,"nodeType":"233","messageId":"234","endLine":465,"endColumn":119},{"ruleId":"231","severity":1,"message":"232","line":521,"column":77,"nodeType":"233","messageId":"234","endLine":521,"endColumn":78},{"ruleId":"231","severity":1,"message":"232","line":545,"column":73,"nodeType":"233","messageId":"234","endLine":545,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":550,"column":77,"nodeType":"233","messageId":"234","endLine":550,"endColumn":78},{"ruleId":"209","severity":1,"message":"235","line":4,"column":8,"nodeType":"211","messageId":"212","endLine":4,"endColumn":20},{"ruleId":"209","severity":1,"message":"236","line":2,"column":9,"nodeType":"211","messageId":"212","endLine":2,"endColumn":14},{"ruleId":"209","severity":1,"message":"237","line":3,"column":7,"nodeType":"211","messageId":"212","endLine":3,"endColumn":13},{"ruleId":"209","severity":1,"message":"238","line":8,"column":11,"nodeType":"211","messageId":"212","endLine":8,"endColumn":18},{"ruleId":"205","replacedBy":"239"},{"ruleId":"207","replacedBy":"240"},{"ruleId":"209","severity":1,"message":"241","line":2,"column":42,"nodeType":"211","messageId":"212","endLine":2,"endColumn":51},{"ruleId":"209","severity":1,"message":"242","line":3,"column":10,"nodeType":"211","messageId":"212","endLine":3,"endColumn":14},{"ruleId":"209","severity":1,"message":"243","line":3,"column":16,"nodeType":"211","messageId":"212","endLine":3,"endColumn":24},{"ruleId":"209","severity":1,"message":"244","line":3,"column":38,"nodeType":"211","messageId":"212","endLine":3,"endColumn":43},{"ruleId":"209","severity":1,"message":"245","line":3,"column":45,"nodeType":"211","messageId":"212","endLine":3,"endColumn":50},{"ruleId":"209","severity":1,"message":"246","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":30},{"ruleId":"209","severity":1,"message":"247","line":5,"column":10,"nodeType":"211","messageId":"212","endLine":5,"endColumn":14},{"ruleId":"209","severity":1,"message":"248","line":10,"column":13,"nodeType":"211","messageId":"212","endLine":10,"endColumn":17},{"ruleId":"209","severity":1,"message":"249","line":11,"column":12,"nodeType":"211","messageId":"212","endLine":11,"endColumn":20},{"ruleId":"209","severity":1,"message":"250","line":12,"column":11,"nodeType":"211","messageId":"212","endLine":12,"endColumn":17},{"ruleId":"205","replacedBy":"251"},{"ruleId":"207","replacedBy":"252"},{"ruleId":"213","severity":1,"message":"221","line":89,"column":8,"nodeType":"215","endLine":89,"endColumn":24,"suggestions":"253"},{"ruleId":"209","severity":1,"message":"254","line":2,"column":17,"nodeType":"211","messageId":"212","endLine":2,"endColumn":23},{"ruleId":"209","severity":1,"message":"255","line":2,"column":25,"nodeType":"211","messageId":"212","endLine":2,"endColumn":34},{"ruleId":"209","severity":1,"message":"256","line":2,"column":36,"nodeType":"211","messageId":"212","endLine":2,"endColumn":44},{"ruleId":"209","severity":1,"message":"257","line":46,"column":11,"nodeType":"211","messageId":"212","endLine":46,"endColumn":19},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["260"],"'FacebookOutlined' is defined but never used.","'InstagramOutlined' is defined but never used.","'TwitterOutlined' is defined but never used.","'YoutubeOutlined' is defined but never used.","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["261"],"'Location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["262"],["258"],["259"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'GoogleButton' is defined but never used.","'Table' is defined but never used.","'layout' is assigned a value but never used.","'columns' is assigned a value but never used.",["258"],["259"],"'createRef' is defined but never used.","'Card' is defined but never used.","'Progress' is defined but never used.","'Badge' is defined but never used.","'Input' is defined but never used.","'UsergroupAddOutlined' is defined but never used.","'Link' is defined but never used.","'Text' is assigned a value but never used.","'ellipsis' is assigned a value but never used.","'dayEnd' is assigned a value but never used.",["258"],["259"],["263"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'handleOk' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"266","fix":"270"},"Update the dependencies array to be: [dispatch]",{"range":"271","text":"272"},"Update the dependencies array to be: [_id, idCategoryPost]",{"range":"273","text":"274"},"Update the dependencies array to be: [history]",{"range":"275","text":"276"},{"range":"277","text":"274"},[2731,2733],"[dispatch]",[5243,5259],"[_id, idCategoryPost]",[279,281],"[history]",[3182,3198]]