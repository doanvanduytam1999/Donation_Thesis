[{"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js":"1","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js":"2","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js":"3","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js":"4","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js":"5","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js":"6","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js":"7","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js":"8","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js":"9","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js":"10","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js":"11","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js":"12","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js":"13","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js":"14","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js":"15","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js":"16","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js":"17","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js":"18","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Login.js":"19","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js":"20","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js":"21","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js":"22","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js":"23"},{"size":718,"mtime":1624614279324,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1624076310741,"results":"26","hashOfConfig":"25"},{"size":1016,"mtime":1624635653777,"results":"27","hashOfConfig":"25"},{"size":2640,"mtime":1624641506211,"results":"28","hashOfConfig":"25"},{"size":7225,"mtime":1624076310739,"results":"29","hashOfConfig":"25"},{"size":17011,"mtime":1624635548889,"results":"30","hashOfConfig":"25"},{"size":18041,"mtime":1624519967812,"results":"31","hashOfConfig":"25"},{"size":238,"mtime":1624076310738,"results":"32","hashOfConfig":"25"},{"size":350,"mtime":1624076310738,"results":"33","hashOfConfig":"25"},{"size":407,"mtime":1624083443833,"results":"34","hashOfConfig":"25"},{"size":1755,"mtime":1624077677678,"results":"35","hashOfConfig":"25"},{"size":358,"mtime":1624607143777,"results":"36","hashOfConfig":"25"},{"size":166,"mtime":1624456360714,"results":"37","hashOfConfig":"25"},{"size":1205,"mtime":1624641140099,"results":"38","hashOfConfig":"25"},{"size":371,"mtime":1624467488953,"results":"39","hashOfConfig":"25"},{"size":317,"mtime":1624456000973,"results":"40","hashOfConfig":"25"},{"size":26143,"mtime":1624639589766,"results":"41","hashOfConfig":"25"},{"size":4266,"mtime":1624519434733,"results":"42","hashOfConfig":"25"},{"size":2973,"mtime":1624635872430,"results":"43","hashOfConfig":"25"},{"size":3683,"mtime":1624593023141,"results":"44","hashOfConfig":"25"},{"size":879,"mtime":1624640871434,"results":"45","hashOfConfig":"25"},{"size":1701,"mtime":1624623762691,"results":"46","hashOfConfig":"25"},{"size":3500,"mtime":1624642215130,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1v8q40h",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js",["104"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { useEffect } from 'react';\r\nimport { CookiesProvider } from 'react-cookie';\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n  <Provider store={store}>\r\n    \r\n    <App />\r\n  </Provider>\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["105","106"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js",["107","108"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js",["125","126","127","128","129","130"],"import React, { useEffect, useState } from 'react';\r\nimport { Button,  Table, Modal, Form, Input, Tabs, Steps, Checkbox, Select, Result, InputNumber, Image } from 'antd';\r\nimport parse from 'react-html-parser';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Detail.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport donateEvensts from '../Api/donateEvensts';\r\nimport PayPal from \"../components/Paypal\";\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst columns = [\r\n    {\r\n      title: 'Tên ',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: 'Số tiền ủng hộ',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      \r\n    },\r\n  ];\r\n  \r\n  const data = [\r\n    {\r\n      key: '1',\r\n      name: 'Quách Trọng Nhân',\r\n      phone: '0849119919',\r\n      coin: '1.000 vnđ',\r\n      status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '2.000 vnđ',\r\n        status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '5.000 vnđ',\r\n        status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '4',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '10.000 vnđ',\r\n        status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '5',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '20.000 vnđ',\r\n        status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '6',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '50.000 vnđ',\r\n        status: \"Chưa chuyển \",\r\n    },\r\n    {\r\n        key: '7',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '100.000 vnđ',\r\n        status: \"Đã chuyển \",\r\n    },\r\n    {\r\n        key: '8',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '200.000 vnđ',\r\n        status: \"Chưa chuyển \",\r\n    },\r\n    {\r\n        key: '9',\r\n        name: 'Quách Trọng Nhân',\r\n        phone: '0849119919',\r\n        coin: '500.000 vnđ',\r\n        status: \"Chưa chuyển \",\r\n    },\r\n  ];\r\n\r\nconst Detail = () => {\r\n    let { _id } = useParams();\r\n    const [Donate, setDonate] = useState([]);\r\n    const [img, setImg] = useState([]);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [current, setCurrent] = React.useState(0);\r\n    const showModal = () => {\r\n      setIsModalVisible(true);\r\n      setCurrent(0)\r\n    };\r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        const fetchData = async () => {\r\n            try {\r\n                await donateEvensts.get(_id).then((res) => {\r\n                    res.data.DonateEnvent.soTienCanDonate = res.data.DonateEnvent.soTienCanDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n                    setDonate(res.data.DonateEnvent);\r\n                    console.log('ádas',res.data.DonateEnvent);\r\n                    setImg(res.data.DonateEnvent.hinhAnh)\r\n                    \r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch Donate data at: \", error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(Donate.noiDung);\r\n    \r\n    const phoneSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"84\">+84</Option>\r\n                <Option value=\"85\">+85</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    const [value, setValue] = useState(1);\r\n \r\n    const handlechecked = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n        setChecked(e.target.checked);\r\n\r\n    }\r\n   \r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n    \r\n    const steps = [\r\n        {\r\n            title: 'Nhập thông tin',\r\n            content: () => {\r\n                const onFinish = (values) => {\r\n                    console.log('Success:', values);\r\n                    values['checked'] = checked;\r\n                    const data = JSON.stringify(values)\r\n                    localStorage.setItem(\"data\", data);\r\n                };\r\n                const onFinishFailed = (errorInfo) => {\r\n                    console.log('Failed:', errorInfo.values.name);\r\n                  \r\n\r\n                };\r\n                return (\r\n                    <>\r\n                        <Form\r\n\r\n                            {...layout}\r\n                            name=\"basic\"\r\n                            initialValues={{ prefix: \"84\", coin: \"10000\", id: `${_id}` }}\r\n                            onFinish={onFinish}\r\n                            onFinishFailed={onFinishFailed}\r\n                        >\r\n                            {/*  <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"a\">\r\n                                <Radio.Button value=\"a\">Cá nhân</Radio.Button>\r\n                                <Radio.Button value=\"b\">Tổ chức</Radio.Button>\r\n\r\n                            </Radio.Group> */}\r\n                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                <Checkbox />\r\n\r\n                            </Form.Item>\r\n\r\n\r\n                            {checked === false ? (\r\n                                <>\r\n                                    <Form.Item\r\n                                        label=\"Họ và tên\"\r\n                                        name=\"name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                    >\r\n                                        <Input placeholder=\"Họ và tên của bạn\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label=\"Số điện thoại\"\r\n                                        name=\"phone\"\r\n\r\n                                    >\r\n                                        <Input placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Số tiền ủng hộ\"\r\n                                        rules={[\r\n\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                            },\r\n                                        ]}\r\n                                        name=\"coin\">\r\n                                        <InputNumber\r\n                                            \r\n                                            style={{ width: \"200px\" }}\r\n                                            defaultValue={10000}\r\n                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"content\"\r\n                                        label=\"Lời nhắn\"\r\n                                    >\r\n                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item hidden name=\"id\">\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item wrapperCol={{\r\n                                        xs: { span: 24, offset: 0 },\r\n                                        sm: { span: 16, offset: 8 },\r\n                                    }} >\r\n                                        <Button type=\"primary\"  htmlType=\"submit\">\r\n                                            Xác nhận\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Form.Item hidden name=\"andanh\">\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n\r\n                                        label=\"Số tiền ủng hộ\"\r\n                                        rules={[\r\n\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                            },\r\n                                        ]}\r\n                                        name=\"coin\">\r\n                                        <InputNumber\r\n                                           \r\n                                            style={{ width: \"200px\" }}\r\n                                            defaultValue={10000}\r\n                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                        />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        label='Lời nhắn'\r\n                                        name=\"content\"\r\n                                    >\r\n                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item hidden name=\"id\">\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Xác nhận\r\n                                        </Button>\r\n                                    </Form.Item>\r\n\r\n                                </>\r\n                            )}\r\n\r\n                        </Form>\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Xác nhận',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <p>Số tiền ủng hộ: 100.000đ</p>\r\n                        <p>Lời nhắn:</p>\r\n                        <p>Cùng nhau chung tay đẩy lùi dịch bệnh</p>\r\n                        <PayPal />\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cám ơn',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n    ];\r\n    const convertNumber = (x)=>{\r\n        return   x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    const options = {\r\n        replace: (domNode) => {\r\n          if (domNode.attribs && domNode.attribs.class === \"remove\") {\r\n            return <></>;\r\n          }\r\n        }\r\n      };\r\n     let html= Donate.noiDung;\r\n      \r\n    console.log(html);\r\n    return (\r\n        <>\r\n            <section className=\"detail_header\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"introduce\">\r\n                            <h3 className=\"title\">{Donate.tieuDe}</h3>\r\n                            <h3 style={{ fontSize: \"25px\", fontFamily: \"inherit\" }}> \r\n                                Số tiền cần quyên góp {Donate.soTienCanDonate}VNĐ </h3>\r\n                      \r\n                           \r\n                          \r\n                            <div class=\"fb-like\" data-href=\"https://momo.vn/cong-dong/chung-tay-gay-quy-dung-truong-moi-tang-25-em-hoc-sinh-ban-huoi-chua\" data-width=\"\" data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-share=\"true\"></div>\r\n                            <p style={{ fontSize: \"20px\" }}> {Donate.tomTat}</p>\r\n                        </div>\r\n                        <div className=\"slider\">\r\n                            <div style={{ justifyContent: \"space-between\", display: \"flex\" }}>\r\n                                {img.map((item) => {\r\n                                    return (\r\n                                        <Image\r\n                                            style={{ borderRadius: \"10px\" }}\r\n                                            width={400}\r\n                                            src={item}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"detail_body\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <Tabs defaultActiveKey=\"1\"/*  onChange={callback} */>\r\n                                    <TabPane tab=\"Câu chuyện\" key=\"2\">\r\n                                        {parse(parse(html))}\r\n                            </TabPane>\r\n                                    <TabPane tab=\"Nhà hảo tâm\" key=\"3\">\r\n                                    <Table columns={columns} dataSource={data} />\r\n                            </TabPane>\r\n                                    <TabPane tab=\"Các quyên góp khác\" key=\"4\">\r\n                                        Content of Tab Pane 3\r\n                            </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Tabs defaultActiveKey=\"1\" type=\"card\" /* size={size} */>\r\n                                    <TabPane tab=\"Chuyển khoản\" key=\"1\">\r\n                                        <Steps current={current}>\r\n                                            {steps.map(item => (\r\n                                                <Step key={item.title} title={item.title} />\r\n                                            ))}\r\n                                        </Steps>\r\n                                        <div className=\"steps-content\">{steps[current].content()}</div>\r\n                                        <div className=\"steps-action\">\r\n                                            {current < steps.length - 1 && (\r\n                                                <Button type=\"primary\" onClick={() => next()}>\r\n                                                    Tiếp theo\r\n                                                </Button>\r\n                                            )}\r\n                                            {current === steps.length - 1 && (\r\n                                                <Button type=\"primary\" onClick={showModal}>\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            )}\r\n                                            {current > 0 && (\r\n                                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                                    Trở lại\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Momo\" key=\"2\">\r\n                                        Content of card tab 2\r\n                                </TabPane>\r\n\r\n                                </Tabs>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Modal title=\"Cám ơn\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n            <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n      </Modal>                                   \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js",["131"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default  withRouter(ScrollToTop);",["132","133"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js",["134"],"import React, { useRef, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst Paypal = () => {\r\n    const paypal = useRef();\r\n    const getData = JSON.parse(localStorage.getItem(\"data\"))\r\n   const vndToUsd =(getData.coin/23000).toFixed(2);\r\n\r\n    console.log(vndToUsd);\r\n    useEffect(() => {\r\n        window.paypal\r\n            .Buttons({\r\n                createOrder: (data, actions, err) => {\r\n                    return actions.order.create({\r\n                        intent: \"CAPTURE\",\r\n                        purchase_units: [\r\n                            {\r\n                                description: `${getData.id}`,\r\n                                amount: {\r\n                                    currency_code: \"USD\",\r\n                                    value: `${vndToUsd}`,\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                },\r\n                onApprove: async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    console.log(order.status);\r\n                    const url='http://localhost:4000/donate';\r\n                    if(order.status ===\"COMPLETED\"){\r\n                        console.log(\"abc\");\r\n                        axios.post(url,{\r\n                            data: getData\r\n                        })\r\n                    }\r\n\r\n\r\n                },\r\n                onError: (err) => {\r\n                    console.log(err);\r\n                },\r\n            })\r\n            .render(paypal.current);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div ref={paypal}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paypal;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js",["135","136","137"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n //const  data  = useSelector(state => state.auth.user);\r\n  const user =  JSON.parse(localStorage.getItem(\"user\"));\r\n \r\n  const initialState =user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js",["138"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js",["139","140","141","142","143","144","145","146","147"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js",["148"],"import React from 'react';\r\nimport { Card, Progress, Typography, Badge, } from 'antd';\r\nimport {  UsergroupAddOutlined } from '@ant-design/icons';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nconst ListDonate = (props) => {\r\n    const { Text } = Typography;\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    return (\r\n        <>\r\n            {props.listDonate.map((item) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"col-4 \" >\r\n                            <Badge count={item.tenLoai}>\r\n                                <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n\r\n                                    <Card className=\"margin-top\"\r\n                                        style={{ borderRadius: 10, height: 460 }}\r\n                                        hoverable\r\n                                        cover={<img alt=\"example\" src={item.hinhAnh[0]} />}>\r\n\r\n\r\n\r\n\r\n                                        <Text style={ellipsis ? { width: 250 } : undefined, { fontWeight: \"500\", fontSize: \"18px\" }}\r\n                                            ellipsis={ellipsis ? { tooltip: 'Xem chi tiết !' } : false} >\r\n                                            {item.tieuDe} </Text>\r\n\r\n                                        <Text\r\n                                            style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: 'Xem chi tiết !' } : false} >\r\n                                            {item.tomTat}\r\n                                        </Text>\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress_detail_top\">\r\n                                                <p className=\"progress_detail_text\">\r\n                                                    {convertNumber(item.soTienDonateHieTai)} vnđ quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">\r\n\r\n                                                    {Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (\r\n                                                        <p>Hoàn thành</p>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            <p>\r\n                                                                {Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100)}%\r\n                                                            </p>\r\n\r\n                                                        </>\r\n\r\n                                                    )}\r\n\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <Progress percent={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100)} showInfo={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (true) : (false)} status={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                            <div className=\"progress_detail_bot\">\r\n                                                <p className=\"progress_detail_text\">\r\n                                                    <UsergroupAddOutlined />lượt quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">ngày còn lại</p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </Card>\r\n\r\n                                </Link>\r\n                            </Badge>\r\n                        </div>\r\n                    </>\r\n                )\r\n\r\n            })}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListDonate;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Login.js",["149","150","151"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js",["152","153","154","155","156"],"import React, { useState } from 'react';\r\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd'\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\nconst Resgister = () => {\r\n    const [form] = Form.useForm();\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n    return (\r\n        <>\r\n        <Row className='login-container'>\r\n                <Col className=\"login-form-wrapper\" offset={6} span={10}>\r\n            <Form\r\n                {...formItemLayout}\r\n                form={form}\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n\r\n                scrollToFirstError\r\n            >\r\n                <Form.Item\r\n                    name=\"email\"\r\n                    label=\"E-mail\"\r\n                    rules={[\r\n                        {\r\n                            type: 'email',\r\n                            message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: 'Nhập gmail!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    label=\"Mật khẩu\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Hãy nhập mật khẩu!',\r\n                        },\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Nhập lại mật khẩu!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <Form.Item\r\n                    name=\"phone\"\r\n                    label=\"Số điện thoại\"\r\n                    rules={[{ required: true, message: 'Chưa nhập số điện thoại' }]}\r\n                >\r\n                    <Input  style={{ width: '100%' }} />\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Resgister;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js",["157"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js",["158","159","160","161"],{"ruleId":"162","severity":1,"message":"163","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":19},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"162","severity":1,"message":"163","line":11,"column":17,"nodeType":"164","messageId":"165","endLine":11,"endColumn":26},{"ruleId":"162","severity":1,"message":"170","line":11,"column":28,"nodeType":"164","messageId":"165","endLine":11,"endColumn":36},{"ruleId":"162","severity":1,"message":"171","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"172","line":2,"column":16,"nodeType":"164","messageId":"165","endLine":2,"endColumn":24},{"ruleId":"162","severity":1,"message":"173","line":2,"column":26,"nodeType":"164","messageId":"165","endLine":2,"endColumn":36},{"ruleId":"162","severity":1,"message":"174","line":2,"column":38,"nodeType":"164","messageId":"165","endLine":2,"endColumn":43},{"ruleId":"162","severity":1,"message":"175","line":2,"column":66,"nodeType":"164","messageId":"165","endLine":2,"endColumn":71},{"ruleId":"162","severity":1,"message":"176","line":2,"column":79,"nodeType":"164","messageId":"165","endLine":2,"endColumn":84},{"ruleId":"162","severity":1,"message":"177","line":2,"column":86,"nodeType":"164","messageId":"165","endLine":2,"endColumn":93},{"ruleId":"162","severity":1,"message":"178","line":2,"column":95,"nodeType":"164","messageId":"165","endLine":2,"endColumn":103},{"ruleId":"162","severity":1,"message":"179","line":2,"column":105,"nodeType":"164","messageId":"165","endLine":2,"endColumn":111},{"ruleId":"162","severity":1,"message":"180","line":2,"column":113,"nodeType":"164","messageId":"165","endLine":2,"endColumn":119},{"ruleId":"162","severity":1,"message":"181","line":2,"column":121,"nodeType":"164","messageId":"165","endLine":2,"endColumn":126},{"ruleId":"162","severity":1,"message":"182","line":2,"column":128,"nodeType":"164","messageId":"165","endLine":2,"endColumn":139},{"ruleId":"162","severity":1,"message":"183","line":3,"column":25,"nodeType":"164","messageId":"165","endLine":3,"endColumn":45},{"ruleId":"162","severity":1,"message":"184","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":14},{"ruleId":"162","severity":1,"message":"185","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":14},{"ruleId":"162","severity":1,"message":"186","line":13,"column":10,"nodeType":"164","messageId":"165","endLine":13,"endColumn":20},{"ruleId":"187","severity":1,"message":"188","line":22,"column":23,"nodeType":"189","endLine":22,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":141,"column":8,"nodeType":"192","endLine":141,"endColumn":10,"suggestions":"193"},{"ruleId":"162","severity":1,"message":"194","line":152,"column":12,"nodeType":"164","messageId":"165","endLine":152,"endColumn":17},{"ruleId":"162","severity":1,"message":"195","line":152,"column":19,"nodeType":"164","messageId":"165","endLine":152,"endColumn":27},{"ruleId":"162","severity":1,"message":"196","line":339,"column":11,"nodeType":"164","messageId":"165","endLine":339,"endColumn":24},{"ruleId":"162","severity":1,"message":"197","line":342,"column":11,"nodeType":"164","messageId":"165","endLine":342,"endColumn":18},{"ruleId":"190","severity":1,"message":"198","line":12,"column":6,"nodeType":"192","endLine":12,"endColumn":8,"suggestions":"199"},{"ruleId":"166","replacedBy":"200"},{"ruleId":"168","replacedBy":"201"},{"ruleId":"190","severity":1,"message":"202","line":44,"column":8,"nodeType":"192","endLine":44,"endColumn":10,"suggestions":"203"},{"ruleId":"162","severity":1,"message":"204","line":8,"column":12,"nodeType":"164","messageId":"165","endLine":8,"endColumn":23},{"ruleId":"162","severity":1,"message":"205","line":8,"column":25,"nodeType":"164","messageId":"165","endLine":8,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":16,"column":3,"nodeType":"208","endLine":51,"endColumn":4},{"ruleId":"206","severity":1,"message":"207","line":5,"column":1,"nodeType":"208","endLine":18,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":3,"column":17,"nodeType":"164","messageId":"165","endLine":3,"endColumn":26},{"ruleId":"162","severity":1,"message":"204","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":21},{"ruleId":"162","severity":1,"message":"209","line":9,"column":10,"nodeType":"164","messageId":"165","endLine":9,"endColumn":16},{"ruleId":"162","severity":1,"message":"210","line":33,"column":20,"nodeType":"164","messageId":"165","endLine":33,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":394,"column":43,"nodeType":"213","messageId":"214","endLine":394,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":408,"column":95,"nodeType":"217","messageId":"218","endLine":408,"endColumn":96},{"ruleId":"215","severity":1,"message":"216","line":463,"column":77,"nodeType":"217","messageId":"218","endLine":463,"endColumn":78},{"ruleId":"215","severity":1,"message":"216","line":487,"column":73,"nodeType":"217","messageId":"218","endLine":487,"endColumn":74},{"ruleId":"215","severity":1,"message":"216","line":492,"column":77,"nodeType":"217","messageId":"218","endLine":492,"endColumn":78},{"ruleId":"215","severity":1,"message":"216","line":31,"column":91,"nodeType":"217","messageId":"218","endLine":31,"endColumn":92},{"ruleId":"162","severity":1,"message":"219","line":13,"column":12,"nodeType":"164","messageId":"165","endLine":13,"endColumn":19},{"ruleId":"162","severity":1,"message":"220","line":16,"column":12,"nodeType":"164","messageId":"165","endLine":16,"endColumn":19},{"ruleId":"187","severity":1,"message":"221","line":72,"column":32,"nodeType":"189","endLine":72,"endColumn":43},{"ruleId":"162","severity":1,"message":"170","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"222","line":2,"column":23,"nodeType":"164","messageId":"165","endLine":2,"endColumn":31},{"ruleId":"162","severity":1,"message":"179","line":2,"column":33,"nodeType":"164","messageId":"165","endLine":2,"endColumn":39},{"ruleId":"162","severity":1,"message":"178","line":2,"column":51,"nodeType":"164","messageId":"165","endLine":2,"endColumn":59},{"ruleId":"162","severity":1,"message":"223","line":2,"column":69,"nodeType":"164","messageId":"165","endLine":2,"endColumn":81},{"ruleId":"206","severity":1,"message":"224","line":40,"column":1,"nodeType":"208","endLine":44,"endColumn":3},{"ruleId":"162","severity":1,"message":"225","line":6,"column":10,"nodeType":"164","messageId":"165","endLine":6,"endColumn":18},{"ruleId":"162","severity":1,"message":"219","line":12,"column":12,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"162","severity":1,"message":"226","line":14,"column":13,"nodeType":"164","messageId":"165","endLine":14,"endColumn":23},{"ruleId":"162","severity":1,"message":"220","line":15,"column":11,"nodeType":"164","messageId":"165","endLine":15,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["227"],"no-negated-in-lhs",["228"],"'useState' is defined but never used.","'Card' is defined but never used.","'Progress' is defined but never used.","'Typography' is defined but never used.","'Modal' is defined but never used.","'Radio' is defined but never used.","'Steps' is defined but never used.","'message' is defined but never used.","'Checkbox' is defined but never used.","'Select' is defined but never used.","'Result' is defined but never used.","'Badge' is defined but never used.","'InputNumber' is defined but never used.","'UsergroupAddOutlined' is defined but never used.","'Link' is defined but never used.","'PayPal' is defined but never used.","'useCookies' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'convertNumber' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["230"],["227"],["228"],"React Hook useEffect has missing dependencies: 'getData' and 'vndToUsd'. Either include them or remove the dependency array.",["231"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'logout' is defined but never used.","'setLicked' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'loading' is assigned a value but never used.","'message' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Cascader' is defined but never used.","'AutoComplete' is defined but never used.","Assign object to a variable before exporting as module default","'Redirect' is defined but never used.","'isLoggedIn' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [_id]",{"range":"238","text":"239"},"Update the dependencies array to be: [history]",{"range":"240","text":"241"},"Update the dependencies array to be: [getData, vndToUsd]",{"range":"242","text":"243"},[3764,3766],"[_id]",[279,281],"[history]",[1586,1588],"[getData, vndToUsd]"]