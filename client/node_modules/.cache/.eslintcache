[{"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js":"1","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js":"2","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js":"3","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js":"4","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js":"5","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js":"6","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js":"7","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js":"8","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js":"9","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js":"10","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js":"11","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js":"12","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js":"13","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js":"14","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js":"15","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js":"16","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js":"17","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js":"18","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js":"19","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js":"20","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js":"21","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js":"22","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Profile.js":"23","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Profilecpn.js":"24","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Historydonate.js":"25","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\UserSlice.js":"26","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\UserApi.js":"27","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Contact.js":"28","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AllDonate.js":"29"},{"size":773,"mtime":1625635401022,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1624076310741,"results":"32","hashOfConfig":"31"},{"size":2889,"mtime":1625999845244,"results":"33","hashOfConfig":"31"},{"size":4553,"mtime":1625941701471,"results":"34","hashOfConfig":"31"},{"size":7225,"mtime":1624076310739,"results":"35","hashOfConfig":"31"},{"size":17791,"mtime":1626001820375,"results":"36","hashOfConfig":"31"},{"size":29697,"mtime":1626368421519,"results":"37","hashOfConfig":"31"},{"size":266,"mtime":1625290642505,"results":"38","hashOfConfig":"31"},{"size":350,"mtime":1624076310738,"results":"39","hashOfConfig":"31"},{"size":828,"mtime":1626407871549,"results":"40","hashOfConfig":"31"},{"size":3036,"mtime":1625723937987,"results":"41","hashOfConfig":"31"},{"size":516,"mtime":1625258833190,"results":"42","hashOfConfig":"31"},{"size":166,"mtime":1624456360714,"results":"43","hashOfConfig":"31"},{"size":1090,"mtime":1625118950735,"results":"44","hashOfConfig":"31"},{"size":371,"mtime":1624467488953,"results":"45","hashOfConfig":"31"},{"size":317,"mtime":1624456000973,"results":"46","hashOfConfig":"31"},{"size":26985,"mtime":1625597404437,"results":"47","hashOfConfig":"31"},{"size":5991,"mtime":1626367673821,"results":"48","hashOfConfig":"31"},{"size":3629,"mtime":1625119163285,"results":"49","hashOfConfig":"31"},{"size":856,"mtime":1625313340647,"results":"50","hashOfConfig":"31"},{"size":1663,"mtime":1625286637490,"results":"51","hashOfConfig":"31"},{"size":10791,"mtime":1626404961301,"results":"52","hashOfConfig":"31"},{"size":4325,"mtime":1626371351898,"results":"53","hashOfConfig":"31"},{"size":4156,"mtime":1626408550299,"results":"54","hashOfConfig":"31"},{"size":1191,"mtime":1625305179309,"results":"55","hashOfConfig":"31"},{"size":606,"mtime":1625259365415,"results":"56","hashOfConfig":"31"},{"size":499,"mtime":1625934576025,"results":"57","hashOfConfig":"31"},{"size":4439,"mtime":1625971527776,"results":"58","hashOfConfig":"31"},{"size":6247,"mtime":1626000410350,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1v8q40h",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"63"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"63"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"63"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"63"},"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\index.js",["138","139"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { useEffect } from 'react';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport { CookiesProvider } from 'react-cookie';\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <Provider store={store}>\r\n   \r\n      <App />\r\n\r\n    </Provider>\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["140","141"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\reportWebVitals.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\App.js",["142","143","144"],"import './App.css';\r\nimport Header from './components/Header';\r\nimport 'antd/dist/antd.css';\r\nimport Home from './pages/Home';\r\nimport Footer from './components/Footer';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Detail from './pages/Detail';\r\n//import Login from './pages/Login';\r\nimport Resgister from './pages/Resgister';\r\nimport Profile from './pages/Profile'\r\nimport React, { useState, useEffect } from 'react';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport firebase from 'firebase';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { getMe } from './redux/reducer/UserSlice';\r\nimport Contact from './pages/Contact';\r\nimport AllDonate from './pages/AllDonate';\r\n// Configure Firebase.\r\nconst config = {\r\n  apiKey: 'AIzaSyBuvMsY6qXN0XOR2pjo9g0YJ9JC5yfh9rE',\r\n  authDomain: 'fashionshop-11d42.firebaseapp.com',\r\n  // ...\r\n};\r\nfirebase.initializeApp(config);\r\nfunction App() {\r\n  \r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\r\n  const { isLoggedIn } = useSelector(state => state.login);\r\n  const dispatch = useDispatch();\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      setIsSignedIn(!!user);\r\n      if (!user) {\r\n        console.log(\"Chưa đăng nhập\");\r\n        return\r\n      }\r\n      try {\r\n        const actionResult = await dispatch(getMe());\r\n        const currentUser = unwrapResult(actionResult);\r\n        localStorage.setItem(\"user\", JSON.stringify(currentUser));\r\n        console.log('Logged in user: ', currentUser);\r\n\r\n      } catch (error) {\r\n        console.log('Failed to login ', error.message);\r\n        // show toast error\r\n      }\r\n      console.log(\"Đã đăng nhập\");\r\n    });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n\r\n  }, []);\r\n  if (isLoggedIn) {\r\n    <Redirect to=\"/\" />\r\n\r\n  }\r\n  return (\r\n\r\n    <Router>\r\n     \r\n        <Header />\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n\r\n        </Route>\r\n        <Route exact path=\"/lien-he\">\r\n          <Contact />\r\n\r\n        </Route>\r\n        <Route exact path=\"/tat-ca-chuong-trinh\">\r\n          <AllDonate />\r\n\r\n        </Route>\r\n        <Switch>\r\n          <Route exact path=\"/thong-tin-chi-tiet/:_id\">\r\n            <Detail />\r\n          </Route>\r\n          <Route exact path=\"/thong-tin-tai-khoan\">\r\n            <Profile />\r\n          </Route>\r\n          {/* <Route exact path=\"/dang-nhap\">\r\n            <Login />\r\n          </Route> */}\r\n          <Route exact path=\"/dang-ki\">\r\n            <Resgister />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n    \r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Header.js",["145"],"import React from 'react';\r\nimport { Menu, Row, Col, Button, Dropdown, Badge } from 'antd';\r\n//import { AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { DownOutlined, BellOutlined } from '@ant-design/icons';\r\nimport \"../style/Header.scss\";\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../redux/actions/auth.js\";\r\nimport ModalLogin from './ModalLogin';\r\nimport firebase from 'firebase';\r\nimport donateEvensts from '../Api/donateEvensts';\r\n/* const handleClick = (e) => {\r\n    console.log(e.target);\r\n} */\r\nconst style = {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"500\",\r\n    height: \"65px\",\r\n    lineHeight: \"65px\",\r\n    zIndex: '1000',\r\n}\r\nconst Header = () => {\r\n    const { isLoggedIn } = useSelector((state) => state.login);\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.login.user);\r\n    const logOut = () => {\r\n        donateEvensts.getLogout().then((res)=>{\r\n            if(res.data.status===\"success\"){\r\n                <Redirect to=\"/\" />\r\n                dispatch(logout());\r\n                firebase.auth().signOut();\r\n                localStorage.removeItem('user');\r\n            }\r\n        })\r\n    };\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to=\"\">Trang chủ</Link>\r\n            </Menu.Item>\r\n            <Menu.Item >\r\n                <Link to=\"/thong-tin-tai-khoan\">Thông tin tài khoản</Link>\r\n            </Menu.Item>\r\n            <Menu.Item danger >\r\n                <Link onClick={logOut}>Đăng xuất</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    const notification = (\r\n        <Menu>\r\n            <Menu.Item>\r\n                <Link to=\"\">Trang chủ</Link>\r\n            </Menu.Item>\r\n            <Menu.Item >\r\n                <Link to=\"/thong-tin-tai-khoan\">Thông tin tài khoản</Link>\r\n            </Menu.Item>\r\n            <Menu.Item danger >\r\n                <Link onClick={logOut}>Đăng xuất</Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n    <Redirect to=\"/\" />\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24} >\r\n                    <Menu style={style} /* onClick={handleClick} */ selectedKeys={\"hehe\"} mode=\"horizontal\">\r\n                        <Menu.Item className=\"logo-item\" key=\"mail\">\r\n                            <Link to=\"\"><img alt=\"logo\" style={{ marginLeft: '30px' }} width=\"40px\" src=\"../images/logo.png\" ></img></Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"app\">\r\n                            <a href=\"#register\">Gây quỷ</a>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"about\">\r\n                            Về chúng thôi\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"contact\">\r\n                            <Link to=\"/lien-he\">Liên hệ</Link>\r\n                        </Menu.Item>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Menu.Item className=\"right\" key=\"sign-up\" >\r\n                                    <ModalLogin />\r\n                                </Menu.Item>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Menu.Item className=\"right-lg\" key=\"notification\"  >\r\n\r\n                                    <Dropdown overlay={notification} trigger={['click']}>\r\n                                        <a href=\"#/\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                            <Badge size=\"default\" count={5}>\r\n                                                <BellOutlined style={{ fontSize: \"30px\" }} />\r\n                                            </Badge>\r\n                                        </a>\r\n                                    </Dropdown>\r\n                                </Menu.Item>\r\n                                <Dropdown className='right' overlay={menu}>\r\n                                    <a href=\"#/\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                                        {data.username} <DownOutlined />\r\n                                    </a>\r\n                                </Dropdown>\r\n                            </>\r\n                        )}\r\n                    </Menu>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Footer.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Home.js",["146","147"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, Tabs } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport donateEvensts from '../Api/donateEvensts';\r\n//import { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\n//import PayPal from \"../components/Paypal\"\r\nimport HotListDonate from \"../components/HotListDonate\"\r\nimport ListDonate from '../components/ListDonate';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect,Link } from 'react-router-dom';\r\n\r\n//import { useCookies } from 'react-cookie';\r\n\r\nconst { TabPane } = Tabs;\r\nconst Home = () => {\r\n    const [listDonates, setListdonates] = useState([]);\r\n    const [listDonate, setListdonate] = useState([]);\r\n    const [listCategory, setListCategory] = useState([]); \r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [Count, setCount] = useState(0);\r\n    //const  data  = useSelector(state => state.auth.user);\r\n    const order= JSON.parse(localStorage.getItem(\"orderStatus\"))\r\n        //console.log(data);\r\n        window.scrollTo({ behavior: 'smooth' });\r\n    useEffect(() => {\r\n\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setListdonate(res.data.DonateEnvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n     \r\n        const fetchCategory = async () => {\r\n            try {\r\n                await donateEvensts.getCategory().then((res) => {\r\n                    setListCategory(res.data.CategoryDonateEvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchCategory();\r\n        fetchdonatesData();\r\n\r\n    }, [Count]);\r\n    const handleClick = (e) => {\r\n        setListdonate(listDonates);\r\n        let filterProduct = [];\r\n        if (e === \"1\") {\r\n            filterProduct = listDonates;\r\n        } else {\r\n\r\n            filterProduct = listDonates.filter(\r\n                listDonates => listDonates.loaiBaiDang === e\r\n            )\r\n            setListdonate(filterProduct)\r\n            console.log(filterProduct);\r\n\r\n\r\n        }\r\n    };\r\n    for (let i = 0; i < listDonate.length; i++) {\r\n        for (let j = 0; j < listCategory.length; j++) {\r\n            if (listDonate[i].loaiBaiDang === listCategory[j]._id) {\r\n                //console.log(listCategory[j].tenloai);\r\n                listDonate[i].tenLoai = listCategory[j].tenloai;\r\n                //console.log(listDonate);\r\n            }\r\n\r\n        }\r\n    }\r\n    const [form] = Form.useForm();\r\n    const iconStyle = {\r\n        color: \"#2569d9\"\r\n    }\r\n    const researchStyle = {\r\n        backgroundImage: `url(\"../images/about.png\")`,\r\n    }\r\n    const bghomepageRegister = {\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(\"../images/donate/bg-rs.jpg\")`,\r\n\r\n    }\r\n    const sumConinDonate = ()=>{\r\n        let sum = 0\r\n        for (let i = 0; i < listDonate.length; i++) {\r\n             sum =sum+  Number(listDonate[i].soTienDonateHieTai);\r\n            \r\n        }\r\n        return sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n    }\r\n    console.log(listDonate);\r\n    if(isLoggedIn){\r\n        <Redirect to=\"/\" />\r\n    \r\n      }\r\n    return (\r\n        <>\r\n          <ScrollToTop smooth={true} />\r\n            <div className=\"homepage container-sm\">\r\n                <div className=\"homepage_content col-10 offset-1 \">\r\n                    <div>\r\n                        <h2 className=\"title\" >Hãy quyên góp cho những hoạt động mà bạn quan tâm</h2>\r\n                    </div>\r\n                    <div className=\"commitment\">\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />0% phí dịch vụ</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Thiết kế cho mục đích từ thiệt</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Được nhiều tổ chức từ thiện tin tưởng</p></div>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-primary btn-explore\" href=\"/explore\"><span className=\"btn-text\">Tìm hiểu về tổ chức từ thiện</span></a>\r\n                        </div>\r\n                       {/*  <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-default btn-sign-in\" href=\"/explore\"><span className=\"btn-text\">Explore Charities</span></a>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                    <div className=\"text_wapper\">\r\n                        <p className=\"text-bold \">Chúng tôi đã quyên góp được</p>\r\n                        <h2 className=\"text-bold\"><span>{sumConinDonate()} VNĐ</span></h2>\r\n                        <div className=\"icon-micro-heart\"><img width=\"50px\" alt=\"Heart\" src=\"../images/hands.svg\" /></div>\r\n                        <div className=\"mb-1x\"><span className=\"text-medium\"><div className=\"html-sanitizer\">Hãy giúp chúng thôi một tay</div></span></div>\r\n                        <div className=\"text_wapper-about\"><a href=\"/about-us\"><span className=\"text-bold text-uppercase\">Tìm hiểu về chúng tôi</span></a></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={researchStyle} className=\"bg homepage_research\">\r\n                <div className=\"container\">\r\n                    <div className=\"research_text col-10 offset-1 \">\r\n                        <h2 className=\"text-bold\">Hãy chung tay quyên góp</h2>\r\n                        <p>YÊU THƯƠNG LAN TỎA TỪ NHỮNG CHUYẾN HÀNG CHÌNH TỪ THIỆN</p>\r\n                        <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-primary btn-find-out-how\" href=\"/explore\"><span className=\"btn-text\">Tìm hiểu cách tham gia</span></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"homepage_list_donate list_donate_hot\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text  col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }}  className=\"text-bold\">Nổi bật </h2>\r\n                    </div>\r\n                    <div className=\"list_card col-10 offset-1\">\r\n                        <div className=\"row\">\r\n                            {<HotListDonate listDonates={listDonates}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_list\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các chương trình quyên góp</h2>\r\n                        <Tabs defaultActiveKey=\"1\" size=\"large\" centered onChange={handleClick} style={{ marginBottom: 32, }}>\r\n                            <TabPane tab=\"Tất cả\" key=\"1\">\r\n                            </TabPane>\r\n                           {/*  <TabPane tab=\"Mới nhất\" key=\"2\">\r\n                            </TabPane>\r\n                            <TabPane tab=\"Sắp hết hạn\" key=\"3\">\r\n                            </TabPane> */}\r\n                            {listCategory.map((category) => {\r\n                                return (\r\n                                    <>\r\n                                        <TabPane tab={category.tenloai} key={category._id}>\r\n\r\n                                        </TabPane>\r\n                                    </>\r\n                                )\r\n                            })}\r\n\r\n                        </Tabs>\r\n                        <div className=\"row\" >\r\n                            {<ListDonate listDonate={listDonate} />}  \r\n                            <Link className=\"ant-btn ant-btn-primary bnt-load-more\" to=\"/tat-ca-chuong-trinh\" >Xem tất cả </Link>                       \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_app\">\r\n                <div className=\"container\">\r\n                    <div className=\"app_text col-10 offset-1 \">\r\n                        <h2 className=\"text-bold\">Tải ứng dụng trên điện thoại</h2>\r\n                        <p>Tải ứng dụng miễn phí về điện thoại của bạn và bắt đầu ủng hộ cùng chúng tôi</p>\r\n                        <div className=\"img_dowload\">\r\n                            <img src=\"../images/download-ios.png\" alt=\"download-ios\"></img>\r\n                            <img src=\"../images/download-adr.png\" alt=\"download-adr\"></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={bghomepageRegister} id=\"register\" className=\"homepage_register\">\r\n                <div className=\"container\">\r\n                    <div className=\"register_text col-10 offset-1 \">\r\n                        <h2 className=\"text-bold text-wh \">Hãy tham gia cùng với chúng tôi</h2>\r\n                        <p className=\"text-bold text-wh \">Cùng nhau chia sẽ và giúp đỡ những hoàn cảnh khó khăn</p>\r\n                        <div className=\"form_rs\">\r\n                            <Form form={form}\r\n                                name=\"horizontal_login\"\r\n                                layout=\"inline\"\r\n                        /* onFinish={onFinish} */>\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                >\r\n                                    <Input style={{ width: '255px', height: '40px' }} placeholder=\"Nhâp tên của bạn...\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"email\"\r\n\r\n                                    rules={[\r\n                                        {\r\n                                            type: 'email',\r\n                                            message: 'The input is not valid E-mail!',\r\n                                        },\r\n                                        {\r\n                                            required: true,\r\n                                            message: 'Please input your E-mail!',\r\n                                        },\r\n                                    ]}\r\n                                >\r\n                                    <Input style={{ width: '255px', height: '40px' }} placeholder=\"Nhập gmail\" />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"gmail\"\r\n                                    rules={[{ required: true, message: 'Hãy nhập gmail' }]}\r\n                                >\r\n                                    <Input\r\n                                        style={{ width: '255px', height: '40px' }}\r\n                                        type=\"phone\"\r\n                                        placeholder=\"Nhập số điện thoại của bạn\"\r\n                                    />\r\n                                </Form.Item>\r\n\r\n                            </Form>\r\n                            <div className=\"btn_frm_rs\">\r\n                                <Button style={{ width: \"500px\", height: \"45px\", fontSize: \"20px\", fontWeight: \"700\" }}> Tham gia ngay</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_partner\">\r\n                <div className=\"container\">\r\n                    <div className=\"partner_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các đối tác phi lợi nhuận</h2>\r\n                        <div className=\"wapper_menu\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"operation\" src=\"../images/donate/home/operation.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Operation Smile</p>\r\n                                            <p>Phẫu thuật nụ cười</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"operation\" src=\"../images/donate/home/matran.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Mặt trận Tổ quốc Việt Nam</p>\r\n                                            <p>Uỷ ban Trung ương Mặt trận Tổ quốc Việt Nam</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"suc-manh\" src=\"../images/donate/home/suc-manh.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Sức mạnh 2000</p>\r\n                                            <p>Tiền lẻ mỗi ngày Xây ngay nghìn trường mới</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ marginTop: \"50px\" }} className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"Vinacapital\" src=\"../images/donate/home/vina.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Vinacapital Foundation</p>\r\n                                            <p>Thay đổi cuộc sống cho phụ nữ và trẻ em Việt Nam</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"vc\" src=\"../images/donate/home/vc.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Trung tâm Tình nguyện Quốc gia</p>\r\n                                            <p>Thúc đẩy đam mê tình nguyện</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <div className=\"menu_item\">\r\n                                        <div className=\"img\">\r\n                                            <img className=\"logo_partner\" alt=\"tuoi-tre\" src=\"../images/donate/home/tuoi-tre.jpg\"></img>\r\n                                        </div>\r\n                                        <div className=\"menu_item-text\">\r\n                                            <p className=\"text-bold\">Báo Tuổi Trẻ</p>\r\n                                            <p>Cơ quan ngôn luận của Đoàn Thanh niên Cộng sản Thành phố Hồ Chí Minh</p>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Home;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Detail.js",["148","149","150","151","152"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Progress, Table, Modal, Form, Input, Tabs, Steps, Checkbox, Select, Result, InputNumber, Image } from 'antd';\r\nimport parse from 'react-html-parser';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Detail.scss\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport donateEvensts from '../Api/donateEvensts';\r\nimport PayPal from \"../components/Paypal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ListDonate from '../components/ListDonate';\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst convertNumber1 = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n}\r\nconst columns = [\r\n    {\r\n        title: 'Tên ',\r\n        dataIndex: 'tenNguoiDonate',\r\n        key: 'tenNguoiDonate',\r\n\r\n    },\r\n    {\r\n        title: 'Số tiền ủng hộ (VNĐ)',\r\n        dataIndex: 'soTienDonate',\r\n        key: 'soTienDonate',\r\n        render: text => (\r\n            <>{\r\n              convertNumber1(text)\r\n            }\r\n              \r\n            </>\r\n          ),\r\n    }\r\n];\r\n\r\n\r\nconst Detail = () => {\r\n    let { _id } = useParams();\r\n    const [Donate, setDonate] = useState([]);\r\n    const [DonateID, setDonateID] = useState([]);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const [img, setImg] = useState([]);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [licked, setLicked] = React.useState(false);\r\n    const [value, setValue] = useState(1);\r\n    const [current, setCurrent] = React.useState(0);\r\n    const [AllDonator, setAllDonator] = useState([]);\r\n    const [Count, setCount] = useState(0);\r\n    const data = useSelector(state => state.login.user);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n        setCurrent(0)\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    useEffect(() => {\r\n      \r\n        window.scrollTo(0, 0)\r\n        const fetchData = async () => {\r\n            try {\r\n                await donateEvensts.get(_id).then((res) => {\r\n                    setDonateID(res.data.DonateEnvent)\r\n                    //res.data.DonateEnvent.soTienCanDonate = res.data.DonateEnvent.soTienCanDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n                    setDonate(res.data.DonateEnvent);\r\n                    //console.log('ádas',res.data.DonateEnvent);\r\n                    setImg(res.data.DonateEnvent.hinhAnh)\r\n\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch Donate data at: \", error);\r\n            }\r\n        };\r\n        const fetchAllDonater = async () => {\r\n            try {\r\n                await donateEvensts.getAllDonater(_id).then((res) => {\r\n                    if (res.data.status === \"success\") {\r\n                        /* res.data.AllDonater.soTienDonate = res.data.AllDonater.soTienDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\"); */\r\n                        setAllDonator(res.data.AllDonater)\r\n                    }\r\n\r\n                })\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch AllDonator data at: \", error);\r\n            }\r\n        }\r\n        fetchData();\r\n        fetchAllDonater();\r\n    }, [licked]);\r\n\r\n    AllDonator.forEach(element => {\r\n        element.soTienDonate = element.soTienDonate.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") + 'đ'\r\n\r\n    });\r\n  \r\n    const phoneSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"84\">+84</Option>\r\n                <Option value=\"85\">+85</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    //const [value, setValue] = useState(1);\r\n    const checkBtn = () => {\r\n        setLicked(true)\r\n    }\r\n    const handlechecked = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n        setChecked(e.target.checked);\r\n    }\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n        \r\n    };\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n        setLicked(false)\r\n    };\r\n    const onChange = e => {\r\n        console.log('changed', value);\r\n        let a = value;\r\n        setValue(a)\r\n\r\n    };\r\n    const steps = [\r\n        {\r\n            title: 'Nhập thông tin',\r\n            content: () => {\r\n                const onFinish = (values) => {\r\n                    console.log('Success:', values);\r\n                    checkBtn();\r\n                    values['checked'] = checked;\r\n                    values['id'] = _id;\r\n                    const data = JSON.stringify(values)\r\n                    localStorage.setItem(\"data\", data);\r\n                };\r\n                const onFinishFailed = (errorInfo) => {\r\n                    console.log('Failed:', errorInfo.values.name);\r\n                };\r\n                return (\r\n                    <>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    initialValues={{ prefix: \"84\", coin: \"10000\" }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                        <Checkbox />\r\n                                    </Form.Item>\r\n                                    {checked === false ? (\r\n                                        <>\r\n                                            <Form.Item\r\n                                                label=\"Họ và tên\"\r\n                                                name=\"name\"\r\n                                                rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                \r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Họ và tên của bạn\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số điện thoại\"\r\n                                                name=\"phone\"\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                ]}\r\n                                                name=\"coin\">\r\n                                                <InputNumber\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name=\"content\"\r\n                                                label=\"Lời nhắn\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item wrapperCol={{\r\n                                                xs: { span: 24, offset: 0 },\r\n                                                sm: { span: 16, offset: 8 },\r\n                                            }} >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Form.Item hidden name=\"andanh\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                ]}\r\n                                                name=\"coin\">\r\n                                                <InputNumber\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label='Lời nhắn'\r\n                                                name=\"content\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n\r\n                                        </>\r\n                                    )}\r\n\r\n                                </Form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {data !== [] ? (\r\n                                    <>\r\n                                        <Form\r\n\r\n                                            {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ prefix: \"84\", coin: \"10000\", name: `${data.username}`, phone: \"0849119919\" }}\r\n                                            onFinish={onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                            {/*  <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"a\">\r\n<Radio.Button value=\"a\">Cá nhân</Radio.Button>\r\n<Radio.Button value=\"b\">Tổ chức</Radio.Button>\r\n\r\n</Radio.Group> */}\r\n                                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                                <Checkbox />\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                            {checked === false ? (\r\n                                                <>\r\n                                                    <Form.Item\r\n                                                        label=\"Họ và tên\"\r\n                                                        name=\"name\"\r\n                                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                    >\r\n                                                        <Input style={{ background: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số điện thoại\"\r\n                                                        name=\"phone\"\r\n\r\n                                                    >\r\n                                                        <Input style={{ width: '100%', backgroundColor: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n\r\n                                                    <Form.Item\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                        ]}\r\n                                                        name=\"coin\">\r\n                                                        <InputNumber\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        name=\"content\"\r\n                                                        label=\"Lời nhắn\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item wrapperCol={{\r\n                                                        xs: { span: 24, offset: 0 },\r\n                                                        sm: { span: 16, offset: 8 },\r\n                                                    }} >\r\n                                                        <Button onClick={checkBtn} type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Form.Item hidden name=\"andanh\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                        ]}\r\n                                                        name=\"coin\">\r\n                                                        <InputNumber\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label='Lời nhắn'\r\n                                                        name=\"content\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item >\r\n                                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </Form>\r\n                                    </>\r\n                                ) : (<><p></p></>)}\r\n\r\n                            </>\r\n                        )\r\n                        }\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Xác nhận',\r\n            content: () => {\r\n                const coin = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n                return (\r\n                    <>\r\n                        <p>Số tiền ủng hộ: {convertNumber(coin.coin)}</p>\r\n                        <p>Lời nhắn:</p>\r\n                        <p>{coin.content}</p>\r\n                        <PayPal />\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cám ơn',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n    ];\r\n    const convertNumber = (x) => {\r\n        if (Donate == []) {\r\n            if (Donate.soTienCanDonate) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n        else {\r\n            if (Donate.soTienCanDonate) {\r\n                return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n            }\r\n        }\r\n\r\n    }\r\n    let html = Donate.noiDung;\r\n    return (\r\n        <>\r\n            <section className=\"detail_header\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"introduce\">\r\n                            <h3 className=\"title\">{Donate.tieuDe}</h3>\r\n                            <h3 style={{ fontSize: \"25px\", fontFamily: \"NunitoBold\" }}>\r\n                                Số tiền cần quyên góp {convertNumber(Donate.soTienCanDonate)}VNĐ </h3>\r\n                            <div class=\"fb-like\" data-href=\"https://momo.vn/cong-dong/chung-tay-gay-quy-dung-truong-moi-tang-25-em-hoc-sinh-ban-huoi-chua\" data-width=\"\" data-layout=\"standard\" data-action=\"like\" data-size=\"small\" data-share=\"true\"></div>\r\n                            <p style={{ fontSize: \"20px\" }}> {Donate.tomTat}</p>\r\n                        </div>\r\n                        <div className=\"slider\">\r\n                            <div style={{ justifyContent: \"space-between\", display: \"flex\" }}>\r\n                                {img.map((item) => {\r\n                                    return (\r\n                                        <Image\r\n                                            style={{ borderRadius: \"10px\" }}\r\n                                            width={400}\r\n                                            src={item}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"detail_body\">\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <Tabs defaultActiveKey=\"1\"/*  onChange={callback} */>\r\n                                    <TabPane tab=\"Câu chuyện\" key=\"2\">\r\n                                        {parse(parse(html))}\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Nhà hảo tâm\" key=\"3\">\r\n                                        <Table columns={columns} dataSource={AllDonator} />\r\n                                    </TabPane>\r\n                                    <TabPane tab=\"Các quyên góp khác\" key=\"4\">\r\n                                        Content of Tab Pane 3\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                {\r\n                                    Donate.trangThai ===\"Dừng nhận donate\" ?(<>\r\n                                    <p className=\"tamngung\" >Tạm ngưng</p>\r\n                                    \r\n                                    </>):(<>\r\n                                    {\r\n                                        Number(Donate.soTienDonateHieTai) >= Number(Donate.soTienCanDonate) ? (\r\n                                        <div className=\"progress_detail_top\">\r\n                                            <p className=\"complete\" >Đã hoàn thành</p>\r\n                                            <p className=\"progress_detail_text\">\r\n                                                Đã quyên góp: {convertNumber(DonateID.soTienDonateHieTai)} VNĐ\r\n                                            </p>\r\n                                            <p className=\"progress_detail_number\">\r\n\r\n                                                {Math.floor((DonateID.soTienDonateHieTai / DonateID.soTienCanDonate) * 100) === 100 ? (\r\n                                                    <p>Hoàn thành</p>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <p className=\"progress_detail_number\">{((DonateID.soTienDonateHieTai / DonateID.soTienCanDonate) * 100).toFixed(3)}%</p>\r\n\r\n                                                    </>\r\n\r\n                                                )}\r\n\r\n                                            </p>\r\n\r\n\r\n                                            <Progress percent={Math.floor((Donate.soTienDonateHieTai / Donate.soTienCanDonate) * 100)} showInfo={Math.floor((Donate.soTienDonateHieTai / Donate.soTienCanDonate) * 100) === 100 ? (true) : (false)} status={Math.floor((Donate.soTienDonateHieTai / Donate.soTienCanDonate) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        <>\r\n                                            <Tabs defaultActiveKey=\"1\" type=\"card\" /* size={size} */>\r\n                                                <TabPane tab=\"Chuyển khoản\" key=\"1\">\r\n                                                    <Steps current={current}>\r\n                                                        {steps.map(item => (\r\n                                                            <Step key={item.title} title={item.title} />\r\n                                                        ))}\r\n                                                    </Steps>\r\n                                                    <div className=\"steps-content\">{steps[current].content()}</div>\r\n                                                    <div className=\"steps-action\">\r\n                                                        {current < steps.length - 1 && (\r\n                                                            <Button disabled={\r\n                                                                licked ===true?(false):(true) }  type=\"primary\" onClick={() => next()}>\r\n                                                                Tiếp theo\r\n                                                            </Button>\r\n                                                        )}\r\n                                                        {current === steps.length - 1 && (\r\n                                                            <Button type=\"primary\" onClick={showModal}>\r\n                                                                Xác nhận\r\n                                                            </Button>\r\n                                                        )}\r\n                                                        {current > 0 && (\r\n                                                            <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                                                Trở lại\r\n                                                            </Button>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Momo\" key=\"2\">\r\n                                                    Content of card tab 2\r\n                                                </TabPane>\r\n                                            </Tabs>\r\n                                        </>\r\n\r\n                                    )\r\n                                    }\r\n                                    </>)\r\n                                }\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Modal title=\"Cám ơn\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Result\r\n                    status=\"success\"\r\n                    title=\"Cám ơn bạn đã quyên góp!\"\r\n                    subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                />\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\AxiosClient.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\ScrollToTop.js",["153"],"import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default  withRouter(ScrollToTop);",["154","155"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\donateEvensts.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Paypal.js",["156","157","158"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal,Result,Button } from 'antd';\r\nimport {Link} from \"react-router-dom\"\r\nconst Paypal = () => {\r\n    const paypal = useRef();\r\n    const getData = JSON.parse(localStorage.getItem(\"data\"))\r\n    const vndToUsd = (getData.coin / 23000).toFixed(2);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        window.location.reload();\r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    console.log(vndToUsd);\r\n    useEffect(() => {\r\n        window.paypal\r\n            .Buttons({\r\n                createOrder: (data, actions, err) => {\r\n                    return actions.order.create({\r\n                        intent: \"CAPTURE\",\r\n                        purchase_units: [\r\n                            {\r\n                                description: `${getData.id}`,\r\n                                amount: {\r\n                                    currency_code: \"USD\",\r\n                                    value: `${vndToUsd}`,\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                },\r\n                onApprove: async (data, actions) => {\r\n                    const order = await actions.order.capture();\r\n                    console.log(order.status);\r\n                    const url = 'http://localhost:4000/donate';\r\n                    if (order.status === \"COMPLETED\") {\r\n                        console.log(order.status);\r\n                        axios.post(url, {\r\n                            data: getData\r\n                        }, {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            withCredentials: true\r\n                        })\r\n                        showModal();\r\n\r\n                    }\r\n\r\n\r\n\r\n                },\r\n                onError: (err) => {\r\n                    console.log(err);\r\n                },\r\n            })\r\n            .render(paypal.current);\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div ref={paypal}></div>\r\n            </div>\r\n            <Modal title=\"\" visible={isModalVisible}>\r\n                <Result\r\n                    status=\"success\"\r\n                    title=\"Cám ơn bạn đã ủng hộ !\"\r\n                    subTitle=\"Số tiền sẽ gữi cho người nhận ngay khi kết thúc chương trình !\"\r\n                    extra={[\r\n                        <Button onClick={handleOk} type=\"primary\" key=\"console\">\r\n                            Trở về trang chủ\r\n                        </Button>,\r\n                       \r\n                    ]}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paypal;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\store.js",["159","160","161","162"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport LoginReducer from \"./redux/reducer/auth\";\r\nimport {configureStore} from \"@reduxjs/toolkit\"\r\nimport thunk from \"redux-thunk\";\r\nimport UserReducer from \"./redux/reducer/UserSlice\";\r\n//import reducer from \"./redux/reducer\";\r\nconst middleware = [thunk];\r\n\r\n\r\nconst store = configureStore({\r\n  reducer:{\r\n    login : LoginReducer,\r\n    user :UserReducer\r\n  }\r\n  \r\n});\r\n\r\nexport default store;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\index.js",[],["163","164"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\auth.js",["165"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actions/type\";\r\n\r\n  const user =  JSON.parse(localStorage.getItem(\"user\"));\r\n \r\n  const initialState =user\r\n    ? { isLoggedIn: true, user }\r\n    : { isLoggedIn: false, user: null };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case REGISTER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n        };\r\n      case LOGIN_SUCCESS:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          user: payload.user,\r\n        };\r\n      case LOGIN_FAIL:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      case LOGOUT:\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\message.js",["166"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\type.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\HotListDonate.js",["167","168","169","170","171","172","173","174","175","176"],"import \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Progress, Typography, Modal, Form, Input, Button, Steps, message, Checkbox, Select, Result, InputNumber } from 'antd';\r\nimport { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport PayPal from \"../components/Paypal\"\r\nimport { useSelector } from \"react-redux\";\r\nimport ListDonate from \"./ListDonate\";\r\nimport donateEvensts from \"../Api/donateEvensts\";\r\n//import { logout } from \"../redux/actions/auth.js\";\r\nimport \"../style/HotListDonate.scss\";\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst phoneSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select style={{ width: 70 }}>\r\n            <Option value=\"84\">+84</Option>\r\n            <Option value=\"85\">+85</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);\r\nconst HotListDonate = (props) => {\r\n    const [donator, setDonator] = useState(null)\r\n    const [id, setid] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [ellipsis, /* setEllipsis */] = React.useState(true);\r\n    const [current, setCurrent] = React.useState(0);\r\n    const [licked, setLicked] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(false);\r\n    const [value, setValue] = useState(1);\r\n    const { isLoggedIn } = useSelector(state => state.login);\r\n    const data = useSelector(state => state.login.user);\r\n    const [Listhost, setListhost] = useState(props.listDonates);\r\n    const [Count, setCount] = useState(0);\r\n    const order= JSON.parse(localStorage.getItem(\"user\"))\r\n    useEffect(() => {\r\n        setListhost(props.listDonates);\r\n    }, [props.listDonates, licked,id])\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    const showModal = (e) => {\r\n        setIsModalVisible(true);\r\n        console.log('Content: ', e.currentTarget.dataset.id);\r\n        let id = e.currentTarget.dataset.id\r\n        let filterProduct = [];\r\n\r\n        filterProduct = props.listDonates.filter(\r\n            listDonates => listDonates._id === id\r\n        )\r\n        //setid(filterProduct[0]._id)\r\n        setid(filterProduct[0]._id);\r\n        setDonator(filterProduct)\r\n        setLicked(false)\r\n\r\n\r\n\r\n    };\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        setCurrent(0)\r\n        \r\n    };\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n        setLicked(false)\r\n       \r\n    };\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n        setLicked(false)\r\n    };\r\n    const handlechecked = (e) => {\r\n        console.log(`checked = ${e.target.checked}`);\r\n        onChange(setChecked(e.target.checked))\r\n\r\n\r\n    }\r\n    const onChange = e => {\r\n        console.log('changed', value);\r\n        let a = value;\r\n        setValue(a)\r\n\r\n    };\r\n    const checkBtn = () => {\r\n        setLicked(true)\r\n       \r\n    }\r\n    /* if(order){\r\n        setCount(1)\r\n    } */\r\n    console.log(isLoggedIn);\r\n    const steps = [\r\n        {\r\n            title: 'Nhập thông tin',\r\n            content: () => {\r\n                const onFinish = (values) => {\r\n                    console.log('Success:', values);\r\n                    checkBtn();\r\n                    values['checked'] = checked;\r\n                    values['id'] = id;\r\n                    const data = JSON.stringify(values)\r\n                    localStorage.setItem(\"data\", data);\r\n                };\r\n                const onFinishFailed = (errorInfo) => {\r\n                    console.log('Failed:', errorInfo.values.name);\r\n                };\r\n                return (\r\n                    <>\r\n                        {isLoggedIn === false ? (\r\n                            <>\r\n                                <Form\r\n                                    {...layout}\r\n                                    name=\"basic\"\r\n                                    initialValues={{ prefix: \"84\", coin: \"10000\" }}\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                        <Checkbox />\r\n                                    </Form.Item>\r\n                                    {checked === false ? (\r\n                                        <>\r\n                                            <Form.Item\r\n                                                label=\"Họ và tên\"\r\n                                                name=\"name\"\r\n                                                rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                \r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Họ và tên của bạn\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số điện thoại\"\r\n                                                name=\"phone\"\r\n                                            >\r\n                                                <Input autoComplete=\"off\" placeholder=\"Nhập số điện thoại của bạn \" addonBefore={phoneSelector} style={{ width: '100%' }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                ]}\r\n                                                name=\"coin\">\r\n                                                <InputNumber\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                name=\"content\"\r\n                                                label=\"Lời nhắn\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item wrapperCol={{\r\n                                                xs: { span: 24, offset: 0 },\r\n                                                sm: { span: 16, offset: 8 },\r\n                                            }} >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <Form.Item hidden name=\"andanh\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Số tiền ủng hộ\"\r\n                                                rules={[\r\n\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: 'Hãy nhập số tiền ủng hộ',\r\n                                                    },\r\n                                                ]}\r\n                                                name=\"coin\">\r\n                                                <InputNumber\r\n                                                    onChange={onChange}\r\n                                                    style={{ width: \"200px\" }}\r\n                                                    defaultValue={10000}\r\n                                                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label='Lời nhắn'\r\n                                                name=\"content\"\r\n                                            >\r\n                                                <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                            </Form.Item>\r\n                                            <Form.Item hidden name=\"id\">\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            <Form.Item >\r\n                                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                                    Xác nhận\r\n                                                </Button>\r\n                                            </Form.Item>\r\n\r\n                                        </>\r\n                                    )}\r\n\r\n                                </Form>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {data !== [] ? (\r\n                                    <>\r\n                                        <Form\r\n\r\n                                            {...layout}\r\n                                            name=\"basic\"\r\n                                            initialValues={{ prefix: \"84\", coin: \"10000\", name: `${data.username}`, phone: \"0849119919\" }}\r\n                                            onFinish={onFinish}\r\n                                            onFinishFailed={onFinishFailed}\r\n                                        >\r\n                                            {/*  <Radio.Group onChange={onChange} buttonStyle=\"solid\" defaultValue=\"a\">\r\n<Radio.Button value=\"a\">Cá nhân</Radio.Button>\r\n<Radio.Button value=\"b\">Tổ chức</Radio.Button>\r\n\r\n</Radio.Group> */}\r\n                                            <Form.Item label='Ủng hộ ẩn danh' onChange={handlechecked}>\r\n                                                <Checkbox />\r\n\r\n                                            </Form.Item>\r\n\r\n\r\n                                            {checked === false ? (\r\n                                                <>\r\n                                                    <Form.Item\r\n                                                        label=\"Họ và tên\"\r\n                                                        name=\"name\"\r\n                                                        rules={[{ required: true, message: 'Hãy nhập họ tên của bạn !' }]}\r\n                                                    >\r\n                                                        <Input style={{ background: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label=\"Số điện thoại\"\r\n                                                        name=\"phone\"\r\n\r\n                                                    >\r\n                                                        <Input style={{ width: '100%', backgroundColor: \"#5858583b\" }} readOnly />\r\n                                                    </Form.Item>\r\n\r\n                                                    <Form.Item\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                        ]}\r\n                                                        name=\"coin\">\r\n                                                        <InputNumber\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        name=\"content\"\r\n                                                        label=\"Lời nhắn\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắn (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item wrapperCol={{\r\n                                                        xs: { span: 24, offset: 0 },\r\n                                                        sm: { span: 16, offset: 8 },\r\n                                                    }} >\r\n                                                        <Button onClick={checkBtn} type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <Form.Item hidden name=\"andanh\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n\r\n                                                        label=\"Số tiền ủng hộ\"\r\n                                                        rules={[\r\n\r\n                                                            {\r\n                                                                required: true,\r\n                                                                message: 'Hãy nhập số tiền ủng hộ',\r\n                                                            },\r\n                                                        ]}\r\n                                                        name=\"coin\">\r\n                                                        <InputNumber\r\n                                                            onChange={onChange}\r\n                                                            style={{ width: \"200px\" }}\r\n                                                            defaultValue={10000}\r\n                                                            formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                                            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n\r\n                                                        />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item\r\n                                                        label='Lời nhắn'\r\n                                                        name=\"content\"\r\n                                                    >\r\n                                                        <TextArea placeholder=\"Lời nhắc (không bắt buộc)\" autoSize={{ minRows: 3 }} />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item hidden name=\"id\">\r\n                                                        <Input />\r\n                                                    </Form.Item>\r\n                                                    <Form.Item >\r\n                                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                                            Xác nhận\r\n                                                        </Button>\r\n                                                    </Form.Item>\r\n\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </Form>\r\n                                    </>\r\n                                ) : (<><p></p></>)}\r\n\r\n                            </>\r\n                        )\r\n                        }\r\n\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Xác nhận',\r\n            content: () => {\r\n                const coin = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n                return (\r\n                    <>\r\n                        <p>Số tiền ủng hộ: {convertNumber(coin.coin)}</p>\r\n                        <p>Lời nhắn:</p>\r\n                        <p>{coin.content}</p>\r\n                        <PayPal />\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cám ơn',\r\n            content: () => {\r\n                return (\r\n                    <>\r\n                        <Result\r\n                            status=\"success\"\r\n                            title=\"Cám ơn bạn đã quyên góp!\"\r\n                            subTitle=\"Số tiền sẽ được gửI ngay khi hoàn thành mục tiêu !!!\"\r\n\r\n                        />\r\n\r\n                    </>\r\n                )\r\n\r\n            },\r\n        },\r\n    ];\r\n\r\nconsole.log(licked);\r\n\r\n    return (\r\n        <>\r\n            {Listhost.map((item) => {\r\n                if (item.tinNoiBat === true) {\r\n                    return (\r\n                        <>\r\n                            <div key='1' className=\"col-6 card\">\r\n                                <Card\r\n                                    key='1'\r\n                                    hoverable\r\n                                    style={{ borderRadius: 10, height: 260, width: \"100%\" }}\r\n                                    cover={<img height=\"100%\" alt=\"example\" src={item.hinhAnh[0]} />}\r\n                                >\r\n                                    <p style={{ display: \"none\" }} data-id={item._id}></p>\r\n                                    <div className=\"detail\">\r\n                                        <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n                                            <Text className=\"title-text\" style={ellipsis ? { width: 200 } : undefined, {  color: \"#1890ff\" }}\r\n                                                ellipsis={ellipsis ? { tooltip: `${item.tieuDe}` } : false} >\r\n                                                {item.tieuDe} </Text>\r\n                                        </Link>\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"progress_detail_top\">\r\n                                                <p className=\"progress_detail_text\">\r\n\r\n                                                    {convertNumber(item.soTienDonateHieTai)\r\n                                                    } VNĐ quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">{((item.soTienDonateHieTai / item.soTienCanDonate) * 100).toFixed(3)}%</p>\r\n\r\n                                            </div>\r\n                                            <Progress percent={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100)} showInfo={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (true) : (false)} status={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n\r\n                                            <div className=\"progress_detail_bot\">\r\n                                                <p className=\"progress_detail_text\">\r\n                                                    <UsergroupAddOutlined />{item.luotDonate} lượt quyên góp\r\n                                                </p>\r\n                                                <p className=\"progress_detail_number\">{dayEnd(item.ngayKetThuc)} ngày còn lại</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            Number(item.soTienDonateHieTai) >= Number(item.soTienCanDonate) ? (<p className=\"complete\" >Đã hoàn thành</p>) : (<p className=\"ant-btn ant-btn-primary \" data-id={item._id} onClick={showModal}>Ủng hộ ngay</p>)\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                </Card>\r\n                            </div>\r\n                        </>)\r\n                }\r\n            })\r\n            }\r\n            {donator != null ? (\r\n                <>\r\n\r\n                    <Modal title={donator[0].tieuDe} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                        <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[current].content()}</div>\r\n                        <div className=\"steps-action\">\r\n                            {current < steps.length - 1 && (\r\n                                <>\r\n                                    {<Button disabled={\r\n                                        licked ===true?(false):(true) } \r\n                                        type=\"primary\" onClick={() => next()}>\r\n                                        Tiếp theo\r\n                                    </Button>}\r\n                                </>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={handleCancel, () => message.success('Processing complete!')}>\r\n                                    Hoàn thành\r\n                                </Button>\r\n                            )}\r\n                            {current > 0 && (\r\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                    Trở lại\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </Modal>\r\n\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Modal title={\"ủng hộ\"} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                        <Steps current={current}>\r\n                            {steps.map(item => (\r\n                                <Step key={item.title} title={item.title} />\r\n                            ))}\r\n                        </Steps>\r\n                        <div className=\"steps-content\">{steps[current].content()}</div>\r\n                        <div className=\"steps-action\">\r\n                            {current < steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={onChange, () => next()}>\r\n                                    Tiếp theo\r\n                                </Button>\r\n                            )}\r\n                            {current === steps.length - 1 && (\r\n                                <Button type=\"primary\" onClick={handleCancel, () => message.success('Processing complete!')}>\r\n                                    Hoàn thành\r\n                                </Button>\r\n                            )}\r\n                            {current > 0 && (\r\n                                <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\r\n                                    Trở lại\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                    </Modal>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nexport default HotListDonate;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ListDonate.js",["177","178","179","180"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Progress, Typography, Badge, Input } from 'antd';\r\nimport { UsergroupAddOutlined } from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\nconst { Search } = Input;\r\nconst ListDonate = (props) => {\r\n\r\n    const [list, setlist] = useState([props.listDonate]);\r\n    const { Text } = Typography;\r\n    const [ellipsis, setEllipsis] = React.useState(true);\r\n    const [visible, setVisible] = useState(9);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    }\r\n    const onSearch = (value) => {\r\n        setSearchTerm(value.target.value);\r\n        console.log(value.target.value);\r\n    }\r\n    console.log(list);\r\n    const dayEnd = (day) => {\r\n        const currentDay = new Date();\r\n        let endtDay = Date.parse(day)\r\n        let ngayconlai = (endtDay - currentDay.getTime()) / 1000;\r\n        return Math.floor((ngayconlai / 60) / 60 / 24)\r\n\r\n    }\r\n    /*  useEffect(() => {\r\n         const results = people.filter(person =>\r\n           person.toLowerCase().includes(searchTerm)\r\n         );\r\n         setSearchResults(results);\r\n       }, [searchTerm]); */\r\n    const results = !searchTerm\r\n        ? props.listDonate\r\n        : props.listDonate.filter(list =>\r\n            list.tieuDe.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n        );\r\n    //setSearchResults(results)\r\n    console.log(searchTerm);\r\n    return (\r\n        <>\r\n            <Search className=\"input-search\" type=\"text\"\r\n                placeholder=\"Tìm kiếm\"\r\n                value={searchTerm}\r\n                onChange={onSearch} style={{ width: 800 }}\r\n            />\r\n            {results.slice(0, visible).map((item) => {\r\n                return (\r\n                    <>\r\n                        <div className=\"col-4 \" >\r\n                            <Badge count={item.tenLoai}>\r\n                                <Link to={`thong-tin-chi-tiet/${item._id}`} >\r\n                                    <Card className=\"margin-top\"\r\n                                        style={{ borderRadius: 10, height: 460 }}\r\n                                        hoverable\r\n                                        cover={<img alt=\"example\" src={item.hinhAnh[0]} />}>\r\n                                        <Text className=\"title-text\" style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: 'Xem chi tiết !' } : false} >\r\n                                            {item.tieuDe} </Text>\r\n                                        <Text className=\"title-tomtat\"\r\n                                            style={ellipsis ? { width: 250 } : undefined}\r\n                                            ellipsis={ellipsis ? { tooltip: 'Xem chi tiết !' } : false} >\r\n                                            {item.tomTat}\r\n                                        </Text>\r\n                                        {\r\n                                            item.trangThai === \"Dừng nhận donate\" ? (<><p className=\"tamngung\" >Tạm ngưng</p></>) : (<>\r\n\r\n                                                <div className=\"progress\">\r\n                                                    <div className=\"progress_detail_top\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            {convertNumber(item.soTienDonateHieTai)} vnđ quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">\r\n\r\n                                                            {Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (\r\n                                                                <p>Hoàn thành</p>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <p className=\"progress_detail_number\">{((item.soTienDonateHieTai / item.soTienCanDonate) * 100).toFixed(3)}%</p>\r\n\r\n                                                                </>\r\n\r\n                                                            )}\r\n\r\n                                                        </p>\r\n                                                    </div>\r\n\r\n                                                    <Progress percent={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100)} showInfo={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (true) : (false)} status={Math.floor((item.soTienDonateHieTai / item.soTienCanDonate) * 100) === 100 ? (\"success\") : (\"normal\")} />\r\n                                                    <div className=\"progress_detail_bot\">\r\n                                                        <p className=\"progress_detail_text\">\r\n                                                            <UsergroupAddOutlined /> {item.luotDonate} lượt quyên góp\r\n                                                        </p>\r\n                                                        <p className=\"progress_detail_number\">{dayEnd(item.ngayKetThuc)} ngày còn lại</p>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n\r\n                                            </>)\r\n                                        }\r\n\r\n\r\n                                    </Card>\r\n\r\n                                </Link>\r\n                            </Badge>\r\n                        </div>\r\n                    </>\r\n                )\r\n\r\n            })}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ListDonate;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Resgister.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\services\\autl.services.js",["181"],"import axios from \"axios\";\r\n\r\n\r\nconst API_URL = \"http://localhost:4000\";\r\n//const API_URLRS =\"http://localhost:4000/\";\r\nconst register = (values) => {\r\n  return axios.post(API_URL + \"/signup\",values);\r\n};\r\n\r\nconst login = (values) => {\r\n  \r\n  return axios\r\n    .post(API_URL + \"/login\", values, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n     \r\n    })\r\n    .then((response) => {\r\n      if (response.data.status) {\r\n        \r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.data.user));\r\n        //Cookies.set('userKaca', response.data.data, {path: '/', maxAge: 30000, httpOnly: true });\r\n\r\n      }\r\n\r\n      return response.data.data.user;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\actions\\auth.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\ModalLogin.js",["182","183","184","185","186","187","188","189"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Profile.js",["190","191","192","193","194"],"import React, { useState, useEffect } from 'react';\r\nimport { Tabs, Table, message, Button } from 'antd';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport ProFile from '../components/Profilecpn';\r\nimport HistoryDonate from \"../components/Historydonate\"\r\nimport donateEvensts from '../Api/donateEvensts';\r\nimport { Link, Redirect } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst { TabPane } = Tabs;\r\nconst Profile = () => {\r\n    const islogin = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [AllDonate, setAllDonate] = useState([]);\r\n    const [listDonates, setListdonates] = useState([]);\r\n    const [History, setHistory] = useState([]);\r\n    const [state, setstate] = useState([]);\r\n    const DonateHistory = []\r\n    useEffect(() => {\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setHistory(res.data.DonateEnvents);\r\n\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n        const fetchgetListdonateUser = async () => {\r\n            await donateEvensts.getListdonateUser().then((res) => {\r\n                setAllDonate(res.data.AllDonate);\r\n            })\r\n        }\r\n        fetchgetListdonateUser();\r\n        fetchdonatesData();\r\n    }, []);\r\n    const convertNumber = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n}\r\n    const columns = [\r\n        {\r\n            title: 'Tiêu đề bài viết',\r\n            dataIndex: 'tieuDe',\r\n            key: 'tieude',\r\n        },\r\n        \r\n        {\r\n            title: 'Số tiền đã ủng hộ(VNĐ)',\r\n            dataIndex: 'sotiendonate',\r\n            key: 'sotiendonate',\r\n            render: text => (\r\n                <>{\r\n                    convertNumber(text)\r\n                }\r\n                </>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Xem bài viết',\r\n            dataIndex: '_id',\r\n            key: '_id',\r\n            render: text => (\r\n                <>\r\n                  <Link to={`/thong-tin-chi-tiet/${text}`}><Button>Xem chi tiết</Button> </Link>\r\n                </>\r\n              ),\r\n        }\r\n    ];\r\n    const a = [];\r\n    console.log(AllDonate);\r\n\r\n    AllDonate.forEach(element => {\r\n        a.push(element.chuongTrinhQuyenGop)\r\n    });\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n\r\n        let filterProduct = [];\r\n        filterProduct = History.filter(\r\n            History => History._id === a[i]\r\n        )\r\n\r\n        DonateHistory.push(filterProduct)\r\n\r\n    }\r\n    DonateHistory.forEach((e) => {\r\n        for (let i = 0; i < e.length; i++) {\r\n            for (let j = 0; j < AllDonate.length; j++) {\r\n                if (e[i]._id === AllDonate[j].chuongTrinhQuyenGop) {\r\n                    e[i].sotiendonate = AllDonate[j].soTienDonate;\r\n                    console.log(e);\r\n                }\r\n            }\r\n        }\r\n        //console.log(e[0].tieuDe);\r\n    })\r\n    const merge3 = DonateHistory.flat(1);\r\n\r\n    if (!islogin) {\r\n\r\n        return <Redirect to='/' />;\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container\">\r\n                <div className='col-6 offset-6'>\r\n                    <h3 style={{ fontSize: \"30px\" }}>Thông tin tài khoản</h3>\r\n                </div>\r\n                <div>\r\n                    <Tabs defaultActiveKey=\"1\"  >\r\n                        <TabPane tab=\"Thông tin cá nhân\" key=\"1\">\r\n\r\n                            <ProFile></ProFile>\r\n                        </TabPane>\r\n\r\n                        <TabPane tab=\"Lịch sử ủng hộ\" key=\"2\">\r\n                            <div style={{ textAlign: \"center\" }}>\r\n\r\n                                <Table {...layout}\r\n                                    dataSource={\r\n                                        merge3\r\n\r\n                                    }\r\n\r\n                                    columns={columns} />;\r\n                            </div>\r\n                        </TabPane>\r\n\r\n                    </Tabs>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Profilecpn.js",["195","196","197","198","199","200"],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\components\\Historydonate.js",["201","202","203"],"import React from 'react';\r\nimport {Table} from \"antd\"\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\nconst Historydonate = (props) => {\r\n    const columns = [\r\n        {\r\n          title: 'Tiêu đề bài viết',\r\n          dataIndex: 'tieuDe',\r\n          key: 'tieude',\r\n        },\r\n        {\r\n          title: 'Ngày bắt đầu',\r\n          dataIndex: 'ngayBatSau',\r\n          key: 'ngayBatSau',\r\n        },\r\n        {\r\n          title: 'Ngày kết thúc',\r\n          dataIndex: 'ngayKetThuc',\r\n          key: 'ngayKetThuc',\r\n        },\r\n        {\r\n            title: 'Số tiền đã ủng hộ(VNĐ)',\r\n            dataIndex: 'soTienCanDonate',\r\n            key: 'soTienCanDonate',\r\n          },\r\n          {\r\n            title: 'Số tiền đã quyên góp được(VNĐ)',\r\n            dataIndex: 'soTienDonateHieTai',\r\n            key: 'soTienDonateHieTai',\r\n          },\r\n          {\r\n            title: 'Trạng thai',\r\n            dataIndex: 'trangThai',\r\n            key: 'trangThai',\r\n          },\r\n      ];\r\nconsole.log(props.Historydonate);\r\n    return (\r\n       <>\r\n       \r\n       </>\r\n    );\r\n}\r\n\r\nexport default Historydonate;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\redux\\reducer\\UserSlice.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\Api\\UserApi.js",[],"G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\Contact.js",["204","205","206"],"\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, Form, Input, Button,message } from 'antd';\r\nimport { init, sendForm } from 'emailjs-com';\r\nimport \"../style/bootstrap-grid.min.css\";\r\nimport \"../style/Contact.scss\"\r\nimport { PhoneOutlined, HomeOutlined, SendOutlined } from '@ant-design/icons';\r\ninit('user_34PJkVJOxKj7nBHxWBCKl');\r\nconst Contact = () => {\r\n    const [contactNumber, setContactNumber] = useState(\"000000\");\r\n\r\n    const generateContactNumber = () => {\r\n        const numStr = \"000000\" + (Math.random() * 1000000 | 0);\r\n        setContactNumber(numStr.substring(numStr.length - 6));\r\n    }\r\n    const onFinish = () => {\r\n        message.loading(\"Đang gửi gmail...\")\r\n        generateContactNumber();\r\n        sendForm('service_o3fxixm', 'template_homhg9p', '#basic')\r\n        .then(function(response) {\r\n            if(response.status ===200){\r\n               \r\n                message.success(\"Gửi gmail thành công!\")\r\n                setTimeout(()=>{\r\n                    window.location.reload();\r\n                },1000)\r\n               \r\n            }\r\n          \r\n        }, function(error) {\r\n          console.log('FAILED...', error);\r\n          message.error(\"Gửi gmail không  thành công:\",error)\r\n        });\r\n    };\r\n   let day =\"2018-04-04\"\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <Card style={{ marginTop: \"90px\" }} bordered={true}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 offset-1\">\r\n                            <div className=\" contact_form\">\r\n                                <h3 className=\"title\">Liên lạc</h3>\r\n                                <Form\r\n                                    style={{ width: \"450px\" }}\r\n                                    name=\"basic\"\r\n                                    id=\"basic\"\r\n                                    onFinish={onFinish}  >\r\n                                    <Form.Item\r\n                                        name=\"user_name\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập tên!' }]}\r\n                                    >\r\n                                        <Input   name=\"user_name\" placeholder='Họ tên' />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"user_email\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập gmail!' }]}\r\n                                    >\r\n                                        <Input  name=\"user_email\" placeholder=\"Gmail\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item\r\n                                        name=\"message\"\r\n                                        rules={[{ required: true, message: 'Hãy nhập nội dung!' }]}\r\n                                    >\r\n                                        <Input.TextArea  name=\"message\" rows={5} placeholder=\"Nội dung\" />\r\n                                    </Form.Item>\r\n                                  \r\n                                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">\r\n                                            Gửi gmail\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-4 \">\r\n                            <h3 className=\"title\">Địa chỉ</h3>\r\n                            <div className=\"contact\">\r\n                                <div>\r\n                                    <p><HomeOutlined /> <span className=\"text-bold\">Địa chỉ: </span>80 Cao Lỗ ,quận 8,TP.HCM </p>\r\n                                    <p><PhoneOutlined /><span className=\"text-bold\"> Điện thoại: </span>0849119919</p>\r\n                                    <p><SendOutlined /> <span className=\"text-bold\">Email: </span>quyengop@gmail.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </Card>\r\n\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","G:\\Code\\LVTN\\LVTN\\Donation_Thesis\\client\\src\\pages\\AllDonate.js",["207","208","209","210","211","212"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, Tabs } from 'antd';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport donateEvensts from '../Api/donateEvensts';\r\n//import { Link } from \"react-router-dom\";\r\nimport \"../style/Home.scss\";\r\nimport \"../style/bootstrap-grid.min.css\";\r\n//import PayPal from \"../components/Paypal\"\r\nimport HotListDonate from \"../components/HotListDonate\"\r\nimport ListDonate from '../components/ListDonate';\r\nimport ScrollToTop from \"react-scroll-to-top\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nconst { TabPane } = Tabs;\r\nconst AllDonate = () => {\r\n    const [listDonates, setListdonates] = useState([]);\r\n    const [listDonate, setListdonate] = useState([]);\r\n    const [listCategory, setListCategory] = useState([]);\r\n    useEffect(() => {\r\n\r\n        const fetchdonatesData = async () => {\r\n            try {\r\n                await donateEvensts.getAll().then((res) => {\r\n                    setListdonates(res.data.DonateEnvents);\r\n                    setListdonate(res.data.DonateEnvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(\"Failed to fetch brand data at: \", error);\r\n            }\r\n        };\r\n\r\n        const fetchCategory = async () => {\r\n            try {\r\n                await donateEvensts.getCategory().then((res) => {\r\n                    setListCategory(res.data.CategoryDonateEvents)\r\n                });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        fetchCategory();\r\n        fetchdonatesData();\r\n\r\n    }, []);\r\n    const handleClick = (e) => {\r\n        setListdonate(listDonates);\r\n        let filterProduct = [];\r\n        if (e === \"1\") {\r\n            filterProduct = listDonates;\r\n        } else {\r\n\r\n            filterProduct = listDonates.filter(\r\n                listDonates => listDonates.loaiBaiDang === e\r\n            )\r\n            setListdonate(filterProduct)\r\n            console.log(filterProduct);\r\n\r\n\r\n        }\r\n    };\r\n    for (let i = 0; i < listDonate.length; i++) {\r\n        for (let j = 0; j < listCategory.length; j++) {\r\n            if (listDonate[i].loaiBaiDang === listCategory[j]._id) {\r\n                //console.log(listCategory[j].tenloai);\r\n                listDonate[i].tenLoai = listCategory[j].tenloai;\r\n                //console.log(listDonate);\r\n            }\r\n\r\n        }\r\n    }\r\n    const sumConinDonate = ()=>{\r\n        let sum = 0\r\n        for (let i = 0; i < listDonates.length; i++) {\r\n             sum =sum+  Number(listDonates[i].soTienDonateHieTai);\r\n            \r\n        }\r\n        return sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n    }\r\n    const iconStyle = {\r\n        color: \"#2569d9\"\r\n    }\r\n    return (\r\n        <>\r\n            <ScrollToTop smooth={true} />\r\n            <div className=\"homepage container-sm\">\r\n                <div className=\"homepage_content col-10 offset-1 \">\r\n                    <div>\r\n                        <h2 className=\"title\" >Hãy quyên góp cho những hoạt động mà bạn quan tâm</h2>\r\n                    </div>\r\n                    <div className=\"commitment\">\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />0% phí dịch vụ</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Thiết kế cho mục đích từ thiệt</p></div>\r\n                        <div className=\"commitment__tick\"><p><CheckOutlined style={iconStyle} />Được nhiều tổ chức từ thiện tin tưởng</p></div>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button_wapper \">\r\n                            <a type=\"button\" className=\"ant-btn ant-btn-primary btn-explore\" href=\"/explore\"><span className=\"btn-text\">Tìm hiểu về tổ chức từ thiện</span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text_wapper\">\r\n                        <p className=\"text-bold \">Chúng tôi đã quyên góp được</p>\r\n                        <h2 className=\"text-bold\"><span>{sumConinDonate()} VNĐ</span></h2>\r\n                        <div className=\"icon-micro-heart\"><img width=\"50px\" alt=\"Heart\" src=\"../images/hands.svg\" /></div>\r\n                        <div className=\"mb-1x\"><span className=\"text-medium\"><div className=\"html-sanitizer\">Hãy giúp chúng thôi một tay</div></span></div>\r\n                        <div className=\"text_wapper-about\"><a href=\"/about-us\"><span className=\"text-bold text-uppercase\">Tìm hiểu về chúng tôi</span></a></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage_list\">\r\n                <div className=\"container\">\r\n                    <div className=\"list_donate_text col-10 offset-1 \">\r\n                        <h2 style={{ textAlign: \"center\" }} className=\"text-bold\">Các chương trình quyên góp</h2>\r\n                        <Tabs defaultActiveKey=\"1\" size=\"large\" centered onChange={handleClick} style={{ marginBottom: 32, }}>\r\n                            <TabPane tab=\"Tất cả\" key=\"1\">\r\n                            </TabPane>\r\n                            {/*  <TabPane tab=\"Mới nhất\" key=\"2\">\r\n                            </TabPane>\r\n                            <TabPane tab=\"Sắp hết hạn\" key=\"3\">\r\n                            </TabPane> */}\r\n                            {listCategory.map((category) => {\r\n                                return (\r\n                                    <>\r\n                                        <TabPane tab={category.tenloai} key={category._id}>\r\n\r\n                                        </TabPane>\r\n                                    </>\r\n                                )\r\n                            })}\r\n                        </Tabs>\r\n                        <div className=\"row\" >\r\n                            {<ListDonate listDonate={listDonate} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllDonate;\r\n",{"ruleId":"213","severity":1,"message":"214","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"213","severity":1,"message":"217","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":19},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"213","severity":1,"message":"217","line":12,"column":8,"nodeType":"215","messageId":"216","endLine":12,"endColumn":19},{"ruleId":"213","severity":1,"message":"222","line":28,"column":10,"nodeType":"215","messageId":"216","endLine":28,"endColumn":20},{"ruleId":"223","severity":1,"message":"224","line":53,"column":6,"nodeType":"225","endLine":53,"endColumn":8,"suggestions":"226"},{"ruleId":"213","severity":1,"message":"227","line":2,"column":26,"nodeType":"215","messageId":"216","endLine":2,"endColumn":32},{"ruleId":"213","severity":1,"message":"228","line":23,"column":19,"nodeType":"215","messageId":"216","endLine":23,"endColumn":27},{"ruleId":"213","severity":1,"message":"229","line":25,"column":11,"nodeType":"215","messageId":"216","endLine":25,"endColumn":16},{"ruleId":"213","severity":1,"message":"230","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":18},{"ruleId":"213","severity":1,"message":"231","line":56,"column":12,"nodeType":"215","messageId":"216","endLine":56,"endColumn":17},{"ruleId":"213","severity":1,"message":"228","line":56,"column":19,"nodeType":"215","messageId":"216","endLine":56,"endColumn":27},{"ruleId":"223","severity":1,"message":"232","line":100,"column":8,"nodeType":"225","endLine":100,"endColumn":16,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":431,"column":20,"nodeType":"236","messageId":"237","endLine":431,"endColumn":22},{"ruleId":"223","severity":1,"message":"238","line":12,"column":6,"nodeType":"225","endLine":12,"endColumn":8,"suggestions":"239"},{"ruleId":"218","replacedBy":"240"},{"ruleId":"220","replacedBy":"241"},{"ruleId":"213","severity":1,"message":"242","line":4,"column":9,"nodeType":"215","messageId":"216","endLine":4,"endColumn":13},{"ruleId":"213","severity":1,"message":"243","line":17,"column":11,"nodeType":"215","messageId":"216","endLine":17,"endColumn":23},{"ruleId":"223","severity":1,"message":"244","line":64,"column":8,"nodeType":"225","endLine":64,"endColumn":10,"suggestions":"245"},{"ruleId":"213","severity":1,"message":"246","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":21},{"ruleId":"213","severity":1,"message":"247","line":1,"column":23,"nodeType":"215","messageId":"216","endLine":1,"endColumn":38},{"ruleId":"213","severity":1,"message":"248","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":29},{"ruleId":"213","severity":1,"message":"249","line":8,"column":7,"nodeType":"215","messageId":"216","endLine":8,"endColumn":17},{"ruleId":"218","replacedBy":"250"},{"ruleId":"220","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":15,"column":3,"nodeType":"254","endLine":50,"endColumn":4},{"ruleId":"252","severity":1,"message":"253","line":5,"column":1,"nodeType":"254","endLine":18,"endColumn":2},{"ruleId":"213","severity":1,"message":"230","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":18},{"ruleId":"213","severity":1,"message":"255","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":21},{"ruleId":"213","severity":1,"message":"231","line":42,"column":12,"nodeType":"215","messageId":"216","endLine":42,"endColumn":17},{"ruleId":"213","severity":1,"message":"228","line":42,"column":19,"nodeType":"215","messageId":"216","endLine":42,"endColumn":27},{"ruleId":"213","severity":1,"message":"229","line":43,"column":11,"nodeType":"215","messageId":"216","endLine":43,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":409,"column":34,"nodeType":"258","messageId":"259","endLine":409,"endColumn":36},{"ruleId":"260","severity":1,"message":"261","line":423,"column":118,"nodeType":"262","messageId":"263","endLine":423,"endColumn":119},{"ruleId":"260","severity":1,"message":"261","line":479,"column":77,"nodeType":"262","messageId":"263","endLine":479,"endColumn":78},{"ruleId":"260","severity":1,"message":"261","line":503,"column":73,"nodeType":"262","messageId":"263","endLine":503,"endColumn":74},{"ruleId":"260","severity":1,"message":"261","line":508,"column":77,"nodeType":"262","messageId":"263","endLine":508,"endColumn":78},{"ruleId":"213","severity":1,"message":"214","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"213","severity":1,"message":"264","line":10,"column":18,"nodeType":"215","messageId":"216","endLine":10,"endColumn":25},{"ruleId":"213","severity":1,"message":"265","line":12,"column":22,"nodeType":"215","messageId":"216","endLine":12,"endColumn":33},{"ruleId":"213","severity":1,"message":"266","line":13,"column":21,"nodeType":"215","messageId":"216","endLine":13,"endColumn":31},{"ruleId":"252","severity":1,"message":"267","line":36,"column":1,"nodeType":"254","endLine":40,"endColumn":3},{"ruleId":"213","severity":1,"message":"268","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":26},{"ruleId":"213","severity":1,"message":"269","line":12,"column":7,"nodeType":"215","messageId":"216","endLine":12,"endColumn":15},{"ruleId":"213","severity":1,"message":"270","line":68,"column":11,"nodeType":"215","messageId":"216","endLine":68,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":69,"column":9,"nodeType":"273","endLine":69,"endColumn":40},{"ruleId":"213","severity":1,"message":"274","line":71,"column":11,"nodeType":"215","messageId":"216","endLine":71,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":72,"column":9,"nodeType":"273","endLine":72,"endColumn":39},{"ruleId":"213","severity":1,"message":"275","line":74,"column":11,"nodeType":"215","messageId":"216","endLine":74,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":75,"column":9,"nodeType":"273","endLine":75,"endColumn":38},{"ruleId":"213","severity":1,"message":"276","line":2,"column":23,"nodeType":"215","messageId":"216","endLine":2,"endColumn":30},{"ruleId":"213","severity":1,"message":"277","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":21},{"ruleId":"213","severity":1,"message":"278","line":17,"column":12,"nodeType":"215","messageId":"216","endLine":17,"endColumn":23},{"ruleId":"213","severity":1,"message":"279","line":19,"column":12,"nodeType":"215","messageId":"216","endLine":19,"endColumn":17},{"ruleId":"213","severity":1,"message":"280","line":19,"column":19,"nodeType":"215","messageId":"216","endLine":19,"endColumn":27},{"ruleId":"213","severity":1,"message":"281","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":16},{"ruleId":"213","severity":1,"message":"282","line":2,"column":17,"nodeType":"215","messageId":"216","endLine":2,"endColumn":23},{"ruleId":"213","severity":1,"message":"283","line":3,"column":11,"nodeType":"215","messageId":"216","endLine":3,"endColumn":23},{"ruleId":"213","severity":1,"message":"284","line":7,"column":12,"nodeType":"215","messageId":"216","endLine":7,"endColumn":16},{"ruleId":"213","severity":1,"message":"285","line":8,"column":11,"nodeType":"215","messageId":"216","endLine":8,"endColumn":19},{"ruleId":"213","severity":1,"message":"286","line":30,"column":11,"nodeType":"215","messageId":"216","endLine":30,"endColumn":23},{"ruleId":"213","severity":1,"message":"287","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"288","line":3,"column":7,"nodeType":"215","messageId":"216","endLine":3,"endColumn":13},{"ruleId":"213","severity":1,"message":"289","line":8,"column":11,"nodeType":"215","messageId":"216","endLine":8,"endColumn":18},{"ruleId":"213","severity":1,"message":"214","line":2,"column":27,"nodeType":"215","messageId":"216","endLine":2,"endColumn":36},{"ruleId":"213","severity":1,"message":"290","line":10,"column":12,"nodeType":"215","messageId":"216","endLine":10,"endColumn":25},{"ruleId":"213","severity":1,"message":"291","line":35,"column":8,"nodeType":"215","messageId":"216","endLine":35,"endColumn":11},{"ruleId":"213","severity":1,"message":"292","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"293","line":2,"column":16,"nodeType":"215","messageId":"216","endLine":2,"endColumn":21},{"ruleId":"213","severity":1,"message":"227","line":2,"column":23,"nodeType":"215","messageId":"216","endLine":2,"endColumn":29},{"ruleId":"213","severity":1,"message":"294","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":21},{"ruleId":"213","severity":1,"message":"295","line":12,"column":10,"nodeType":"215","messageId":"216","endLine":12,"endColumn":21},{"ruleId":"213","severity":1,"message":"296","line":13,"column":10,"nodeType":"215","messageId":"216","endLine":13,"endColumn":18},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ScrollToTop' is defined but never used.","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'isSignedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["299"],"'Button' is defined but never used.","'setCount' is assigned a value but never used.","'order' is assigned a value but never used.","'ListDonate' is defined but never used.","'Count' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_id'. Either include it or remove the dependency array.",["300"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["301"],["297"],["298"],"'Link' is defined but never used.","'handleCancel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'vndToUsd'. Either include them or remove the dependency array.",["302"],"'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'composeWithDevTools' is defined but never used.","'middleware' is assigned a value but never used.",["297"],["298"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'donateEvensts' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setlist' is assigned a value but never used.","'setEllipsis' is assigned a value but never used.","'setVisible' is assigned a value but never used.","Assign object to a variable before exporting as module default","'StyledFirebaseAuth' is defined but never used.","'uiConfig' is assigned a value but never used.","'Facebook' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Twitter' is assigned a value but never used.","'Google' is assigned a value but never used.","'message' is defined but never used.","'HistoryDonate' is defined but never used.","'listDonates' is assigned a value but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","'Avatar' is defined but never used.","'Upload' is defined but never used.","'UserOutlined' is defined but never used.","'file' is assigned a value but never used.","'normFile' is assigned a value but never used.","'uploadButton' is assigned a value but never used.","'Table' is defined but never used.","'layout' is assigned a value but never used.","'columns' is assigned a value but never used.","'contactNumber' is assigned a value but never used.","'day' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'HotListDonate' is defined but never used.","'useSelector' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},"Update the dependencies array to be: [dispatch]",{"range":"311","text":"312"},"Update the dependencies array to be: [_id, licked]",{"range":"313","text":"314"},"Update the dependencies array to be: [history]",{"range":"315","text":"316"},"Update the dependencies array to be: [getData, vndToUsd]",{"range":"317","text":"318"},[2021,2023],"[dispatch]",[3507,3515],"[_id, licked]",[279,281],"[history]",[2282,2284],"[getData, vndToUsd]"]